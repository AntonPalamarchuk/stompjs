var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/Frame.html",[0,0.764,1,1.066]],["body/classes/Frame.html",[0,0.923,1,1.883,2,0.474,3,0.376,4,0.292,5,1.405,6,0.59,7,2.688,8,0.442,9,1.447,10,1.447,11,1.604,12,1.447,13,1.021,14,2.2,15,1.638,16,0.914,17,1.878,18,1.511,19,0.742,20,2.2,21,0.332,22,1.021,23,3.685,24,2.257,25,2.737,26,1.031,27,5.004,28,1.568,29,0.044,30,2.19,31,0.666,32,1.437,33,1.717,34,1.717,35,1.73,36,1.717,37,2.315,38,1.651,39,2.2,40,1.717,41,2.688,42,3.312,43,0.924,44,2.688,45,1.878,46,2.2,47,2.688,48,2.711,49,1.44,50,1.27,51,2.711,52,1.638,53,2.48,54,1.717,55,1.717,56,1.405,57,1.2,58,0.735,59,0.529,60,4.019,61,4.8,62,3.354,63,2.48,64,0.924,65,1.046,66,1.717,67,1.717,68,3.748,69,1.717,70,4.069,71,2.688,72,1.878,73,3.312,74,1.717,75,1.717,76,1.405,77,3.016,78,1.717,79,2.775,80,1.717,81,1.2,82,1.717,83,0.735,84,1.717,85,1.878,86,1.638,87,1.046,88,0.474,89,1.717,90,1.717,91,1.717,92,1.717,93,1.717,94,3.312,95,1.289,96,1.717,97,1.717,98,1.847,99,1.717,100,1.717,101,3.748,102,2.688,103,2.688,104,2.688,105,1.405,106,1.717,107,1.717,108,1.717,109,1.717,110,1.717,111,1.717,112,1.405,113,1.717,114,0.822,115,0.59,116,1.717,117,1.717,118,1.717,119,1.717,120,1.717,121,1.717,122,1.717,123,2.688,124,1.717,125,1.405,126,3.312,127,1.418,128,1.717,129,1.717,130,2.284,131,1.717,132,1.717,133,1.717,134,1.717,135,1.717,136,1.717,137,1.717,138,1.717,139,1.717,140,1.717,141,1.717,142,1.717,143,1.717,144,1.717,145,1.717,146,1.717,147,2.688,148,1.717,149,2.688,150,1.717,151,1.717,152,1.717,153,2.688,154,1.717,155,1.2,156,1.717,157,1.405,158,1.717,159,1.717,160,1.405,161,1.717,162,1.717,163,1.717,164,1.717,165,1.717,166,1.405,167,1.717,168,1.717,169,1.717,170,1.717,171,1.717,172,1.717,173,0.019,174,0.019]],["title/interfaces/Message.html",[19,0.856,175,0.6]],["body/interfaces/Message.html",[1,1.848,2,0.894,3,0.709,4,0.55,6,1.114,8,0.286,10,1.743,11,1.82,17,2.972,18,1.391,19,1.588,20,4.126,21,0.627,22,1.311,24,1.386,26,2.061,29,0.043,31,0.628,32,1.631,35,2.1,49,1.174,50,1.631,56,2.651,57,2.263,58,1.386,59,0.999,115,1.462,173,0.031,174,0.031,175,0.823,176,2.651,177,2.592,178,2.592,179,2.592,180,1.848,181,3.318,182,2.3,183,3.073,184,3.523,185,4.252,186,3.239,187,3.073,188,5.041,189,4.126,190,1.933,191,4.252,192,1.462,193,1.311,194,3.48,195,2.713,196,4.252,197,3.239,198,4.252,199,3.239,200,2.651,201,3.239,202,3.239,203,2.651,204,3.239,205,3.239]],["title/classes/Parser.html",[0,0.764,206,1.668]],["body/classes/Parser.html",[0,0.768,2,0.575,3,0.456,4,0.354,18,0.861,21,0.404,22,0.962,23,3.614,24,0.892,25,1.122,26,1.196,28,1.226,29,0.044,30,1.122,31,0.656,32,1.59,48,3.058,49,1.521,50,0.799,51,4.399,52,2.528,59,0.643,60,4.631,64,1.122,79,2.508,98,1.775,105,1.706,114,0.998,115,1.072,127,1.599,130,3.2,173,0.022,174,0.022,192,1.072,193,0.962,195,2.893,206,2.232,207,1.457,208,4.44,209,4.66,210,3.118,211,2.084,212,3.118,213,2.084,214,1.603,215,3.118,216,3.118,217,2.084,218,3.118,219,2.232,220,2.706,221,1.706,222,3.095,223,1.706,224,2.179,225,1.706,226,3.118,227,2.084,228,1.706,229,2.084,230,1.706,231,2.084,232,2.084,233,2.084,234,2.084,235,2.084,236,2.084,237,3.118,238,3.736,239,2.084,240,2.084,241,2.084,242,2.084,243,3.118,244,0.998,245,1.27,246,2.552,247,3.118,248,3.118,249,2.084,250,1.27,251,2.084,252,1.457,253,2.084,254,2.084,255,3.103,256,1.457,257,2.084,258,2.084,259,4.967,260,2.084,261,3.118,262,2.084,263,2.084,264,3.736,265,3.118,266,4.44,267,2.084,268,2.084,269,2.084,270,2.084,271,2.084,272,3.736,273,2.084,274,2.084,275,2.084,276,4.147,277,2.084,278,2.084,279,2.084,280,2.084,281,1.122,282,2.084,283,3.118,284,2.084,285,2.084,286,2.084,287,2.084,288,3.118,289,2.084,290,2.084,291,2.084,292,2.084,293,2.084,294,1.706,295,2.084,296,2.084,297,2.084,298,2.084,299,2.084,300,2.084,301,2.084,302,2.084,303,2.084,304,2.084,305,3.118,306,2.084,307,3.118,308,2.084,309,2.084,310,2.084]],["title/classes/Stomp.html",[0,0.764,8,0.274]],["body/classes/Stomp.html",[0,1.248,2,0.616,3,0.489,4,0.379,6,0.767,8,0.447,11,1.404,16,1.183,21,0.432,22,1.011,23,2.718,26,1.893,28,1.318,29,0.044,31,0.574,32,1.491,38,0.767,43,1.854,49,1.427,50,1.258,58,0.955,59,0.688,77,3.613,79,2.093,83,1.404,86,2.784,88,1.398,95,1.128,98,2.213,115,1.128,173,0.024,174,0.024,177,2.613,180,0.767,182,1.404,190,1.258,192,1.128,193,1.011,214,1.778,219,2.093,245,1.36,311,1.826,312,3.28,313,3.28,314,2.053,315,1.663,316,3.889,317,1.862,318,0.767,319,2.231,320,2.684,321,2.292,322,1.57,323,2.292,324,2.292,325,3.28,326,3.28,327,4.288,328,2.684,329,2.231,330,2.571,331,2.231,332,1.999,333,3.28,334,3.338,335,2.912,336,2.684,337,2.684,338,3.739,339,2.231,340,2.231,341,3.509,342,3.28,343,2.292,344,2.684,345,3.889,346,2.684,347,1.765,348,2.684,349,1.128,350,2.308,351,3.28,352,3.28,353,2.684,354,3.28,355,4.288,356,2.684,357,2.684,358,3.509,359,1.999,360,2.718,361,2.684,362,3.28,363,2.996,364,0.808,365,1.201,366,1.862,367,2.231,368,3.28,369,2.684,370,1.36,371,2.231,372,2.231,373,1.826,374,2.231,375,2.684,376,1.201,377,2.231,378,2.231,379,3.28,380,2.231,381,2.231,382,3.28,383,2.231,384,2.231]],["title/interfaces/StompConfig.html",[175,0.6,385,1.889]],["body/interfaces/StompConfig.html",[2,0.63,3,0.5,4,0.388,6,0.785,8,0.348,11,1.428,18,0.63,21,0.442,22,1.029,28,1.088,29,0.044,31,0.835,35,1.907,37,2.332,50,1.279,58,1.428,59,0.704,64,1.796,115,1.147,130,3.302,173,0.024,174,0.024,175,0.646,179,2.034,180,2.027,193,1.822,200,1.869,214,1.147,315,1.485,385,2.034,386,1.392,387,1.869,388,1.796,389,2.332,390,2.731,391,2.731,392,1.428,393,2.332,394,3.03,395,3.03,396,3.03,397,4.336,398,3.03,399,3.03,400,4.336,401,4.336,402,4.336,403,4.336,404,4.336,405,4.336,406,4.336,407,4.336,408,3.03,409,4.336,410,4.336,411,2.332,412,2.332,413,3.03,414,2.731,415,3.336,416,2.332,417,2.332,418,3.336,419,3.908,420,2.332,421,2.332,422,2.332,423,2.731,424,3.03,425,2.332,426,3.03,427,2.332,428,2.332,429,3.03,430,2.731,431,2.731,432,2.284,433,2.284,434,2.284,435,2.284,436,2.284,437,2.284,438,2.284,439,2.284,440,2.284,441,2.284,442,2.284,443,2.284,444,2.284,445,2.284,446,2.284,447,2.284,448,2.284]],["title/interfaces/StompHeaders.html",[35,1.189,175,0.6]],["body/interfaces/StompHeaders.html",[2,1.151,3,0.913,4,0.708,6,1.434,8,0.368,9,2.244,13,1.285,18,1.471,21,0.807,28,1.557,29,0.041,32,1.599,35,1.91,37,3.858,38,1.434,57,2.913,59,1.285,65,2.541,155,2.913,173,0.036,174,0.036,175,0.965,190,1.599,192,1.434,214,1.434,220,2.541,222,2.541,386,3.037,449,3.412,450,2.913,451,4.169,452,1.151,453,3.412,454,4.169]],["title/interfaces/StompSubscription.html",[175,0.6,455,2.166]],["body/interfaces/StompSubscription.html",[2,1.086,3,0.861,4,0.668,6,1.353,8,0.347,18,1.328,21,0.762,26,1.844,28,1.086,29,0.043,31,0.581,32,1.508,35,2.076,49,1.086,50,1.508,53,2.397,59,1.213,115,1.353,173,0.035,174,0.035,175,0.931,180,1.654,181,3.361,182,2.058,190,1.844,192,1.353,193,1.213,194,3.219,195,2.589,203,3.219,314,2.303,386,2.932,455,3.783,456,3.219,457,3.783,458,4.81,459,3.933,460,4.81,461,2.397,462,3.933]],["title/interfaces/Transaction.html",[175,0.6,463,1.889]],["body/interfaces/Transaction.html",[2,1.023,3,0.812,4,0.63,6,1.275,16,1.28,17,3.241,21,0.718,22,1.43,28,1.397,29,0.043,31,0.747,59,1.143,173,0.033,174,0.033,175,0.898,180,1.823,182,2.336,183,2.826,184,3.241,190,1.422,195,2.496,214,1.823,314,1.775,321,3.241,461,3.232,463,3.511,464,3.034,465,3.034,466,3.034,467,3.707,468,4.557,469,4.557,470,3.795,471,3.795,472,2.496,473,3.707,474,3.707]],["title/classes/Versions.html",[0,0.764,364,0.764]],["body/classes/Versions.html",[0,1.107,2,0.974,3,0.773,4,0.599,6,1.213,8,0.397,21,0.683,22,1.386,28,1.517,29,0.044,31,0.73,32,1.896,38,1.701,49,1.365,53,3.014,59,1.088,77,4.069,173,0.032,174,0.032,318,1.701,349,1.213,364,1.283,475,2.887,476,5.207,477,5.207,478,5.207,479,5.207,480,3.527,481,3.639,482,3.527,483,4.262,484,3.527,485,3.527,486,3.527,487,3.527,488,3.527,489,3.527,490,3.527,491,3.527,492,3.527]],["title/coverage.html",[493,3.381]],["body/coverage.html",[0,1.364,1,1.246,4,0.616,5,2.965,8,0.32,19,1,29,0.043,31,0.535,35,1.389,98,1.55,127,2.32,173,0.033,174,0.033,175,1.072,176,2.965,206,1.95,207,3.789,219,1.95,220,2.208,222,2.208,224,2.532,311,2.965,315,1.117,338,2.965,364,0.893,385,2.208,386,3.052,387,2.965,449,2.965,455,2.532,456,2.965,463,2.208,464,2.965,475,2.965,493,2.965,494,1.55,495,3.623,496,2.965,497,3.623,498,5.815,499,3.623,500,3.623,501,3.623,502,3.623,503,5.007,504,4.57,505,3.623,506,3.623,507,3.675,508,5.258,509,3.623,510,3.623,511,3.623,512,2.532,513,2.532,514,3.623,515,3.623]],["title/index.html",[21,0.511,516,1.609,517,1.42]],["body/index.html",[4,0.507,8,0.464,9,1.606,13,1.242,15,2.778,16,1.258,19,0.824,29,0.029,43,1.678,45,2.085,88,1.449,95,1.026,173,0.029,174,0.029,193,0.92,214,1.026,315,0.92,317,2.182,324,2.085,330,2.453,346,2.442,349,1.385,360,2.085,364,1.293,365,1.606,366,1.429,494,1.723,516,1.819,517,2.167,518,1.429,519,2.447,520,1.277,521,1.606,522,1.928,523,2.984,524,2.085,525,2.085,526,2.984,527,3.295,528,1.819,529,3.295,530,3.73,531,3.295,532,2.984,533,2.442,534,2.085,535,3.295,536,2.442,537,2.984,538,1.819,539,1.819,540,2.085,541,2.984,542,2.984,543,2.442,544,2.442,545,2.984,546,2.442,547,2.442,548,4.557,549,4.026,550,2.984,551,2.984,552,1.819,553,2.984,554,3.185,555,2.442,556,2.626,557,2.442,558,2.336,559,2.442,560,1.819,561,2.085,562,2.085,563,2.984,564,2.442,565,2.442,566,2.984,567,2.085,568,2.442,569,2.442,570,2.442,571,2.167,572,1.819,573,2.442,574,4.026,575,2.085,576,2.085,577,0.735,578,2.984,579,4.026,580,2.984,581,2.984,582,3.295,583,2.167,584,2.778,585,2.984,586,2.442,587,1.429,588,2.984,589,2.984,590,2.984,591,2.442,592,2.085,593,2.442,594,2.984,595,2.984,596,2.442,597,2.984,598,2.984,599,1.429,600,1.429,601,2.984,602,2.167,603,2.085,604,2.085,605,1.819,606,1.819,607,2.984,608,2.167,609,4.026,610,2.778,611,1.606,612,1.819,613,1.819,614,2.442,615,2.984,616,2.984,617,2.984,618,2.442,619,2.442,620,2.984,621,2.984,622,2.442,623,2.442,624,2.442,625,2.442,626,2.442,627,2.778,628,2.085,629,2.442]],["title/license.html",[516,1.609,517,1.42,627,1.609]],["body/license.html",[4,0.637,29,0.034,88,1.288,95,1.289,166,3.067,173,0.034,174,0.034,244,1.794,494,1.604,520,1.604,528,2.284,557,3.067,605,3.099,614,3.067,618,3.067,619,3.067,627,2.284,630,5.085,631,3.067,632,3.747,633,4.668,634,3.747,635,3.747,636,3.747,637,3.747,638,4.668,639,3.747,640,5.322,641,5.772,642,3.747,643,4.668,644,4.162,645,3.747,646,3.821,647,3.747,648,3.747,649,3.747,650,2.284,651,3.067,652,3.747,653,3.067,654,3.747,655,3.747,656,3.747,657,3.747,658,3.747,659,4.668,660,4.668,661,3.747,662,4.668,663,3.747,664,3.747,665,3.747,666,3.747,667,3.747,668,3.747,669,3.747,670,3.747,671,3.747,672,3.747,673,3.747,674,3.747,675,3.747,676,3.747,677,3.747,678,3.747,679,3.067,680,3.747,681,3.747,682,3.747,683,2.619]],["title/modules.html",[684,2.887]],["body/modules.html",[29,0.038,173,0.038,174,0.038,684,3.265]],["title/overview.html",[685,3.381]],["body/overview.html",[0,1.139,29,0.038,173,0.038,174,0.038,175,0.895,685,3.783,686,5.292]],["title/interfaces/publishParams.html",[175,0.6,513,2.166]],["body/interfaces/publishParams.html",[1,1.884,2,0.787,3,0.625,4,0.485,6,0.981,8,0.252,10,2.787,12,2.699,13,1.204,16,0.787,18,1.557,19,1.43,21,0.552,22,1.204,24,2.269,25,1.535,28,1.529,29,0.044,30,2.396,31,0.826,35,1.836,38,0.981,49,0.787,50,1.707,52,1.738,58,1.905,59,1.665,62,3.505,63,2.919,114,1.87,157,2.334,173,0.028,174,0.028,175,0.756,192,1.824,193,1.709,195,2.577,206,1.535,281,2.101,318,1.343,413,1.993,419,1.993,424,1.993,426,1.993,429,1.993,512,1.993,513,2.729,600,1.87,687,2.729,688,4.239,689,3.905,690,2.729,691,2.38,692,2.729,693,2.729,694,2.852,695,1.993,696,2.852,697,2.852,698,2.852,699,2.852,700,1.993,701,2.852,702,2.334,703,1.993,704,3.196]],["title/miscellaneous/typealiases.html",[705,1.609,706,3.701]],["body/miscellaneous/typealiases.html",[1,1.654,10,3.04,12,2.988,16,1.086,19,1.328,21,0.762,28,1.434,29,0.035,31,0.71,38,1.353,49,1.086,52,3.167,62,2.749,173,0.035,174,0.035,192,1.91,206,2.117,214,1.91,413,3.631,419,3.631,424,3.631,426,3.631,429,3.631,512,2.749,700,2.749,702,3.219,703,2.749,704,4.253,705,2.397,707,3.933,708,5.721,709,3.933]],["title/miscellaneous/variables.html",[507,2.586,705,1.609]],["body/miscellaneous/variables.html",[21,0.796,29,0.042,31,0.811,38,1.89,127,1.759,130,3.548,173,0.035,174,0.035,207,2.872,219,2.85,220,3.228,221,3.364,222,3.228,223,3.364,224,3.701,225,3.364,318,1.89,507,2.872,705,2.505,710,5.494]],["title/additional-documentation/introduction.html",[452,0.728,525,1.844,577,0.65]],["body/additional-documentation/introduction.html",[8,0.366,15,2.529,21,0.803,29,0.036,50,1.591,58,2.126,88,1.468,173,0.036,174,0.036,315,1.279,322,1.987,364,1.022,494,2.276,519,1.775,520,1.775,521,2.233,522,1.987,524,2.899,525,2.899,556,2.233,558,1.987,561,2.899,571,2.233,572,2.529,577,1.022,583,2.233,587,1.987,608,2.233,610,3.028,611,2.233,612,2.529,613,2.529,627,3.028,628,2.899,629,3.396,711,4.149,712,4.149,713,3.396,714,2.899,715,3.396,716,4.149,717,3.396,718,3.396,719,4.149]],["title/additional-documentation/usage.html",[15,1.609,452,0.728,577,0.65]],["body/additional-documentation/usage.html",[1,0.871,8,0.457,10,2.544,11,0.497,12,2.249,13,1.521,14,0.95,16,1.153,18,1.344,19,1.567,22,0.358,24,2.055,25,0.625,26,1.842,28,0.992,29,0.043,30,1.785,31,0.439,38,1.236,39,0.95,43,1.141,45,2.92,49,1.226,58,0.837,63,0.707,64,0.625,65,0.707,72,1.77,76,1.6,79,1.363,81,0.811,83,1.084,86,1.544,87,1.192,88,1.377,95,1.527,98,1.419,114,0.556,125,0.95,127,0.837,155,1.366,173,0.014,174,0.014,177,1.192,178,2.33,179,1.192,180,0.871,181,1.366,182,1.419,183,1.811,187,2.33,189,3.286,190,1.272,193,1.288,214,1.141,228,2.073,230,1.6,244,0.936,245,1.544,246,1.6,250,1.811,252,0.811,255,0.811,256,2.076,281,1.052,294,0.95,314,0.936,315,1.674,317,0.556,318,1.381,320,1.6,321,0.811,322,0.936,324,1.77,328,0.95,332,2.33,334,0.811,335,2.632,343,0.811,344,2.432,347,2.324,349,1.527,350,1.934,360,1.366,363,0.811,364,0.624,366,1.423,370,1.544,376,0.625,388,1.052,389,2.076,390,2.432,392,0.497,393,0.811,394,0.811,395,0.811,396,2.076,398,0.811,399,0.811,408,0.811,411,0.811,412,0.811,414,0.95,416,1.366,417,1.366,420,0.811,421,1.366,422,1.366,423,0.95,425,0.811,427,1.77,428,1.366,430,1.6,450,1.366,452,0.82,453,0.95,457,1.77,461,2.021,463,3.152,465,0.95,468,0.95,469,1.6,470,0.95,471,0.95,472,2.39,481,1.366,496,0.95,517,1.363,518,0.556,519,0.837,520,0.497,521,0.625,522,1.213,527,1.6,528,0.707,539,0.707,543,0.95,544,2.432,562,1.366,565,2.073,582,1.6,586,0.95,591,0.95,599,0.556,600,1.922,602,0.625,603,2.076,604,1.366,605,1.192,606,0.707,608,0.625,611,1.052,631,0.95,644,0.95,650,0.707,653,0.95,683,1.366,684,1.366,687,1.77,688,3.129,690,0.811,691,0.707,692,2.076,693,0.811,695,2.076,720,0.811,721,0.95,722,1.955,723,1.161,724,1.161,725,1.161,726,0.95,727,2.532,728,1.161,729,1.161,730,0.95,731,0.707,732,1.6,733,1.955,734,1.955,735,0.95,736,1.161,737,1.161,738,1.161,739,1.6,740,1.161,741,1.161,742,1.955,743,1.161,744,2.971,745,1.811,746,1.955,747,0.707,748,0.707,749,1.161,750,2.532,751,1.161,752,1.161,753,1.161,754,0.95,755,1.161,756,1.161,757,1.161,758,1.161,759,1.161,760,1.161,761,1.161,762,1.955,763,1.6,764,1.161,765,1.6,766,1.161,767,1.161,768,0.95,769,1.161,770,0.95,771,0.95,772,0.95,773,1.6,774,0.95,775,1.6,776,0.95,777,0.95,778,1.6,779,1.161,780,0.95,781,1.161,782,1.161,783,4.178,784,3.594,785,1.161,786,1.161,787,1.161,788,1.6,789,0.95,790,1.161,791,1.161,792,1.161,793,1.955,794,1.161,795,1.955,796,1.161,797,1.161,798,1.161,799,1.161,800,1.161,801,1.6,802,1.955,803,1.161,804,1.366,805,1.161,806,2.942,807,2.073,808,2.073,809,2.073,810,0.95,811,1.161,812,2.432,813,1.161,814,1.161,815,1.161,816,1.161,817,2.512,818,0.95,819,0.95,820,3.129,821,2.532,822,1.161,823,1.955,824,1.161,825,2.532,826,1.161,827,3.316,828,1.955,829,1.955,830,0.95,831,1.161,832,1.161,833,1.6,834,1.161,835,1.161,836,1.161,837,1.161,838,1.192,839,1.161,840,1.161,841,1.161,842,1.161,843,1.955,844,1.161,845,1.161,846,1.955,847,1.161,848,1.161,849,1.161,850,1.955,851,1.161,852,1.161,853,1.161,854,1.161,855,2.532,856,1.161,857,1.161,858,1.161,859,1.161,860,1.161,861,1.955,862,1.161,863,1.161,864,1.161,865,1.161,866,1.161,867,1.161,868,1.161,869,1.161,870,1.161,871,2.073,872,1.955,873,1.161,874,1.161,875,1.161,876,2.532,877,1.366,878,1.6,879,1.955,880,1.366,881,1.161,882,2.432,883,2.532,884,2.532,885,1.955,886,1.161,887,1.161,888,1.955,889,1.161,890,1.161,891,1.161,892,1.955,893,1.161,894,1.161,895,1.161,896,1.161,897,1.161,898,1.161,899,1.161,900,1.161,901,1.77,902,1.366,903,0.707,904,1.6,905,1.161,906,0.95,907,1.161,908,0.95,909,1.6,910,0.95,911,1.161,912,1.161,913,1.6,914,1.955,915,1.6,916,0.95,917,0.811,918,1.161,919,1.161,920,1.161,921,1.161,922,1.161,923,1.161,924,0.95,925,1.161,926,1.161,927,0.95,928,1.161,929,1.161,930,0.95,931,0.95,932,1.161,933,1.161,934,1.161,935,0.95,936,1.161,937,1.161,938,1.955,939,1.161,940,1.161,941,0.811,942,1.161,943,1.161,944,1.161,945,0.707,946,1.161,947,0.95,948,0.707,949,1.161,950,1.161,951,1.161,952,1.161,953,1.161,954,2.532,955,1.161,956,0.95,957,1.161,958,1.161,959,0.95,960,0.707,961,1.161,962,1.161,963,1.161,964,0.95,965,1.161,966,1.161,967,1.161,968,0.95,969,1.161,970,1.161,971,1.161,972,1.161,973,1.161]],["title/additional-documentation/stomp-brokers.html",[8,0.203,13,0.709,452,0.634,577,0.566]],["body/additional-documentation/stomp-brokers.html",[2,1.203,3,0.955,8,0.511,13,1.525,19,1.365,29,0.037,43,1.973,88,0.756,95,1.619,173,0.027,174,0.027,244,2.367,252,1.915,315,1.171,317,2.6,330,2.661,332,2.657,334,1.915,336,2.242,349,1.619,357,2.242,364,1.074,376,1.474,388,2.534,392,1.172,450,2.654,494,1.172,517,2.753,519,1.625,520,1.172,521,1.474,538,1.67,539,1.67,540,1.915,552,1.67,577,0.675,583,2.534,584,1.67,596,2.242,606,2.315,612,1.67,613,2.315,628,1.915,679,2.242,715,2.242,717,2.242,718,2.242,721,2.242,726,2.242,731,2.315,745,1.67,747,1.67,748,2.315,812,2.242,838,2.657,877,2.654,880,1.915,882,2.242,903,2.869,927,3.568,930,3.109,960,1.67,974,2.74,975,2.74,976,3.798,977,3.666,978,2.242,979,2.74,980,3.109,981,2.74,982,2.74,983,2.242,984,1.915,985,1.915,986,1.67,987,2.74,988,2.74,989,5.116,990,3.568,991,2.74,992,2.74,993,2.74,994,1.915,995,2.74,996,2.74,997,2.74,998,2.74,999,2.74,1000,2.74,1001,2.74,1002,2.74,1003,2.74,1004,2.74,1005,2.74,1006,2.74,1007,3.798,1008,3.798,1009,3.798,1010,3.798,1011,3.798,1012,2.74,1013,2.74,1014,2.74,1015,2.74,1016,2.74,1017,2.74,1018,2.74,1019,2.74,1020,2.74,1021,2.74,1022,2.74,1023,2.74,1024,2.74,1025,2.74,1026,2.74,1027,2.74,1028,5.246,1029,2.74,1030,2.74,1031,4.708,1032,2.74,1033,2.74,1034,4.36,1035,3.798,1036,2.74,1037,2.74,1038,2.242,1039,2.74,1040,2.74,1041,2.74,1042,2.74,1043,2.74,1044,2.74,1045,2.74]],["title/additional-documentation/upgrading.html",[452,0.728,571,1.42,577,0.65]],["body/additional-documentation/upgrading.html",[8,0.278,9,1.134,11,1.345,13,0.65,16,1.231,18,1.231,19,0.582,24,1.609,29,0.043,30,1.692,43,0.725,46,1.724,63,1.284,64,2.244,72,1.472,79,2.244,81,2.197,83,0.902,88,1.338,95,1.609,98,1.784,114,1.801,115,1.081,127,0.902,173,0.023,174,0.023,177,1.916,178,1.284,179,1.284,180,1.081,187,1.916,190,1.599,192,0.725,193,1.536,214,1.293,244,2.136,250,1.284,281,2.024,314,1.505,315,1.599,317,1.505,318,0.725,322,1.009,335,1.284,341,1.724,343,1.472,348,1.724,349,1.609,350,2.024,359,1.916,363,1.472,364,1.277,365,2.244,366,1.009,370,1.916,373,3.078,375,1.724,376,1.134,385,1.284,389,2.197,392,1.345,393,1.472,394,1.472,395,1.472,396,1.472,398,1.472,399,1.472,408,1.472,411,1.472,412,1.472,416,1.472,417,1.472,420,2.628,421,1.472,422,1.472,425,1.472,427,1.472,428,2.197,431,1.724,452,1.231,466,1.724,472,1.134,518,1.009,519,0.902,522,1.996,528,2.541,529,3.078,530,1.724,531,1.724,533,1.724,536,2.573,538,1.284,556,2.024,558,2.321,559,3.413,560,1.284,561,2.628,564,2.573,567,2.197,571,2.024,572,1.284,573,3.078,575,1.472,583,2.024,584,2.719,587,1.009,599,1.009,600,1.801,605,1.916,611,1.134,650,1.284,683,1.472,687,1.472,691,1.284,692,1.472,693,2.197,713,1.724,720,1.472,731,1.284,735,2.573,739,1.724,745,1.284,763,1.724,765,1.724,770,2.573,771,2.573,772,2.573,773,2.573,774,2.573,775,3.413,776,1.724,777,1.724,778,2.573,780,1.724,788,1.724,801,2.573,804,1.472,806,3.078,807,3.078,808,3.829,809,3.651,810,2.573,817,2.197,818,1.724,833,1.724,871,1.724,880,1.472,904,1.724,906,1.724,915,1.724,916,1.724,917,1.472,924,1.724,941,1.472,945,1.284,948,2.292,960,2.541,964,1.724,978,1.724,984,1.472,986,1.284,994,1.472,1046,2.107,1047,3.144,1048,2.107,1049,2.107,1050,2.107,1051,2.107,1052,2.107,1053,2.573,1054,2.107,1055,3.144,1056,1.724,1057,2.107,1058,2.107,1059,2.107,1060,2.107,1061,2.107,1062,1.724,1063,2.107,1064,2.107,1065,2.107,1066,2.107,1067,2.107,1068,2.107,1069,1.472,1070,2.107,1071,2.107,1072,1.724,1073,2.107,1074,2.107,1075,2.573,1076,2.107,1077,1.724,1078,1.724,1079,2.107,1080,2.107,1081,2.107,1082,2.107,1083,3.144,1084,2.107,1085,3.761,1086,2.107,1087,2.107,1088,2.107,1089,3.144,1090,1.724,1091,1.724,1092,1.724,1093,2.107,1094,2.107,1095,2.107,1096,2.107,1097,2.107,1098,2.107,1099,2.107,1100,2.107,1101,2.107,1102,2.107,1103,2.107,1104,2.107,1105,2.107,1106,2.107,1107,1.472,1108,2.573,1109,2.107,1110,2.107,1111,2.107,1112,2.107,1113,1.472,1114,2.107,1115,2.107,1116,2.107,1117,1.724,1118,1.724]],["title/additional-documentation/sockjs-support.html",[349,0.79,359,1.401,452,0.634,577,0.566]],["body/additional-documentation/sockjs-support.html",[0,0.852,8,0.305,9,1.861,13,1.066,16,0.954,26,1.701,29,0.037,31,0.655,43,1.997,49,0.954,53,2.107,83,1.48,88,1.583,98,1.48,115,1.189,173,0.032,174,0.032,182,1.48,245,3.15,250,2.107,314,1.655,315,1.066,318,1.189,330,2.388,335,2.107,337,2.83,347,1.861,349,1.838,350,1.861,356,2.83,359,3.333,361,2.83,364,0.852,365,1.861,366,1.655,369,3.631,370,2.986,376,2.388,392,1.48,518,1.655,520,1.899,521,2.637,522,2.619,524,2.416,534,2.416,538,2.704,562,2.416,572,2.107,587,1.655,592,2.416,599,1.655,602,1.861,646,2.83,747,2.107,748,2.107,754,2.83,768,2.83,877,2.416,901,2.416,902,2.416,959,2.83,968,2.83,980,2.83,983,2.83,984,2.416,985,2.416,986,2.107,1069,2.416,1075,2.83,1107,2.416,1108,2.83,1119,3.457,1120,3.457,1121,3.457,1122,3.457,1123,3.457,1124,3.457,1125,3.457,1126,3.457,1127,3.457,1128,3.457,1129,3.457,1130,3.457,1131,3.457,1132,2.83]],["title/additional-documentation/change-log.html",[452,0.634,558,1.1,577,0.566,608,1.237]],["body/additional-documentation/change-log.html",[0,0.612,1,1.22,3,0.777,4,0.603,8,0.421,11,1.518,12,2.226,16,0.979,18,1.409,19,0.979,26,1.729,29,0.039,31,0.367,38,1.22,43,1.22,49,0.686,65,1.515,83,1.064,85,1.737,86,1.515,87,1.515,88,1.245,95,1.22,112,2.903,114,1.19,127,1.064,160,2.034,173,0.025,174,0.03,178,2.521,180,1.551,183,2.162,184,2.479,187,1.515,190,1.586,192,0.855,193,1.094,255,1.737,256,2.479,281,1.338,315,1.47,318,0.855,322,1.98,323,1.737,332,2.521,347,1.338,349,1.551,350,1.338,353,2.034,358,2.034,364,1.175,365,1.909,388,1.338,391,2.903,392,1.064,452,0.686,457,1.737,461,2.162,472,1.909,481,1.737,483,3.691,494,2.041,518,1.19,519,1.064,547,2.034,552,1.515,554,3.151,556,1.338,558,2.374,560,3.11,571,1.338,575,1.737,576,1.737,577,0.612,587,1.698,592,1.737,593,2.034,599,1.19,600,1.19,602,2.427,608,1.338,611,1.338,622,2.903,623,2.903,624,2.903,625,2.903,626,2.034,650,1.515,691,1.515,695,2.479,700,1.737,714,1.737,730,2.034,731,2.521,745,2.162,748,1.515,804,3.151,817,2.479,819,2.034,820,2.034,838,2.521,901,2.479,902,2.479,903,1.515,908,2.034,909,3.385,910,2.034,917,1.737,931,2.034,935,2.903,945,1.515,948,1.515,956,2.034,977,1.737,985,1.737,994,1.737,1077,2.034,1078,2.034,1090,2.034,1091,2.034,1092,2.034,1107,2.479,1113,2.89,1117,2.903,1133,2.486,1134,2.486,1135,4.768,1136,2.486,1137,2.486,1138,2.486,1139,2.486,1140,2.486,1141,2.486,1142,4.768,1143,2.486,1144,2.486,1145,2.486,1146,2.486,1147,2.486,1148,2.486,1149,3.547,1150,2.486,1151,2.486,1152,2.486,1153,2.486,1154,2.486,1155,2.486,1156,2.486,1157,2.034,1158,2.486,1159,2.486,1160,2.486,1161,2.486,1162,2.486,1163,2.486,1164,2.486,1165,2.486,1166,2.486,1167,2.486,1168,2.486,1169,2.486,1170,2.486,1171,2.486,1172,2.486,1173,2.486,1174,2.486,1175,2.034,1176,2.034,1177,2.486,1178,2.486,1179,2.486,1180,2.486,1181,2.486,1182,2.486,1183,2.486,1184,2.486,1185,2.486,1186,2.486,1187,2.486,1188,2.486,1189,3.547,1190,2.486,1191,2.486,1192,2.486,1193,2.486,1194,2.486,1195,2.486,1196,2.486,1197,2.486,1198,2.486,1199,2.486,1200,2.486,1201,2.486,1202,2.486,1203,2.486,1204,2.486,1205,2.486,1206,2.486,1207,2.486,1208,2.486,1209,2.486,1210,2.486,1211,2.486,1212,3.547,1213,2.034,1214,2.486]],["title/additional-documentation/how-to-contribute.html",[452,0.728,577,0.65,610,1.609]],["body/additional-documentation/how-to-contribute.html",[1,1.589,3,0.503,4,0.82,8,0.44,13,1.033,16,1.2,18,1.091,22,1.033,24,1.433,25,1.235,29,0.043,31,0.339,32,0.88,43,0.79,83,1.692,85,1.604,87,1.399,88,1.461,95,0.79,115,0.79,173,0.024,174,0.024,180,0.79,182,1.433,219,1.235,244,1.604,317,1.099,318,1.152,322,2.213,323,2.763,330,1.235,347,2.128,364,0.566,366,1.604,388,1.802,392,1.692,472,1.235,494,1.978,516,1.399,518,1.099,519,1.433,520,1.433,522,2.31,534,2.763,535,1.879,539,2.041,540,2.34,546,1.879,552,1.399,554,1.604,555,2.741,556,2.487,558,1.099,560,1.399,567,2.34,568,2.741,569,2.741,570,2.741,576,3.037,577,0.566,583,1.235,584,2.41,587,1.604,599,1.604,600,1.893,602,1.235,603,2.763,604,2.34,606,2.941,610,2.041,612,1.399,613,2.041,651,1.879,690,2.34,703,1.604,714,2.34,720,1.604,732,1.879,747,1.399,789,1.879,830,1.879,838,2.649,878,1.879,903,1.399,913,1.879,941,1.604,945,2.041,947,1.879,948,1.399,960,1.399,977,3.482,986,1.399,990,1.879,1038,1.879,1053,1.879,1056,1.879,1062,2.741,1069,1.604,1072,1.879,1113,3.826,1118,1.879,1132,2.741,1157,1.879,1175,3.949,1176,1.879,1213,1.879,1215,2.296,1216,2.296,1217,2.296,1218,3.349,1219,2.296,1220,3.349,1221,4.346,1222,2.296,1223,4.622,1224,2.296,1225,2.296,1226,2.296,1227,3.349,1228,4.346,1229,2.296,1230,2.296,1231,2.296,1232,4.346,1233,3.954,1234,2.296,1235,2.296,1236,2.296,1237,2.296,1238,2.296,1239,2.296,1240,2.296,1241,2.296,1242,2.296,1243,2.296,1244,2.296,1245,2.296,1246,2.296,1247,2.296,1248,3.954,1249,3.349,1250,2.296,1251,2.296,1252,2.296,1253,2.296,1254,3.349,1255,2.296,1256,2.296,1257,3.349,1258,2.296,1259,2.296,1260,2.296,1261,2.296,1262,4.346,1263,2.296,1264,2.296,1265,2.296,1266,2.296,1267,2.296,1268,2.296,1269,2.296,1270,3.349,1271,2.296,1272,3.349,1273,2.296,1274,2.296,1275,2.296,1276,2.296,1277,2.296,1278,2.296,1279,2.296,1280,2.296,1281,2.296,1282,2.296,1283,2.296,1284,2.296,1285,2.296,1286,2.296,1287,2.296,1288,2.296,1289,2.296,1290,2.296,1291,2.296,1292,2.296,1293,2.296,1294,2.296,1295,2.296,1296,2.296,1297,2.296,1298,2.296,1299,2.296,1300,2.296,1301,2.296,1302,2.296,1303,2.296,1304,2.296]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["0",{"_index":127,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["0/1",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":479,"title":{},"body":{"classes/Versions.html":{}}}],["1.1",{"_index":481,"title":{},"body":{"classes/Versions.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["1.2",{"_index":483,"title":{},"body":{"classes/Versions.html":{},"additional-documentation/change-log.html":{}}}],["1.2.html",{"_index":1299,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["1/1",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":221,"title":{},"body":{"classes/Parser.html":{},"miscellaneous/variables.html":{}}}],["10,000m",{"_index":905,"title":{},"body":{"additional-documentation/usage.html":{}}}],["100",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["10000m",{"_index":1211,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["11e2",{"_index":1022,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["123",{"_index":1019,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["13",{"_index":223,"title":{},"body":{"classes/Parser.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":1008,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["15674:15674",{"_index":1275,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["18/18",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["195.46",{"_index":864,"title":{},"body":{"additional-documentation/usage.html":{}}}],["1:15:33",{"_index":1010,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["2",{"_index":818,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["2.0",{"_index":1204,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2.3.0.cr2",{"_index":1017,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["2.4.9",{"_index":1187,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2.5.0",{"_index":1184,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2.5.1",{"_index":1180,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2/2",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1163,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["20000",{"_index":908,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["20000m",{"_index":910,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["2012/11/29",{"_index":1205,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2013",{"_index":1009,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["2016/04/01",{"_index":1188,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/02/15",{"_index":1185,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/03/28",{"_index":1181,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/07/05",{"_index":1172,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/11/04",{"_index":1170,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/11/09",{"_index":1165,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018",{"_index":631,"title":{},"body":{"license.html":{},"additional-documentation/usage.html":{}}}],["2018/01/29",{"_index":1162,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018/02/23",{"_index":1156,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018/05/09",{"_index":1145,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018/05/22",{"_index":1140,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018/05/26",{"_index":1134,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["21",{"_index":1160,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["22",{"_index":1158,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["23",{"_index":1159,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["26",{"_index":1147,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["27",{"_index":1150,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["3",{"_index":1207,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["3.1.0",{"_index":1171,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["3.1.2",{"_index":1169,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["3.6.2.final",{"_index":1003,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["3/3",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":529,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["300;thi",{"_index":922,"title":{},"body":{"additional-documentation/usage.html":{}}}],["31/31",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1151,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["33/33",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1143,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["39",{"_index":1136,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4",{"_index":1054,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["4.0.0",{"_index":1164,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.1",{"_index":1161,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.2",{"_index":1155,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.3",{"_index":1144,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.4",{"_index":1139,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.5",{"_index":1137,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.6",{"_index":1133,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4/4",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":775,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["5",{"_index":527,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{}}}],["5.4",{"_index":1029,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["5/5",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":774,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["5000m",{"_index":914,"title":{},"body":{"additional-documentation/usage.html":{}}}],["58",{"_index":225,"title":{},"body":{"classes/Parser.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":686,"title":{},"body":{"overview.html":{}}}],["61614.it",{"_index":1027,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["8",{"_index":135,"title":{},"body":{"classes/Frame.html":{}}}],["9",{"_index":1086,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["9'}});semant",{"_index":1088,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["9'}});start",{"_index":811,"title":{},"body":{"additional-documentation/usage.html":{}}}],["976a",{"_index":1023,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["_bodybytesremaining:numb",{"_index":234,"title":{},"body":{"classes/Parser.html":{}}}],["_collectbodyfixedsize(byt",{"_index":289,"title":{},"body":{"classes/Parser.html":{}}}],["_collectbodynullterminated(byt",{"_index":287,"title":{},"body":{"classes/Parser.html":{}}}],["_collectcommand(byt",{"_index":262,"title":{},"body":{"classes/Parser.html":{}}}],["_collectframe(byt",{"_index":254,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheaderkey(byt",{"_index":271,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheaders(byt",{"_index":267,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheadervalue(byt",{"_index":274,"title":{},"body":{"classes/Parser.html":{}}}],["_consumebyte(byt",{"_index":300,"title":{},"body":{"classes/Parser.html":{}}}],["_consumetokenasraw",{"_index":304,"title":{},"body":{"classes/Parser.html":{}}}],["_consumetokenasutf8",{"_index":302,"title":{},"body":{"classes/Parser.html":{}}}],["_decod",{"_index":229,"title":{},"body":{"classes/Parser.html":{}}}],["_encod",{"_index":227,"title":{},"body":{"classes/Parser.html":{}}}],["_headerkey",{"_index":233,"title":{},"body":{"classes/Parser.html":{}}}],["_initst",{"_index":308,"title":{},"body":{"classes/Parser.html":{}}}],["_onbyt",{"_index":235,"title":{},"body":{"classes/Parser.html":{}}}],["_reinjectbyte(byt",{"_index":270,"title":{},"body":{"classes/Parser.html":{}}}],["_result",{"_index":231,"title":{},"body":{"classes/Parser.html":{}}}],["_retrievedbodi",{"_index":295,"title":{},"body":{"classes/Parser.html":{}}}],["_setupcollectbodi",{"_index":277,"title":{},"body":{"classes/Parser.html":{}}}],["_token",{"_index":232,"title":{},"body":{"classes/Parser.html":{}}}],["a5bd",{"_index":1021,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["abort",{"_index":468,"title":{},"body":{"interfaces/Transaction.html":{},"additional-documentation/usage.html":{}}}],["abov",{"_index":528,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["accept",{"_index":450,"title":{},"body":{"interfaces/StompHeaders.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["acceptor",{"_index":1002,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["access",{"_index":17,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["account",{"_index":1239,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["ack",{"_index":183,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["ack(head",{"_index":185,"title":{},"body":{"interfaces/Message.html":{}}}],["ack/nack",{"_index":1190,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["acknowledg",{"_index":189,"title":{},"body":{"interfaces/Message.html":{},"additional-documentation/usage.html":{}}}],["act",{"_index":312,"title":{},"body":{"classes/Stomp.html":{}}}],["action",{"_index":678,"title":{},"body":{"license.html":{}}}],["activ",{"_index":565,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{}}}],["activemq",{"_index":1028,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["ad",{"_index":691,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["add",{"_index":745,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["addit",{"_index":452,"title":{"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}},"body":{"interfaces/StompHeaders.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["address",{"_index":1037,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["advanc",{"_index":14,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{}}}],["advantag",{"_index":1067,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["aim",{"_index":976,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["alert(\"got",{"_index":829,"title":{},"body":{"additional-documentation/usage.html":{}}}],["alert(quote.symbol",{"_index":869,"title":{},"body":{"additional-documentation/usage.html":{}}}],["alias",{"_index":707,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":360,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"additional-documentation/usage.html":{}}}],["along",{"_index":733,"title":{},"body":{"additional-documentation/usage.html":{}}}],["alter",{"_index":954,"title":{},"body":{"additional-documentation/usage.html":{}}}],["altern",{"_index":341,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{}}}],["although",{"_index":1194,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["alway",{"_index":947,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["and/or",{"_index":653,"title":{},"body":{"license.html":{},"additional-documentation/usage.html":{}}}],["angular",{"_index":595,"title":{},"body":{"index.html":{}}}],["angular2/4/5",{"_index":589,"title":{},"body":{"index.html":{}}}],["annot",{"_index":1214,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["anoth",{"_index":369,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["apach",{"_index":628,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{}}}],["apart",{"_index":1128,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["api",{"_index":587,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["apollo",{"_index":1031,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["appl",{"_index":863,"title":{},"body":{"additional-documentation/usage.html":{}}}],["appli",{"_index":1042,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["applic",{"_index":524,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/sockjs-support.html":{}}}],["application/octet",{"_index":853,"title":{},"body":{"additional-documentation/usage.html":{}}}],["approach",{"_index":742,"title":{},"body":{"additional-documentation/usage.html":{}}}],["apr",{"_index":1007,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["argument",{"_index":820,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["aris",{"_index":682,"title":{},"body":{"license.html":{}}}],["around",{"_index":1040,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["arrang",{"_index":958,"title":{},"body":{"additional-documentation/usage.html":{}}}],["arraybuff",{"_index":48,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{}}}],["ask",{"_index":881,"title":{},"body":{"additional-documentation/usage.html":{}}}],["assign",{"_index":741,"title":{},"body":{"additional-documentation/usage.html":{}}}],["associ",{"_index":642,"title":{},"body":{"license.html":{}}}],["assum",{"_index":849,"title":{},"body":{"additional-documentation/usage.html":{}}}],["astha",{"_index":620,"title":{},"body":{"index.html":{}}}],["attempt",{"_index":915,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["attribut",{"_index":823,"title":{},"body":{"additional-documentation/usage.html":{}}}],["author",{"_index":614,"title":{},"body":{"index.html":{},"license.html":{}}}],["authorit",{"_index":724,"title":{},"body":{"additional-documentation/usage.html":{}}}],["auto",{"_index":1107,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["autom",{"_index":1224,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["automat",{"_index":871,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["avail",{"_index":65,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["awar",{"_index":1216,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["b3fef7ceb5df]hornetq",{"_index":1024,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["back",{"_index":968,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["backward",{"_index":1168,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["bad",{"_index":786,"title":{},"body":{"additional-documentation/usage.html":{}}}],["base",{"_index":591,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{}}}],["basic",{"_index":978,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["beat",{"_index":901,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["befor",{"_index":872,"title":{},"body":{"additional-documentation/usage.html":{}}}],["behaviour",{"_index":1200,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["benefit",{"_index":712,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["between",{"_index":979,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["beyond",{"_index":939,"title":{},"body":{"additional-documentation/usage.html":{}}}],["binari",{"_index":45,"title":{},"body":{"classes/Frame.html":{},"index.html":{},"additional-documentation/usage.html":{}}}],["binarydata",{"_index":813,"title":{},"body":{"additional-documentation/usage.html":{}}}],["binarydata});subscrib",{"_index":816,"title":{},"body":{"additional-documentation/usage.html":{}}}],["binarypublish",{"_index":842,"title":{},"body":{"additional-documentation/usage.html":{}}}],["black'n'yellow2",{"_index":1018,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["bodi",{"_index":24,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["body.length",{"_index":149,"title":{},"body":{"classes/Frame.html":{}}}],["body]{@link",{"_index":201,"title":{},"body":{"interfaces/Message.html":{}}}],["bodylength",{"_index":129,"title":{},"body":{"classes/Frame.html":{}}}],["bodystr",{"_index":1304,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["bodytext",{"_index":103,"title":{},"body":{"classes/Frame.html":{}}}],["boolean",{"_index":62,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["both",{"_index":599,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["bottom",{"_index":551,"title":{},"body":{"index.html":{}}}],["bower",{"_index":1146,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["bower.json",{"_index":1246,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["box",{"_index":722,"title":{},"body":{"additional-documentation/usage.html":{}}}],["break",{"_index":932,"title":{},"body":{"additional-documentation/usage.html":{}}}],["brief",{"_index":791,"title":{},"body":{"additional-documentation/usage.html":{}}}],["broker",{"_index":13,"title":{"additional-documentation/stomp-brokers.html":{}},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["brokerurl",{"_index":394,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["browser",{"_index":522,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["browser'",{"_index":980,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{}}}],["build",{"_index":1175,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["build/watch",{"_index":1241,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["buildto",{"_index":1276,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["bulk",{"_index":1084,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["bundl",{"_index":729,"title":{},"body":{"additional-documentation/usage.html":{}}}],["busi",{"_index":926,"title":{},"body":{"additional-documentation/usage.html":{}}}],["byte",{"_index":51,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{}}}],["byte.lf",{"_index":123,"title":{},"body":{"classes/Frame.html":{}}}],["byte.nul",{"_index":109,"title":{},"body":{"classes/Frame.html":{}}}],["c",{"_index":166,"title":{},"body":{"classes/Frame.html":{},"license.html":{}}}],["c0d783c",{"_index":1004,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["c9e29e45",{"_index":1020,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["cake",{"_index":1223,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["cakefil",{"_index":1240,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["call",{"_index":190,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["callabl",{"_index":352,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":10,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{}}}],["callback);th",{"_index":822,"title":{},"body":{"additional-documentation/usage.html":{}}}],["callback]{@link",{"_index":199,"title":{},"body":{"interfaces/Message.html":{}}}],["carri",{"_index":1093,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["case",{"_index":83,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["caught",{"_index":1153,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["caus",{"_index":789,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["caution",{"_index":1290,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["caveat",{"_index":467,"title":{},"body":{"interfaces/Transaction.html":{}}}],["cd",{"_index":996,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["cdn",{"_index":728,"title":{},"body":{"additional-documentation/usage.html":{}}}],["chang",{"_index":558,"title":{"additional-documentation/change-log.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["changelog",{"_index":1154,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["charact",{"_index":137,"title":{},"body":{"classes/Frame.html":{}}}],["charalampidi",{"_index":625,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["charg",{"_index":637,"title":{},"body":{"license.html":{}}}],["check",{"_index":754,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["checkout",{"_index":1237,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["choos",{"_index":874,"title":{},"body":{"additional-documentation/usage.html":{}}}],["chrome",{"_index":1280,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["chunk",{"_index":238,"title":{},"body":{"classes/Parser.html":{}}}],["chunk.foreach((byt",{"_index":242,"title":{},"body":{"classes/Parser.html":{}}}],["ci",{"_index":1179,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["citizen",{"_index":1166,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["claim",{"_index":674,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Frame.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["clean",{"_index":999,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["cleanup",{"_index":1149,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["clearer",{"_index":1097,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client",{"_index":315,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["client#abort",{"_index":470,"title":{},"body":{"interfaces/Transaction.html":{},"additional-documentation/usage.html":{}}}],["client#abort]{@link",{"_index":474,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#ack",{"_index":191,"title":{},"body":{"interfaces/Message.html":{}}}],["client#ack]{@link",{"_index":204,"title":{},"body":{"interfaces/Message.html":{}}}],["client#activ",{"_index":1083,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client#begin",{"_index":465,"title":{},"body":{"interfaces/Transaction.html":{},"additional-documentation/usage.html":{}}}],["client#brokerurl",{"_index":411,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#brokerurl]{@link",{"_index":433,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#commit",{"_index":471,"title":{},"body":{"interfaces/Transaction.html":{},"additional-documentation/usage.html":{}}}],["client#commit]{@link",{"_index":473,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#configur",{"_index":393,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#configure]{@link",{"_index":432,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#connecthead",{"_index":412,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#connectheaders]{@link",{"_index":440,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#deactiv",{"_index":801,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#debug",{"_index":414,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{}}}],["client#debug]{@link",{"_index":448,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#disconnecthead",{"_index":415,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":441,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#heartbeatincom",{"_index":416,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#heartbeatincoming]{@link",{"_index":436,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#heartbeatoutgo",{"_index":417,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":437,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#maxwebsocketframes",{"_index":418,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#maxwebsocketframesize]{@link",{"_index":438,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#nack",{"_index":198,"title":{},"body":{"interfaces/Message.html":{}}}],["client#nack]{@link",{"_index":205,"title":{},"body":{"interfaces/Message.html":{}}}],["client#onconnect",{"_index":420,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#onconnect]{@link",{"_index":444,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#ondisconnect",{"_index":421,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#ondisconnect]{@link",{"_index":445,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#onstomperror",{"_index":422,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#onstomperror]{@link",{"_index":446,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#onunhandledfram",{"_index":423,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{}}}],["client#onunhandledframe]{@link",{"_index":443,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#onunhandledmessag",{"_index":179,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#onunhandledmessage]{@link",{"_index":200,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":425,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":442,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#onwebsocketclos",{"_index":427,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#onwebsocketclose]{@link",{"_index":447,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#publish",{"_index":687,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#publish]{@link",{"_index":701,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client#reconnectdelay",{"_index":428,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client#reconnectdelay]{@link",{"_index":435,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#subscrib",{"_index":181,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{},"additional-documentation/usage.html":{}}}],["client#subscribe]{@link",{"_index":203,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{}}}],["client#treatmessageasbinari",{"_index":430,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{}}}],["client#treatmessageasbinary]{@link",{"_index":439,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#unsubscrib",{"_index":460,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":462,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":943,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client#websocket",{"_index":1099,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client#websocketfactori",{"_index":431,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/upgrading.html":{}}}],["client#websocketfactory]{@link",{"_index":434,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client(url",{"_index":329,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":351,"title":{},"body":{"classes/Stomp.html":{}}}],["client.activ",{"_index":1074,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client.activate();pleas",{"_index":1081,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client.activate();to",{"_index":799,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.begin",{"_index":884,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.brokerurl",{"_index":764,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.connect(\"us",{"_index":1080,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client.deactivate();send",{"_index":805,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.debug",{"_index":924,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client.heartbeat.incom",{"_index":1077,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["client.heartbeat.outgo",{"_index":1078,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["client.heartbeatincom",{"_index":911,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.heartbeatoutgo",{"_index":907,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.html#maxwebsocketframes",{"_index":1104,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client.onconnect",{"_index":776,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client.onstomperror",{"_index":782,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.publish({destin",{"_index":806,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client.reconnect_delay",{"_index":1079,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client.reconnectdelay",{"_index":921,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.send(\"/topic/stock",{"_index":865,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.send('/topic/gener",{"_index":1085,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["client.subcribe(\"/topic/stock",{"_index":867,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.subscribe(\"/queue/test",{"_index":821,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.subscribe(\"queue/test",{"_index":834,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.t",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["client.treatmessageasbinari",{"_index":850,"title":{},"body":{"additional-documentation/usage.html":{}}}],["close",{"_index":935,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["closeev",{"_index":700,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/change-log.html":{}}}],["closeevent]{@link",{"_index":696,"title":{},"body":{"interfaces/publishParams.html":{}}}],["closeeventcallback",{"_index":1091,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["closeeventcallbacktyp",{"_index":426,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["cmdandhead",{"_index":101,"title":{},"body":{"classes/Frame.html":{}}}],["code",{"_index":556,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["codo",{"_index":1221,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["coffeelint.json",{"_index":1247,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["coffeescript",{"_index":555,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["coffeesctipt",{"_index":1259,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["colon",{"_index":224,"title":{},"body":{"classes/Parser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["combin",{"_index":1070,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["come",{"_index":581,"title":{},"body":{"index.html":{}}}],["command",{"_index":25,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["commandstringnam",{"_index":1301,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["commit",{"_index":469,"title":{},"body":{"interfaces/Transaction.html":{},"additional-documentation/usage.html":{}}}],["commun",{"_index":768,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["compat",{"_index":365,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["compatcli",{"_index":338,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(ws_fn",{"_index":382,"title":{},"body":{"classes/Stomp.html":{}}}],["compil",{"_index":1256,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["complaint",{"_index":790,"title":{},"body":{"additional-documentation/usage.html":{}}}],["complet",{"_index":562,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["compliant",{"_index":792,"title":{},"body":{"additional-documentation/usage.html":{}}}],["compos",{"_index":138,"title":{},"body":{"classes/Frame.html":{}}}],["comput",{"_index":132,"title":{},"body":{"classes/Frame.html":{}}}],["concept",{"_index":938,"title":{},"body":{"additional-documentation/usage.html":{}}}],["condit",{"_index":658,"title":{},"body":{"license.html":{}}}],["config",{"_index":1261,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["config.j",{"_index":1262,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["config.t",{"_index":387,"title":{},"body":{"interfaces/StompConfig.html":{},"coverage.html":{}}}],["configur",{"_index":388,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["conform",{"_index":1123,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["connect",{"_index":95,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"index.html":{},"license.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["connectcallback",{"_index":1089,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["connecthead",{"_index":395,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["consid",{"_index":844,"title":{},"body":{"additional-documentation/usage.html":{}}}],["consider",{"_index":1106,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["consist",{"_index":1094,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["console.log('addit",{"_index":797,"title":{},"body":{"additional-documentation/usage.html":{}}}],["console.log('brok",{"_index":794,"title":{},"body":{"additional-documentation/usage.html":{}}}],["console.log(client.brokerurl);thes",{"_index":766,"title":{},"body":{"additional-documentation/usage.html":{}}}],["console.log(str",{"_index":773,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["const",{"_index":79,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["constructor(onfram",{"_index":211,"title":{},"body":{"classes/Parser.html":{}}}],["constructor(param",{"_index":66,"title":{},"body":{"classes/Frame.html":{}}}],["constructor(publ",{"_index":236,"title":{},"body":{"classes/Parser.html":{}}}],["consum",{"_index":889,"title":{},"body":{"additional-documentation/usage.html":{}}}],["contain",{"_index":453,"title":{},"body":{"interfaces/StompHeaders.html":{},"additional-documentation/usage.html":{}}}],["content",{"_index":281,"title":{},"body":{"classes/Parser.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["contentlengthhead",{"_index":278,"title":{},"body":{"classes/Parser.html":{}}}],["continu",{"_index":1053,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["contract",{"_index":679,"title":{},"body":{"license.html":{},"additional-documentation/stomp-brokers.html":{}}}],["contribut",{"_index":610,"title":{"additional-documentation/how-to-contribute.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-to-contribute.html":{}}}],["contributor",{"_index":601,"title":{},"body":{"index.html":{}}}],["control",{"_index":904,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["conveni",{"_index":1057,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["convent",{"_index":1095,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["convert",{"_index":848,"title":{},"body":{"additional-documentation/usage.html":{}}}],["cooki",{"_index":1288,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["copi",{"_index":640,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":630,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":390,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{}}}],["count",{"_index":136,"title":{},"body":{"classes/Frame.html":{}}}],["cover",{"_index":1065,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["coverag",{"_index":493,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":222,"title":{},"body":{"classes/Parser.html":{},"interfaces/StompHeaders.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creat",{"_index":314,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["creation",{"_index":1073,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["credenti",{"_index":963,"title":{},"body":{"additional-documentation/usage.html":{}}}],["critic",{"_index":1048,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["current",{"_index":535,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["custom",{"_index":1119,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["d",{"_index":1273,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["damag",{"_index":675,"title":{},"body":{"license.html":{}}}],["data",{"_index":76,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{}}}],["date",{"_index":974,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["deactiv",{"_index":800,"title":{},"body":{"additional-documentation/usage.html":{}}}],["deal",{"_index":643,"title":{},"body":{"license.html":{}}}],["debug",{"_index":396,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["debugfntyp",{"_index":413,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["decod",{"_index":845,"title":{},"body":{"additional-documentation/usage.html":{}}}],["decrement",{"_index":291,"title":{},"body":{"classes/Parser.html":{}}}],["deep",{"_index":621,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":618,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":318,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["defin",{"_index":32,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"additional-documentation/how-to-contribute.html":{}}}],["definit",{"_index":602,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["delay",{"_index":918,"title":{},"body":{"additional-documentation/usage.html":{}}}],["delet",{"_index":112,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/change-log.html":{}}}],["delete:fals",{"_index":1193,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["deliv",{"_index":873,"title":{},"body":{"additional-documentation/usage.html":{}}}],["depend",{"_index":945,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["deprec",{"_index":374,"title":{},"body":{"classes/Stomp.html":{}}}],["descent",{"_index":248,"title":{},"body":{"classes/Parser.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["deseri",{"_index":74,"title":{},"body":{"classes/Frame.html":{}}}],["destin",{"_index":688,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["detail",{"_index":582,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{}}}],["determin",{"_index":961,"title":{},"body":{"additional-documentation/usage.html":{}}}],["develop",{"_index":613,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["differ",{"_index":1069,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["dillon",{"_index":622,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["directli",{"_index":727,"title":{},"body":{"additional-documentation/usage.html":{}}}],["disabl",{"_index":906,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["discard",{"_index":292,"title":{},"body":{"classes/Parser.html":{}}}],["disciplin",{"_index":1152,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["disconnect",{"_index":804,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["disconnectcallback",{"_index":1092,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["disconnecthead",{"_index":397,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["distribut",{"_index":651,"title":{},"body":{"license.html":{},"additional-documentation/how-to-contribute.html":{}}}],["doc",{"_index":1248,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["docker",{"_index":1270,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["dockerfil",{"_index":1157,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["document",{"_index":494,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["domexcept",{"_index":1282,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["done",{"_index":779,"title":{},"body":{"additional-documentation/usage.html":{}}}],["download",{"_index":726,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["drop",{"_index":917,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["due",{"_index":1198,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["durabl",{"_index":1189,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["durable:tru",{"_index":1192,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["dure",{"_index":1072,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["each",{"_index":389,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["earlier",{"_index":1110,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["edg",{"_index":738,"title":{},"body":{"additional-documentation/usage.html":{}}}],["edit",{"_index":1266,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["edit/writ",{"_index":1215,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["effect",{"_index":882,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["effici",{"_index":1049,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["empti",{"_index":830,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["emul",{"_index":1129,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["enabl",{"_index":903,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["encod",{"_index":744,"title":{},"body":{"additional-documentation/usage.html":{}}}],["encount",{"_index":785,"title":{},"body":{"additional-documentation/usage.html":{}}}],["end",{"_index":689,"title":{},"body":{"interfaces/publishParams.html":{}}}],["engin",{"_index":541,"title":{},"body":{"index.html":{}}}],["ensur",{"_index":721,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["entir",{"_index":593,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["entiti",{"_index":719,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["entri",{"_index":1254,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["environ",{"_index":323,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["error",{"_index":784,"title":{},"body":{"additional-documentation/usage.html":{}}}],["errorcallback",{"_index":1090,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["es6",{"_index":740,"title":{},"body":{"additional-documentation/usage.html":{}}}],["escap",{"_index":160,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/change-log.html":{}}}],["escapeheadervalu",{"_index":61,"title":{},"body":{"classes/Frame.html":{}}}],["etc",{"_index":1302,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["even",{"_index":970,"title":{},"body":{"additional-documentation/usage.html":{}}}],["event",{"_index":671,"title":{},"body":{"license.html":{}}}],["evt",{"_index":699,"title":{},"body":{"interfaces/publishParams.html":{}}}],["exampl",{"_index":182,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["execut",{"_index":780,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["exist",{"_index":1044,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["expect",{"_index":959,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["explicitli",{"_index":851,"title":{},"body":{"additional-documentation/usage.html":{}}}],["exponenti",{"_index":967,"title":{},"body":{"additional-documentation/usage.html":{}}}],["export",{"_index":59,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["expos",{"_index":592,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["express",{"_index":664,"title":{},"body":{"license.html":{}}}],["extend",{"_index":20,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{}}}],["extern",{"_index":716,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["face",{"_index":1061,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["factori",{"_index":313,"title":{},"body":{"classes/Stomp.html":{}}}],["fail",{"_index":1132,"title":{},"body":{"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["failur",{"_index":913,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["fall",{"_index":1124,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["fals",{"_index":72,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["featur",{"_index":561,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/upgrading.html":{}}}],["few",{"_index":1047,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["field",{"_index":391,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/change-log.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"license.html":{},"interfaces/publishParams.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["find",{"_index":585,"title":{},"body":{"index.html":{}}}],["firefox",{"_index":1289,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["first",{"_index":87,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["fit",{"_index":667,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1142,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["folder",{"_index":730,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["follow",{"_index":244,"title":{},"body":{"classes/Parser.html":{},"license.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["forget",{"_index":894,"title":{},"body":{"additional-documentation/usage.html":{}}}],["fork",{"_index":1238,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["format",{"_index":41,"title":{},"body":{"classes/Frame.html":{}}}],["frame",{"_index":1,"title":{"classes/Frame.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["frame#bodi",{"_index":202,"title":{},"body":{"interfaces/Message.html":{}}}],["frame#head",{"_index":57,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompHeaders.html":{}}}],["frame(param",{"_index":158,"title":{},"body":{"classes/Frame.html":{}}}],["frame.bodi",{"_index":798,"title":{},"body":{"additional-documentation/usage.html":{}}}],["frame.hdrvalueunescape(valu",{"_index":96,"title":{},"body":{"classes/Frame.html":{}}}],["frame.headers['messag",{"_index":796,"title":{},"body":{"additional-documentation/usage.html":{}}}],["frame.seri",{"_index":159,"title":{},"body":{"classes/Frame.html":{}}}],["frame.sizeofutf8(this.bodi",{"_index":131,"title":{},"body":{"classes/Frame.html":{}}}],["frame.tounit8array(cmdandhead",{"_index":107,"title":{},"body":{"classes/Frame.html":{}}}],["framecallbacktyp",{"_index":419,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["framework",{"_index":1036,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["free",{"_index":636,"title":{},"body":{"license.html":{}}}],["friendli",{"_index":542,"title":{},"body":{"index.html":{}}}],["fromrawframe(rawfram",{"_index":78,"title":{},"body":{"classes/Frame.html":{}}}],["full",{"_index":533,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["function",{"_index":214,"title":{},"body":{"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/Transaction.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["function(fram",{"_index":777,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["function(messag",{"_index":827,"title":{},"body":{"additional-documentation/usage.html":{}}}],["function(str",{"_index":925,"title":{},"body":{"additional-documentation/usage.html":{}}}],["furnish",{"_index":656,"title":{},"body":{"license.html":{}}}],["g",{"_index":1236,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["gener",{"_index":540,"title":{},"body":{"index.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["generatebinarydata",{"_index":814,"title":{},"body":{"additional-documentation/usage.html":{}}}],["get",{"_index":516,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["github",{"_index":576,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["global",{"_index":1235,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["go",{"_index":751,"title":{},"body":{"additional-documentation/usage.html":{}}}],["good",{"_index":543,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{}}}],["gotten",{"_index":1068,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["grace",{"_index":931,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["grammar",{"_index":249,"title":{},"body":{"classes/Parser.html":{}}}],["grant",{"_index":635,"title":{},"body":{"license.html":{}}}],["guid",{"_index":1250,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["guidelin",{"_index":1294,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["gwt",{"_index":1141,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["hack",{"_index":368,"title":{},"body":{"classes/Stomp.html":{}}}],["handl",{"_index":833,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["handshak",{"_index":930,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["hat",{"_index":992,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["hdrvalueescape(str",{"_index":161,"title":{},"body":{"classes/Frame.html":{}}}],["hdrvalueunescape(str",{"_index":168,"title":{},"body":{"classes/Frame.html":{}}}],["head",{"_index":574,"title":{},"body":{"index.html":{}}}],["header",{"_index":18,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["header.indexof",{"_index":91,"title":{},"body":{"classes/Frame.html":{}}}],["header[0",{"_index":280,"title":{},"body":{"classes/Parser.html":{}}}],["headers);th",{"_index":832,"title":{},"body":{"additional-documentation/usage.html":{}}}],["headers.t",{"_index":449,"title":{},"body":{"interfaces/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:8",{"_index":454,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["headers[key",{"_index":97,"title":{},"body":{"classes/Frame.html":{}}}],["headers]{@link",{"_index":56,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{}}}],["headersjavascript",{"_index":1303,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["heart",{"_index":902,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["heartbeat",{"_index":909,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["heartbeat.incom",{"_index":1102,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["heartbeat.outgo",{"_index":1103,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["heartbeatincom",{"_index":398,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["heartbeatoutgo",{"_index":399,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["hello",{"_index":808,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["helper",{"_index":299,"title":{},"body":{"classes/Parser.html":{}}}],["henc",{"_index":1291,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["herebi",{"_index":634,"title":{},"body":{"license.html":{}}}],["higher",{"_index":888,"title":{},"body":{"additional-documentation/usage.html":{}}}],["holder",{"_index":672,"title":{},"body":{"license.html":{}}}],["hornetq",{"_index":989,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["host",{"_index":575,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["hq221001",{"_index":1016,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["hq221007",{"_index":1013,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["hq221020",{"_index":1000,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["html5",{"_index":345,"title":{},"body":{"classes/Stomp.html":{}}}],["http://coffeescript.org",{"_index":1220,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["http://qunitjs.com",{"_index":1226,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["http://stomp.github.io/stomp",{"_index":1298,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://developer.mozilla.org/en",{"_index":697,"title":{},"body":{"interfaces/publishParams.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":1120,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["https://github.com/coffeedoc/codo",{"_index":1222,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://github.com/jim",{"_index":1182,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["https://github.com/stomp",{"_index":531,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["https://nodejs.org",{"_index":1227,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://stomp",{"_index":579,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com",{"_index":1231,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://www.rabbitmq.com/web",{"_index":839,"title":{},"body":{"additional-documentation/usage.html":{}}}],["https://yarnpkg.com",{"_index":1230,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://yarnpkg.com/en/docs/instal",{"_index":1234,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["i.",{"_index":46,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/upgrading.html":{}}}],["id",{"_index":461,"title":{},"body":{"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["idea",{"_index":753,"title":{},"body":{"additional-documentation/usage.html":{}}}],["identifi",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":90,"title":{},"body":{"classes/Frame.html":{}}}],["ie",{"_index":737,"title":{},"body":{"additional-documentation/usage.html":{}}}],["ie9",{"_index":1051,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["if(contentlengthhead",{"_index":282,"title":{},"body":{"classes/Parser.html":{}}}],["if(this.isbinarybodi",{"_index":106,"title":{},"body":{"classes/Frame.html":{}}}],["ignor",{"_index":255,"title":{},"body":{"classes/Parser.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["immedi",{"_index":956,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["implement",{"_index":245,"title":{},"body":{"classes/Parser.html":{},"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["impli",{"_index":665,"title":{},"body":{"license.html":{}}}],["import",{"_index":50,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{}}}],["includ",{"_index":605,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["incom",{"_index":256,"title":{},"body":{"classes/Parser.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["incomplet",{"_index":1138,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["incorrect",{"_index":962,"title":{},"body":{"additional-documentation/usage.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["index.d.t",{"_index":1252,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["index.html",{"_index":1263,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["index.j",{"_index":1253,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["indic",{"_index":843,"title":{},"body":{"additional-documentation/usage.html":{}}}],["individu",{"_index":875,"title":{},"body":{"additional-documentation/usage.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/stomp-brokers.html":{}}}],["inform",{"_index":877,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{}}}],["initi",{"_index":986,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["instal",{"_index":606,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["instanc",{"_index":177,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["instanceof",{"_index":239,"title":{},"body":{"classes/Parser.html":{}}}],["instead",{"_index":376,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["instruct",{"_index":583,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["integ",{"_index":1210,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["integr",{"_index":1039,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["interfac",{"_index":175,"title":{"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{}},"body":{"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"coverage.html":{},"overview.html":{},"interfaces/publishParams.html":{}}}],["intern",{"_index":53,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"additional-documentation/sockjs-support.html":{}}}],["introduct",{"_index":525,"title":{"additional-documentation/introduction.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["invok",{"_index":783,"title":{},"body":{"additional-documentation/usage.html":{}}}],["isbinarybodi",{"_index":124,"title":{},"body":{"classes/Frame.html":{}}}],["isbodyempti",{"_index":128,"title":{},"body":{"classes/Frame.html":{}}}],["issu",{"_index":567,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["javascript",{"_index":366,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["jboss",{"_index":993,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["jeff",{"_index":548,"title":{},"body":{"index.html":{}}}],["jimi",{"_index":624,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["js",{"_index":720,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["js.github.io/stompj",{"_index":580,"title":{},"body":{"index.html":{}}}],["js.github.io/stompjs/classes/client.html",{"_index":588,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":590,"title":{},"body":{"index.html":{}}}],["js/stomp",{"_index":532,"title":{},"body":{"index.html":{}}}],["js/stompjs/issu",{"_index":1063,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["json",{"_index":855,"title":{},"body":{"additional-documentation/usage.html":{}}}],["json.pars",{"_index":857,"title":{},"body":{"additional-documentation/usage.html":{}}}],["json.parse(message.bodi",{"_index":868,"title":{},"body":{"additional-documentation/usage.html":{}}}],["json.stringifi",{"_index":856,"title":{},"body":{"additional-documentation/usage.html":{}}}],["json.stringify(quot",{"_index":866,"title":{},"body":{"additional-documentation/usage.html":{}}}],["keep",{"_index":964,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["key",{"_index":37,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{}}}],["key/valu",{"_index":767,"title":{},"body":{"additional-documentation/usage.html":{}}}],["kind",{"_index":663,"title":{},"body":{"license.html":{}}}],["klass",{"_index":380,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":381,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":937,"title":{},"body":{"additional-documentation/usage.html":{}}}],["kodo",{"_index":1251,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["kumar",{"_index":619,"title":{},"body":{"index.html":{},"license.html":{}}}],["languag",{"_index":1219,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["late",{"_index":899,"title":{},"body":{"additional-documentation/usage.html":{}}}],["later",{"_index":824,"title":{},"body":{"additional-documentation/usage.html":{}}}],["latest",{"_index":994,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["lazi",{"_index":1060,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["learn",{"_index":734,"title":{},"body":{"additional-documentation/usage.html":{}}}],["legaci",{"_index":714,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["length",{"_index":114,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["length:${this.bodylength",{"_index":121,"title":{},"body":{"classes/Frame.html":{}}}],["level",{"_index":1112,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["lf",{"_index":220,"title":{},"body":{"classes/Parser.html":{},"interfaces/StompHeaders.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["liabil",{"_index":676,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":673,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1255,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["librari",{"_index":519,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["licens",{"_index":627,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["license.txt",{"_index":1243,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["lifecycl",{"_index":929,"title":{},"body":{"additional-documentation/usage.html":{}}}],["limit",{"_index":646,"title":{},"body":{"license.html":{},"additional-documentation/sockjs-support.html":{}}}],["lindsay",{"_index":615,"title":{},"body":{"index.html":{}}}],["line",{"_index":111,"title":{},"body":{"classes/Frame.html":{}}}],["lines.join(byte.lf",{"_index":122,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`${name}:${frame.hdrvalueescape(`${valu",{"_index":118,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`${name}:${valu",{"_index":119,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`cont",{"_index":120,"title":{},"body":{"classes/Frame.html":{}}}],["linger",{"_index":1202,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["link",{"_index":58,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{}}}],["list",{"_index":725,"title":{},"body":{"additional-documentation/usage.html":{}}}],["listen",{"_index":1025,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["liter",{"_index":709,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":1014,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["localhost",{"_index":1269,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["localhost:61614",{"_index":1005,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["locat",{"_index":333,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":608,"title":{"additional-documentation/change-log.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["login",{"_index":770,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["login/passcod",{"_index":787,"title":{},"body":{"additional-documentation/usage.html":{}}}],["longer",{"_index":1117,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["lower",{"_index":1052,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["lowercamelcas",{"_index":1096,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["made",{"_index":916,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["main",{"_index":1257,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["maintain",{"_index":530,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["major",{"_index":1167,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["make",{"_index":573,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["manag",{"_index":1229,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["mandatori",{"_index":819,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["mani",{"_index":9,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{},"index.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["manual",{"_index":188,"title":{},"body":{"interfaces/Message.html":{}}}],["map",{"_index":1297,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["marshall(param",{"_index":156,"title":{},"body":{"classes/Frame.html":{}}}],["match",{"_index":174,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["maxwebsocketframes",{"_index":400,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["mean",{"_index":984,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["merchant",{"_index":666,"title":{},"body":{"license.html":{}}}],["merg",{"_index":649,"title":{},"body":{"license.html":{}}}],["mesnil",{"_index":549,"title":{},"body":{"index.html":{}}}],["messag",{"_index":19,"title":{"interfaces/Message.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"coverage.html":{},"index.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["message#ack",{"_index":876,"title":{},"body":{"additional-documentation/usage.html":{}}}],["message#nack",{"_index":887,"title":{},"body":{"additional-documentation/usage.html":{}}}],["message.ack",{"_index":879,"title":{},"body":{"additional-documentation/usage.html":{}}}],["message.bodi",{"_index":828,"title":{},"body":{"additional-documentation/usage.html":{}}}],["message.headers['cont",{"_index":852,"title":{},"body":{"additional-documentation/usage.html":{}}}],["message_callback",{"_index":831,"title":{},"body":{"additional-documentation/usage.html":{}}}],["messagecallbacktyp",{"_index":424,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["messagecheckcallbacktyp",{"_index":429,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["messageid",{"_index":1208,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["method",{"_index":26,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["microsoft",{"_index":743,"title":{},"body":{"additional-documentation/usage.html":{}}}],["migrat",{"_index":1105,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["milli",{"_index":919,"title":{},"body":{"additional-documentation/usage.html":{}}}],["minifi",{"_index":1212,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["minimum",{"_index":1058,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["minor",{"_index":1186,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["miscellan",{"_index":705,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":632,"title":{},"body":{"license.html":{}}}],["mode",{"_index":559,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["model",{"_index":982,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["modifi",{"_index":648,"title":{},"body":{"license.html":{}}}],["modul",{"_index":684,"title":{"modules.html":{}},"body":{"modules.html":{},"additional-documentation/usage.html":{}}}],["more",{"_index":353,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/change-log.html":{}}}],["mozwebsocket",{"_index":371,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":694,"title":{},"body":{"interfaces/publishParams.html":{}}}],["mvn",{"_index":998,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["myrabbitmq",{"_index":1272,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["n\").replace(/:/g",{"_index":165,"title":{},"body":{"classes/Frame.html":{}}}],["n\").replace(/\\\\c/g",{"_index":171,"title":{},"body":{"classes/Frame.html":{}}}],["nack",{"_index":184,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{},"additional-documentation/change-log.html":{}}}],["nack(head",{"_index":196,"title":{},"body":{"interfaces/Message.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["nativ",{"_index":538,"title":{},"body":{"index.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["necessari",{"_index":1056,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["need",{"_index":16,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/Transaction.html":{},"index.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["netti",{"_index":1001,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["network",{"_index":933,"title":{},"body":{"additional-documentation/usage.html":{}}}],["never",{"_index":1203,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["new",{"_index":98,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"coverage.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["newer",{"_index":713,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/upgrading.html":{}}}],["next",{"_index":252,"title":{},"body":{"classes/Parser.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["node",{"_index":1233,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["node.j",{"_index":523,"title":{},"body":{"index.html":{}}}],["nodej",{"_index":322,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["nodj",{"_index":1115,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["non",{"_index":320,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{}}}],["noninfring",{"_index":670,"title":{},"body":{"license.html":{}}}],["notabl",{"_index":1050,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["note",{"_index":948,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["notic",{"_index":659,"title":{},"body":{"license.html":{}}}],["now",{"_index":731,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["npm",{"_index":603,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["npmjs.com",{"_index":1183,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["null",{"_index":219,"title":{},"body":{"classes/Parser.html":{},"classes/Stomp.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-to-contribute.html":{}}}],["nulltermin",{"_index":145,"title":{},"body":{"classes/Frame.html":{}}}],["nullterminator.length",{"_index":150,"title":{},"body":{"classes/Frame.html":{}}}],["number",{"_index":130,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"interfaces/StompConfig.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":347,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["object.assign",{"_index":736,"title":{},"body":{"additional-documentation/usage.html":{}}}],["object.keys(this.head",{"_index":116,"title":{},"body":{"classes/Frame.html":{}}}],["observ",{"_index":598,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":639,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":1131,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["octet",{"_index":294,"title":{},"body":{"classes/Parser.html":{},"additional-documentation/usage.html":{}}}],["offer",{"_index":594,"title":{},"body":{"index.html":{}}}],["old",{"_index":1075,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["older",{"_index":572,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["on",{"_index":250,"title":{},"body":{"classes/Parser.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["onc",{"_index":354,"title":{},"body":{"classes/Stomp.html":{}}}],["onconnect",{"_index":401,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["ondisconnect",{"_index":402,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["onfram",{"_index":208,"title":{},"body":{"classes/Parser.html":{}}}],["ongo",{"_index":988,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["onincomingp",{"_index":209,"title":{},"body":{"classes/Parser.html":{}}}],["onmessag",{"_index":835,"title":{},"body":{"additional-documentation/usage.html":{}}}],["onrec",{"_index":1100,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["onreceipt",{"_index":1101,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["onstomperror",{"_index":403,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["onto",{"_index":1082,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["onunhandledfram",{"_index":404,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["onunhandledmessag",{"_index":405,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":406,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["onwebsocketclos",{"_index":407,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["oop",{"_index":896,"title":{},"body":{"additional-documentation/usage.html":{}}}],["open",{"_index":990,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["oper",{"_index":762,"title":{},"body":{"additional-documentation/usage.html":{}}}],["option",{"_index":193,"title":{},"body":{"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["order",{"_index":348,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{}}}],["org.hornetq.core.server.impl.hornetqserverimpl",{"_index":1015,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["org.hornetq.core.server.impl.hornetqserverimpl$sharedstoreliveactiv",{"_index":1012,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["orient",{"_index":545,"title":{},"body":{"index.html":{}}}],["origin",{"_index":715,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{}}}],["otherwis",{"_index":681,"title":{},"body":{"license.html":{}}}],["out",{"_index":683,"title":{},"body":{"license.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["outcom",{"_index":946,"title":{},"body":{"additional-documentation/usage.html":{}}}],["outdat",{"_index":717,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{}}}],["outgo",{"_index":1209,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["output",{"_index":44,"title":{},"body":{"classes/Frame.html":{}}}],["outsid",{"_index":897,"title":{},"body":{"additional-documentation/usage.html":{}}}],["over",{"_index":317,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["over(w",{"_index":339,"title":{},"body":{"classes/Stomp.html":{}}}],["overview",{"_index":685,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwhelm",{"_index":928,"title":{},"body":{"additional-documentation/usage.html":{}}}],["p",{"_index":1274,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["packag",{"_index":604,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["package.json",{"_index":1258,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["page",{"_index":577,"title":{"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["pair",{"_index":39,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{}}}],["param",{"_index":67,"title":{},"body":{"classes/Frame.html":{}}}],["paramet",{"_index":192,"title":{},"body":{"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["parsechunk",{"_index":210,"title":{},"body":{"classes/Parser.html":{}}}],["parsechunk(seg",{"_index":216,"title":{},"body":{"classes/Parser.html":{}}}],["parseint(contentlengthheader[1",{"_index":284,"title":{},"body":{"classes/Parser.html":{}}}],["parser",{"_index":206,"title":{"classes/Parser.html":{}},"body":{"classes/Parser.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["part",{"_index":880,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["parti",{"_index":1287,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["partial",{"_index":55,"title":{},"body":{"classes/Frame.html":{}}}],["particular",{"_index":668,"title":{},"body":{"license.html":{}}}],["pass",{"_index":11,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["passcod",{"_index":771,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["password",{"_index":772,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["per",{"_index":85,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["permiss",{"_index":633,"title":{},"body":{"license.html":{}}}],["permit",{"_index":655,"title":{},"body":{"license.html":{}}}],["person",{"_index":638,"title":{},"body":{"license.html":{}}}],["ping",{"_index":257,"title":{},"body":{"classes/Parser.html":{}}}],["pivot",{"_index":1033,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["pleas",{"_index":584,"title":{},"body":{"index.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["plugin",{"_index":539,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["pm",{"_index":1011,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["point",{"_index":690,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["pollyfil",{"_index":735,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["polyfil",{"_index":739,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["popular",{"_index":537,"title":{},"body":{"index.html":{}}}],["port",{"_index":1026,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["portion",{"_index":661,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":370,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["post",{"_index":290,"title":{},"body":{"classes/Parser.html":{}}}],["prefer",{"_index":942,"title":{},"body":{"additional-documentation/usage.html":{}}}],["prep",{"_index":837,"title":{},"body":{"additional-documentation/usage.html":{}}}],["previou",{"_index":952,"title":{},"body":{"additional-documentation/usage.html":{}}}],["primari",{"_index":1038,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["prior",{"_index":372,"title":{},"body":{"classes/Stomp.html":{}}}],["prioriti",{"_index":810,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["privat",{"_index":60,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{}}}],["process",{"_index":878,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["product",{"_index":563,"title":{},"body":{"index.html":{}}}],["progress",{"_index":1046,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["project",{"_index":747,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["proper",{"_index":1064,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["properli",{"_index":1206,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["properti",{"_index":22,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["propertytypenot",{"_index":1300,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["propos",{"_index":752,"title":{},"body":{"additional-documentation/usage.html":{}}}],["protocol",{"_index":330,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["protocolvers",{"_index":490,"title":{},"body":{"classes/Versions.html":{}}}],["provid",{"_index":520,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["prune",{"_index":1174,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["public",{"_index":23,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"classes/Stomp.html":{}}}],["publish",{"_index":650,"title":{},"body":{"license.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["publishparam",{"_index":513,"title":{"interfaces/publishParams.html":{}},"body":{"coverage.html":{},"interfaces/publishParams.html":{}}}],["pull",{"_index":569,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["pure",{"_index":975,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["purpos",{"_index":669,"title":{},"body":{"license.html":{}}}],["queue",{"_index":941,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["queue/test",{"_index":892,"title":{},"body":{"additional-documentation/usage.html":{}}}],["quint",{"_index":1173,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["quit",{"_index":586,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{}}}],["qunit",{"_index":1225,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["quot",{"_index":861,"title":{},"body":{"additional-documentation/usage.html":{}}}],["quote.valu",{"_index":870,"title":{},"body":{"additional-documentation/usage.html":{}}}],["r\").replace(/\\\\n/g",{"_index":170,"title":{},"body":{"classes/Frame.html":{}}}],["r\").replace(/\\n/g",{"_index":164,"title":{},"body":{"classes/Frame.html":{}}}],["rabbitmq",{"_index":838,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["rais",{"_index":1062,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["rational",{"_index":1066,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["raul",{"_index":626,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["raw",{"_index":75,"title":{},"body":{"classes/Frame.html":{}}}],["rawfram",{"_index":212,"title":{},"body":{"classes/Parser.html":{}}}],["rawframe.bodi",{"_index":99,"title":{},"body":{"classes/Frame.html":{}}}],["rawframe.command",{"_index":94,"title":{},"body":{"classes/Frame.html":{}}}],["rawframe.headers.revers",{"_index":89,"title":{},"body":{"classes/Frame.html":{}}}],["rawframetyp",{"_index":52,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["rawheadertyp",{"_index":704,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["rawresult",{"_index":305,"title":{},"body":{"classes/Parser.html":{}}}],["re)connect",{"_index":781,"title":{},"body":{"additional-documentation/usage.html":{}}}],["read",{"_index":732,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["readjust",{"_index":966,"title":{},"body":{"additional-documentation/usage.html":{}}}],["readme.md",{"_index":1244,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["readonli",{"_index":226,"title":{},"body":{"classes/Parser.html":{}}}],["rec",{"_index":247,"title":{},"body":{"classes/Parser.html":{}}}],["receipt",{"_index":695,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["receiv",{"_index":12,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["reconnect",{"_index":350,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["reconnect_delay",{"_index":1098,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["reconnectdelay",{"_index":408,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["red",{"_index":991,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["refactor",{"_index":1177,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["refer",{"_index":718,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{}}}],["regular",{"_index":985,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["reject",{"_index":987,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["releas",{"_index":547,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["release_notes.md",{"_index":1245,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["reliabl",{"_index":936,"title":{},"body":{"additional-documentation/usage.html":{}}}],["remain",{"_index":983,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{}}}],["remark",{"_index":377,"title":{},"body":{"classes/Stomp.html":{}}}],["repeat",{"_index":84,"title":{},"body":{"classes/Frame.html":{}}}],["replace(/\\\\\\\\/g",{"_index":172,"title":{},"body":{"classes/Frame.html":{}}}],["replace(/\\r/g",{"_index":163,"title":{},"body":{"classes/Frame.html":{}}}],["report",{"_index":795,"title":{},"body":{"additional-documentation/usage.html":{}}}],["repositori",{"_index":526,"title":{},"body":{"index.html":{}}}],["repres",{"_index":7,"title":{},"body":{"classes/Frame.html":{}}}],["request",{"_index":570,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["requir",{"_index":748,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["require('../../esm5",{"_index":325,"title":{},"body":{"classes/Stomp.html":{}}}],["require('@stomp/stompjs/esm5",{"_index":759,"title":{},"body":{"additional-documentation/usage.html":{}}}],["require('text",{"_index":756,"title":{},"body":{"additional-documentation/usage.html":{}}}],["require('websocket').w3cwebsocket",{"_index":328,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{}}}],["respect",{"_index":1201,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["restrict",{"_index":645,"title":{},"body":{"license.html":{}}}],["result",{"_index":173,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["return",{"_index":49,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["rewritten",{"_index":553,"title":{},"body":{"index.html":{}}}],["right",{"_index":647,"title":{},"body":{"license.html":{}}}],["root",{"_index":546,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["run",{"_index":977,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["rxj",{"_index":597,"title":{},"body":{"index.html":{}}}],["s",{"_index":140,"title":{},"body":{"classes/Frame.html":{}}}],["same",{"_index":392,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["scenario",{"_index":973,"title":{},"body":{"additional-documentation/usage.html":{}}}],["script",{"_index":1176,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["second",{"_index":920,"title":{},"body":{"additional-documentation/usage.html":{}}}],["section",{"_index":1055,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["secur",{"_index":981,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["see",{"_index":180,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["segment",{"_index":218,"title":{},"body":{"classes/Parser.html":{}}}],["sell",{"_index":654,"title":{},"body":{"license.html":{}}}],["sellar",{"_index":623,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["send",{"_index":472,"title":{},"body":{"interfaces/Transaction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["sent",{"_index":155,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{},"additional-documentation/usage.html":{}}}],["sentheart",{"_index":900,"title":{},"body":{"additional-documentation/usage.html":{}}}],["separ",{"_index":607,"title":{},"body":{"index.html":{}}}],["sequenc",{"_index":957,"title":{},"body":{"additional-documentation/usage.html":{}}}],["serial",{"_index":27,"title":{},"body":{"classes/Frame.html":{}}}],["serializecmdandhead",{"_index":110,"title":{},"body":{"classes/Frame.html":{}}}],["server",{"_index":332,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{}}}],["serverauto",{"_index":912,"title":{},"body":{"additional-documentation/usage.html":{}}}],["servic",{"_index":596,"title":{},"body":{"index.html":{},"additional-documentation/stomp-brokers.html":{}}}],["sessionstorag",{"_index":1283,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["set",{"_index":600,"title":{},"body":{"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["set/get",{"_index":761,"title":{},"body":{"additional-documentation/usage.html":{}}}],["settabl",{"_index":1071,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["setting/get",{"_index":760,"title":{},"body":{"additional-documentation/usage.html":{}}}],["setup",{"_index":1232,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["sever",{"_index":1148,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["shall",{"_index":660,"title":{},"body":{"license.html":{}}}],["shim",{"_index":1043,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["shutdown",{"_index":1191,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["side",{"_index":1199,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["signific",{"_index":950,"title":{},"body":{"additional-documentation/usage.html":{}}}],["similar",{"_index":346,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["simpl",{"_index":246,"title":{},"body":{"classes/Parser.html":{},"additional-documentation/usage.html":{}}}],["simplest",{"_index":749,"title":{},"body":{"additional-documentation/usage.html":{}}}],["simpli",{"_index":1041,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["size",{"_index":133,"title":{},"body":{"classes/Frame.html":{}}}],["sizeofutf8(",{"_index":139,"title":{},"body":{"classes/Frame.html":{}}}],["skip",{"_index":693,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["skipcontentlengthhead",{"_index":63,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["small",{"_index":923,"title":{},"body":{"additional-documentation/usage.html":{}}}],["snapshot",{"_index":1030,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["socket",{"_index":358,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/change-log.html":{}}}],["sockj",{"_index":359,"title":{"additional-documentation/sockjs-support.html":{}},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["sockjs(url",{"_index":1126,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["softwar",{"_index":641,"title":{},"body":{"license.html":{}}}],["someth",{"_index":778,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["soon",{"_index":955,"title":{},"body":{"additional-documentation/usage.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["special",{"_index":723,"title":{},"body":{"additional-documentation/usage.html":{}}}],["specif",{"_index":534,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["specifi",{"_index":344,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{}}}],["sponsor",{"_index":1032,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["src",{"_index":1249,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["src/.../parser.t",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":708,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/client.t",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["src/compatibility/compat",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["src/compatibility/stomp.t",{"_index":311,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["src/compatibility/stomp.ts:19",{"_index":319,"title":{},"body":{"classes/Stomp.html":{}}}],["src/compatibility/stomp.ts:30",{"_index":331,"title":{},"body":{"classes/Stomp.html":{}}}],["src/compatibility/stomp.ts:68",{"_index":340,"title":{},"body":{"classes/Stomp.html":{}}}],["src/frame.t",{"_index":5,"title":{},"body":{"classes/Frame.html":{},"coverage.html":{}}}],["src/frame.ts:20",{"_index":34,"title":{},"body":{"classes/Frame.html":{}}}],["src/frame.ts:25",{"_index":36,"title":{},"body":{"classes/Frame.html":{}}}],["src/frame.ts:30",{"_index":33,"title":{},"body":{"classes/Frame.html":{}}}],["src/frame.ts:97",{"_index":40,"title":{},"body":{"classes/Frame.html":{}}}],["src/message.t",{"_index":176,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/message.ts:18",{"_index":186,"title":{},"body":{"interfaces/Message.html":{}}}],["src/message.ts:25",{"_index":197,"title":{},"body":{"interfaces/Message.html":{}}}],["src/parser.t",{"_index":207,"title":{},"body":{"classes/Parser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/parser.ts:18",{"_index":213,"title":{},"body":{"classes/Parser.html":{}}}],["src/parser.ts:20",{"_index":215,"title":{},"body":{"classes/Parser.html":{}}}],["src/parser.ts:24",{"_index":217,"title":{},"body":{"classes/Parser.html":{}}}],["src/stomp",{"_index":386,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["src/transaction.t",{"_index":464,"title":{},"body":{"interfaces/Transaction.html":{},"coverage.html":{}}}],["src/types.t",{"_index":512,"title":{},"body":{"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["src/versions.t",{"_index":475,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["src/versions.ts:12",{"_index":482,"title":{},"body":{"classes/Versions.html":{}}}],["src/versions.ts:16",{"_index":484,"title":{},"body":{"classes/Versions.html":{}}}],["src/versions.ts:8",{"_index":480,"title":{},"body":{"classes/Versions.html":{}}}],["stack",{"_index":1045,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["standard",{"_index":86,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["start",{"_index":517,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["state",{"_index":253,"title":{},"body":{"classes/Parser.html":{}}}],["statement",{"_index":496,"title":{},"body":{"coverage.html":{},"additional-documentation/usage.html":{}}}],["static",{"_index":77,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["statu",{"_index":550,"title":{},"body":{"index.html":{}}}],["step",{"_index":995,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["still",{"_index":1195,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["stilt",{"_index":1034,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["stomp",{"_index":8,"title":{"classes/Stomp.html":{},"additional-documentation/stomp-brokers.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["stomp#client",{"_index":342,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":383,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":373,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{}}}],["stomp.client(\"ws://localhost:15674/w",{"_index":1076,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.client(url",{"_index":337,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["stomp.coffe",{"_index":1260,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["stomp.html",{"_index":840,"title":{},"body":{"additional-documentation/usage.html":{}}}],["stomp.j",{"_index":518,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["stomp.min.j",{"_index":1213,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["stomp.ov",{"_index":375,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{}}}],["stomp.over(funct",{"_index":361,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["stomp.over(w",{"_index":1122,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["stomp.over(ws_fn",{"_index":1127,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["stomp.overtcp",{"_index":1116,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.overw",{"_index":1111,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.websocketclass",{"_index":327,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/stompj",{"_index":746,"title":{},"body":{"additional-documentation/usage.html":{}}}],["stomp_w",{"_index":1006,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["stompconfig",{"_index":385,"title":{"interfaces/StompConfig.html":{}},"body":{"interfaces/StompConfig.html":{},"coverage.html":{},"additional-documentation/upgrading.html":{}}}],["stomphead",{"_index":35,"title":{"interfaces/StompHeaders.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{},"interfaces/publishParams.html":{}}}],["stompj",{"_index":324,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"additional-documentation/usage.html":{}}}],["stompjs.client",{"_index":763,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["stompjs.stomp",{"_index":326,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs.stomp;for",{"_index":1059,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stompsubscript",{"_index":455,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stop",{"_index":802,"title":{},"body":{"additional-documentation/usage.html":{}}}],["str",{"_index":81,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["str.replace(/\\\\/g",{"_index":162,"title":{},"body":{"classes/Frame.html":{}}}],["str.replace(/\\\\r/g",{"_index":169,"title":{},"body":{"classes/Frame.html":{}}}],["str.replace(/^\\s+|\\s+$/g",{"_index":82,"title":{},"body":{"classes/Frame.html":{}}}],["straight",{"_index":578,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":1296,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["stream",{"_index":854,"title":{},"body":{"additional-documentation/usage.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{}}}],["string|arraybuff",{"_index":105,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{}}}],["string|uint8array",{"_index":157,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["structur",{"_index":703,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/how-to-contribute.html":{}}}],["sttempt",{"_index":803,"title":{},"body":{"additional-documentation/usage.html":{}}}],["subject",{"_index":657,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":652,"title":{},"body":{"license.html":{}}}],["submit",{"_index":568,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["subscrib",{"_index":187,"title":{},"body":{"interfaces/Message.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["subscript",{"_index":178,"title":{},"body":{"interfaces/Message.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["subscription.t",{"_index":456,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:15",{"_index":459,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["subscription.unsubscribe();binari",{"_index":836,"title":{},"body":{"additional-documentation/usage.html":{}}}],["subsequ",{"_index":971,"title":{},"body":{"additional-documentation/usage.html":{}}}],["substanti",{"_index":557,"title":{},"body":{"index.html":{},"license.html":{}}}],["success",{"_index":969,"title":{},"body":{"additional-documentation/usage.html":{}}}],["suggest",{"_index":972,"title":{},"body":{"additional-documentation/usage.html":{}}}],["suit",{"_index":1114,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["suitabl",{"_index":42,"title":{},"body":{"classes/Frame.html":{}}}],["summari",{"_index":1217,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["support",{"_index":349,"title":{"additional-documentation/sockjs-support.html":{}},"body":{"classes/Stomp.html":{},"classes/Versions.html":{},"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["supportedvers",{"_index":488,"title":{},"body":{"classes/Versions.html":{}}}],["switch",{"_index":1108,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["symbol",{"_index":862,"title":{},"body":{"additional-documentation/usage.html":{}}}],["syntax",{"_index":953,"title":{},"body":{"additional-documentation/usage.html":{}}}],["system",{"_index":927,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["t",{"_index":1271,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tabl",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":817,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["taken",{"_index":949,"title":{},"body":{"additional-documentation/usage.html":{}}}],["task",{"_index":1242,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tbe",{"_index":934,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tcp",{"_index":357,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/stomp-brokers.html":{}}}],["teh",{"_index":847,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tell",{"_index":251,"title":{},"body":{"classes/Parser.html":{}}}],["temporari",{"_index":940,"title":{},"body":{"additional-documentation/usage.html":{}}}],["termin",{"_index":793,"title":{},"body":{"additional-documentation/usage.html":{}}}],["test",{"_index":1113,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["test/index.html",{"_index":1279,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tests/config/brows",{"_index":1267,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tests/config/nod",{"_index":1268,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["testto",{"_index":1277,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["text",{"_index":544,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{}}}],["textdecod",{"_index":230,"title":{},"body":{"classes/Parser.html":{},"additional-documentation/usage.html":{}}}],["textencod",{"_index":228,"title":{},"body":{"classes/Parser.html":{},"additional-documentation/usage.html":{}}}],["textencoder().encode(cmdandhead",{"_index":144,"title":{},"body":{"classes/Frame.html":{}}}],["textencoder().encode(s).length",{"_index":141,"title":{},"body":{"classes/Frame.html":{}}}],["textencodingpolyfil",{"_index":755,"title":{},"body":{"additional-documentation/usage.html":{}}}],["textencodingpolyfill.textdecod",{"_index":758,"title":{},"body":{"additional-documentation/usage.html":{}}}],["textencodingpolyfill.textencod",{"_index":757,"title":{},"body":{"additional-documentation/usage.html":{}}}],["thank",{"_index":1135,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["third",{"_index":1286,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["this._bodybytesremain",{"_index":283,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectbodyfixeds",{"_index":285,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectbodynulltermin",{"_index":286,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectcommand",{"_index":260,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectfram",{"_index":310,"title":{},"body":{"classes/Parser.html":{}}}],["this._collecthead",{"_index":265,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectheaderkey",{"_index":269,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectheadervalu",{"_index":273,"title":{},"body":{"classes/Parser.html":{}}}],["this._consumebyte(byt",{"_index":266,"title":{},"body":{"classes/Parser.html":{}}}],["this._consumetokenasraw",{"_index":297,"title":{},"body":{"classes/Parser.html":{}}}],["this._consumetokenasutf8",{"_index":264,"title":{},"body":{"classes/Parser.html":{}}}],["this._decoder.decode(this._consumetokenasraw",{"_index":303,"title":{},"body":{"classes/Parser.html":{}}}],["this._encoder.encode(seg",{"_index":241,"title":{},"body":{"classes/Parser.html":{}}}],["this._headerkey",{"_index":272,"title":{},"body":{"classes/Parser.html":{}}}],["this._initst",{"_index":237,"title":{},"body":{"classes/Parser.html":{}}}],["this._onbyt",{"_index":259,"title":{},"body":{"classes/Parser.html":{}}}],["this._onbyte(byt",{"_index":243,"title":{},"body":{"classes/Parser.html":{}}}],["this._reinjectbyte(byt",{"_index":261,"title":{},"body":{"classes/Parser.html":{}}}],["this._result",{"_index":309,"title":{},"body":{"classes/Parser.html":{}}}],["this._results.bodi",{"_index":296,"title":{},"body":{"classes/Parser.html":{}}}],["this._results.command",{"_index":263,"title":{},"body":{"classes/Parser.html":{}}}],["this._results.headers.filter(funct",{"_index":279,"title":{},"body":{"classes/Parser.html":{}}}],["this._results.headers.push([this._headerkey",{"_index":275,"title":{},"body":{"classes/Parser.html":{}}}],["this._retrievedbodi",{"_index":288,"title":{},"body":{"classes/Parser.html":{}}}],["this._setupcollectbodi",{"_index":268,"title":{},"body":{"classes/Parser.html":{}}}],["this._token",{"_index":307,"title":{},"body":{"classes/Parser.html":{}}}],["this._token.push(byt",{"_index":301,"title":{},"body":{"classes/Parser.html":{}}}],["this.bodi",{"_index":70,"title":{},"body":{"classes/Frame.html":{}}}],["this.body).buff",{"_index":108,"title":{},"body":{"classes/Frame.html":{}}}],["this.body.length",{"_index":126,"title":{},"body":{"classes/Frame.html":{}}}],["this.command",{"_index":68,"title":{},"body":{"classes/Frame.html":{}}}],["this.escapeheadervalu",{"_index":71,"title":{},"body":{"classes/Frame.html":{}}}],["this.head",{"_index":69,"title":{},"body":{"classes/Frame.html":{}}}],["this.headers['cont",{"_index":113,"title":{},"body":{"classes/Frame.html":{}}}],["this.headers[nam",{"_index":117,"title":{},"body":{"classes/Frame.html":{}}}],["this.isbinarybodi",{"_index":104,"title":{},"body":{"classes/Frame.html":{}}}],["this.onframe(this._result",{"_index":298,"title":{},"body":{"classes/Parser.html":{}}}],["this.onincomingp",{"_index":258,"title":{},"body":{"classes/Parser.html":{}}}],["this.serializecmdandhead",{"_index":102,"title":{},"body":{"classes/Frame.html":{}}}],["this.skipcontentlengthhead",{"_index":73,"title":{},"body":{"classes/Frame.html":{}}}],["those",{"_index":1130,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["time",{"_index":825,"title":{},"body":{"additional-documentation/usage.html":{}}}],["todo",{"_index":466,"title":{},"body":{"interfaces/Transaction.html":{},"additional-documentation/upgrading.html":{}}}],["togeth",{"_index":1292,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tool",{"_index":1218,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["topic/gener",{"_index":807,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["topic/speci",{"_index":815,"title":{},"body":{"additional-documentation/usage.html":{}}}],["torquebox",{"_index":1035,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["tort",{"_index":680,"title":{},"body":{"license.html":{}}}],["tostr",{"_index":100,"title":{},"body":{"classes/Frame.html":{}}}],["tounit8array(cmdandhead",{"_index":142,"title":{},"body":{"classes/Frame.html":{}}}],["trail",{"_index":293,"title":{},"body":{"classes/Parser.html":{}}}],["transact",{"_index":463,"title":{"interfaces/Transaction.html":{}},"body":{"interfaces/Transaction.html":{},"coverage.html":{},"additional-documentation/usage.html":{}}}],["transaction_id",{"_index":890,"title":{},"body":{"additional-documentation/usage.html":{}}}],["transform",{"_index":858,"title":{},"body":{"additional-documentation/usage.html":{}}}],["transmit",{"_index":1196,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["transport",{"_index":356,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["travi",{"_index":1178,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["treat",{"_index":812,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["treatmessageasbinari",{"_index":409,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["tri",{"_index":965,"title":{},"body":{"additional-documentation/usage.html":{}}}],["trim",{"_index":80,"title":{},"body":{"classes/Frame.html":{}}}],["trim(header[0",{"_index":92,"title":{},"body":{"classes/Frame.html":{}}}],["trim(header[1",{"_index":93,"title":{},"body":{"classes/Frame.html":{}}}],["true",{"_index":692,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["turn",{"_index":826,"title":{},"body":{"additional-documentation/usage.html":{}}}],["two",{"_index":891,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tx",{"_index":883,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tx.abort",{"_index":898,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tx.commit();if",{"_index":893,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tx.commit();th",{"_index":886,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tx.id",{"_index":885,"title":{},"body":{"additional-documentation/usage.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["typealias",{"_index":706,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":125,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{}}}],["typeof(w",{"_index":384,"title":{},"body":{"classes/Stomp.html":{}}}],["typescript",{"_index":554,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["typic",{"_index":788,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["uint8array",{"_index":30,"title":{},"body":{"classes/Frame.html":{},"classes/Parser.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["uint8array([0",{"_index":146,"title":{},"body":{"classes/Frame.html":{}}}],["uint8array(seg",{"_index":240,"title":{},"body":{"classes/Parser.html":{}}}],["uint8array(this._token",{"_index":306,"title":{},"body":{"classes/Parser.html":{}}}],["uint8array(uint8cmdandheaders.length",{"_index":148,"title":{},"body":{"classes/Frame.html":{}}}],["uint8cmdandhead",{"_index":143,"title":{},"body":{"classes/Frame.html":{}}}],["uint8cmdandheaders.length",{"_index":153,"title":{},"body":{"classes/Frame.html":{}}}],["uint8fram",{"_index":147,"title":{},"body":{"classes/Frame.html":{}}}],["uint8frame.set(bodi",{"_index":152,"title":{},"body":{"classes/Frame.html":{}}}],["uint8frame.set(nulltermin",{"_index":154,"title":{},"body":{"classes/Frame.html":{}}}],["uint8frame.set(uint8cmdandhead",{"_index":151,"title":{},"body":{"classes/Frame.html":{}}}],["unblock",{"_index":1285,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["uncaught",{"_index":1281,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["unclear",{"_index":1295,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["undefin",{"_index":276,"title":{},"body":{"classes/Parser.html":{}}}],["under",{"_index":1121,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["underli",{"_index":355,"title":{},"body":{"classes/Stomp.html":{}}}],["understand",{"_index":612,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["unescap",{"_index":167,"title":{},"body":{"classes/Frame.html":{}}}],["unexpect",{"_index":1293,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["unit",{"_index":1264,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["unit8array",{"_index":47,"title":{},"body":{"classes/Frame.html":{}}}],["unmarshallresult",{"_index":54,"title":{},"body":{"classes/Frame.html":{}}}],["unsubscrib",{"_index":457,"title":{},"body":{"interfaces/StompSubscription.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["unsubscribe(head",{"_index":458,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["until",{"_index":1197,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["up",{"_index":552,"title":{},"body":{"index.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["updat",{"_index":560,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["upgrad",{"_index":571,"title":{"additional-documentation/upgrading.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["url",{"_index":334,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["us",{"_index":88,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["us/docs/web/api/closeev",{"_index":698,"title":{},"body":{"interfaces/publishParams.html":{}}}],["usag",{"_index":15,"title":{"additional-documentation/usage.html":{}},"body":{"classes/Frame.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["user",{"_index":343,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["utf",{"_index":134,"title":{},"body":{"classes/Frame.html":{}}}],["utf8",{"_index":846,"title":{},"body":{"additional-documentation/usage.html":{}}}],["v${x.replac",{"_index":492,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":476,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":477,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":478,"title":{},"body":{"classes/Versions.html":{}}}],["v2",{"_index":629,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["valid",{"_index":451,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["valu",{"_index":38,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/StompHeaders.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["vanessa",{"_index":616,"title":{},"body":{"index.html":{}}}],["var",{"_index":335,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["variabl",{"_index":507,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":536,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["variat",{"_index":951,"title":{},"body":{"additional-documentation/usage.html":{}}}],["varieti",{"_index":1125,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["versa",{"_index":860,"title":{},"body":{"additional-documentation/usage.html":{}}}],["version",{"_index":364,"title":{"classes/Versions.html":{}},"body":{"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["versions.protocolvers",{"_index":378,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_0",{"_index":485,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":486,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":487,"title":{},"body":{"classes/Versions.html":{}}}],["versions.versions().join",{"_index":489,"title":{},"body":{"classes/Versions.html":{}}}],["versions.versions().map(x",{"_index":491,"title":{},"body":{"classes/Versions.html":{}}}],["vice",{"_index":859,"title":{},"body":{"additional-documentation/usage.html":{}}}],["visit",{"_index":609,"title":{},"body":{"index.html":{}}}],["void",{"_index":195,"title":{},"body":{"interfaces/Message.html":{},"classes/Parser.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{}}}],["wait",{"_index":895,"title":{},"body":{"additional-documentation/usage.html":{}}}],["want",{"_index":611,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["warranti",{"_index":662,"title":{},"body":{"license.html":{}}}],["watchbrows",{"_index":1278,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["watcher",{"_index":944,"title":{},"body":{"additional-documentation/usage.html":{}}}],["way",{"_index":750,"title":{},"body":{"additional-documentation/usage.html":{}}}],["web",{"_index":521,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{}}}],["web_stomp.ws_fram",{"_index":841,"title":{},"body":{"additional-documentation/usage.html":{}}}],["websocket",{"_index":43,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["websocket('ws://localhost:15674/w",{"_index":362,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":316,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass:ani",{"_index":367,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactori",{"_index":410,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["webstomp",{"_index":1118,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["welcom",{"_index":566,"title":{},"body":{"index.html":{}}}],["well",{"_index":1109,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["whether",{"_index":677,"title":{},"body":{"license.html":{}}}],["william",{"_index":617,"title":{},"body":{"index.html":{}}}],["window",{"_index":1284,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["wish",{"_index":711,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["within",{"_index":321,"title":{},"body":{"classes/Stomp.html":{},"interfaces/Transaction.html":{},"additional-documentation/usage.html":{}}}],["without",{"_index":644,"title":{},"body":{"license.html":{},"additional-documentation/usage.html":{}}}],["work",{"_index":960,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["world",{"_index":809,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["world');upd",{"_index":1087,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["ws",{"_index":363,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["ws://localhost:15674/w",{"_index":765,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["ws://localhost:61614/stomp",{"_index":336,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/stomp-brokers.html":{}}}],["ws_fn",{"_index":379,"title":{},"body":{"classes/Stomp.html":{}}}],["wss",{"_index":769,"title":{},"body":{"additional-documentation/usage.html":{}}}],["x.y.z/examples/jms/stomp",{"_index":997,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["yarn",{"_index":1228,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["yarn.lock",{"_index":1265,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["ye",{"_index":194,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{}}}],["year",{"_index":564,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["yield",{"_index":702,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Frame.html":{"url":"classes/Frame.html","title":"class - Frame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Frame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/frame.ts\n        \n\n            \n                Description\n            \n            \n                Frame class represents a STOMP frame. Many of the callbacks pass the Frame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nMessage is an extended Frame.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                command\n                            \n                            \n                                    Public\n                                headers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     string | Uint8Array\n\n                    \n                \n                    \n                        \n                            Type :     string | Uint8Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/frame.ts:30\n                            \n                        \n\n                \n                    \n                        It is serialized string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            command\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        command:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/frame.ts:20\n                            \n                        \n\n                \n                    \n                        STOMP Command\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/frame.ts:25\n                            \n                        \n\n                \n                    \n                        Headers, key value pairs.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        serialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/frame.ts:97\n                            \n                        \n\n\n                \n                    \n                            serialize this Frame in a format suitable to be passed to WebSocket.\nIf the body is string the output will be string.\nIf the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n\n\n                            \n                                Returns :     string | ArrayBuffer\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\nimport {Byte} from \"./byte\";\nimport {RawFrameType} from \"./types\";\n\n/**\n * @internal\n */\ntype unmarshallResults = { frames: Frame[]; partial: string };\n\n/**\n * Frame class represents a STOMP frame. Many of the callbacks pass the Frame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link Frame#headers}.\n *\n * {@link Message} is an extended Frame.\n */\nexport class Frame {\n  /**\n   * STOMP Command\n   */\n  public command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  public headers: StompHeaders;\n\n  /**\n   * It is serialized string\n   */\n  public body: string | Uint8Array;\n\n  private escapeHeaderValues: boolean;\n  private skipContentLengthHeader: boolean;\n\n  /**\n   * Frame constructor. `command`, `headers` and `body` are available as properties.\n   *\n   * @internal\n   */\n  constructor(params: {\n    command: string, headers?: StompHeaders, body: any,\n    escapeHeaderValues?: boolean, skipContentLengthHeader?: boolean\n  }) {\n    let {command, headers, body, escapeHeaderValues, skipContentLengthHeader} = params;\n    this.command = command;\n    this.headers = headers || {};\n    this.body = body || '';\n    this.escapeHeaderValues = escapeHeaderValues || false;\n    this.skipContentLengthHeader = skipContentLengthHeader || false;\n  }\n\n  /**\n   * deserialize a STOMP Frame from raw data.\n   *\n   * @internal\n   */\n  public static fromRawFrame(rawFrame: RawFrameType, escapeHeaderValues: boolean): Frame {\n    const headers: StompHeaders = {};\n    const trim = (str: string): string => str.replace(/^\\s+|\\s+$/g, '');\n\n    // In case of repeated headers, as per standards, first value need to be used\n    for (let header of rawFrame.headers.reverse()) {\n      const idx = header.indexOf(':');\n\n      const key = trim(header[0]);\n      let value = trim(header[1]);\n\n      if (escapeHeaderValues && (rawFrame.command !== 'CONNECT') && (rawFrame.command !== 'CONNECTED')) {\n        value = Frame.hdrValueUnEscape(value);\n      }\n\n      headers[key] = value;\n    }\n\n    return new Frame({\n      command: rawFrame.command,\n      headers: headers,\n      body: rawFrame.body,\n      escapeHeaderValues: escapeHeaderValues\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public toString(): string {\n    const cmdAndHeaders = this.serializeCmdAndHeaders();\n    const bodyText = this.isBinaryBody() ? \">\" : this.body;\n    return cmdAndHeaders + bodyText;\n  }\n\n  /**\n   * serialize this Frame in a format suitable to be passed to WebSocket.\n   * If the body is string the output will be string.\n   * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n   */\n  public serialize(): string|ArrayBuffer {\n    const cmdAndHeaders = this.serializeCmdAndHeaders();\n\n    if(this.isBinaryBody()) {\n      return Frame.toUnit8Array(cmdAndHeaders, this.body).buffer;\n    } else {\n      return cmdAndHeaders + this.body + Byte.NULL;\n    }\n  }\n\n  private serializeCmdAndHeaders(): string {\n    const lines = [this.command];\n    if (this.skipContentLengthHeader) {\n      delete this.headers['content-length'];\n    }\n\n    for (let name of Object.keys(this.headers || {})) {\n      const value = this.headers[name];\n      if (this.escapeHeaderValues && (this.command !== 'CONNECT') && (this.command !== 'CONNECTED')) {\n        lines.push(`${name}:${Frame.hdrValueEscape(`${value}`)}`);\n      } else {\n        lines.push(`${name}:${value}`);\n      }\n    }\n    if (this.body && !this.skipContentLengthHeader) {\n      lines.push(`content-length:${this.bodyLength()}`);\n    }\n    return lines.join(Byte.LF) + Byte.LF + Byte.LF;\n  }\n\n  private isBinaryBody(): boolean {\n    return (typeof this.body !== \"string\") && this.body.length > 0\n  }\n\n  private isBodyEmpty(): boolean {\n    return this.body.length === 0;\n  }\n\n  private bodyLength(): number {\n    return this.isBinaryBody() ? this.body.length : Frame.sizeOfUTF8(this.body)\n  }\n\n  /**\n   * Compute the size of a UTF-8 string by counting its number of bytes\n   * (and not the number of characters composing the string)\n   */\n  private static sizeOfUTF8(s: string): number {\n    return s ? new TextEncoder().encode(s).length : 0;\n  }\n\n  private static toUnit8Array(cmdAndHeaders: string, body: Uint8Array): Uint8Array {\n    const uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n    const nullTerminator = new Uint8Array([0]);\n    const uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + body.length + nullTerminator.length);\n\n    uint8Frame.set(uint8CmdAndHeaders);\n    uint8Frame.set(body, uint8CmdAndHeaders.length);\n    uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + body.length);\n\n    return uint8Frame;\n  }\n  /**\n   * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n   *\n   * @internal\n   */\n  public static marshall(params: {\n    command: string, headers?: StompHeaders, body: string|Uint8Array,\n    escapeHeaderValues?: boolean, skipContentLengthHeader?: boolean\n  }) {\n    const frame = new Frame(params);\n    return frame.serialize();\n  }\n\n  /**\n   *  Escape header values\n   */\n  private static hdrValueEscape(str: string): string {\n    return str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\r/g, \"\\\\r\").replace(/\\n/g, \"\\\\n\").replace(/:/g, \"\\\\c\");\n  }\n\n  /**\n   * UnEscape header values\n   */\n  private static hdrValueUnEscape(str: string): string {\n    return str.replace(/\\\\r/g, \"\\r\").replace(/\\\\n/g, \"\\n\").replace(/\\\\c/g, \":\").replace(/\\\\\\\\/g, \"\\\\\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended Frame, you can access headers\nand body as properties.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    Frame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ack\n                                \n                                \n                                    nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \nack(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/message.ts:18\n                            \n                        \n\n\n                \n                    \n                            When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nack\n                            \n                            \n                        \n                    \n                \n                \n                    \nnack(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/message.ts:25\n                            \n                        \n\n\n                \n                    \n                            When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Frame} from \"./frame\";\nimport {StompHeaders} from \"./stomp-headers\";\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link Frame}, you can access [headers]{@link Frame#headers}\n * and [body]{@link Frame#body} as properties.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface Message extends Frame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack(headers?: StompHeaders): void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack(headers?: StompHeaders): void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Parser.html":{"url":"classes/Parser.html","title":"class - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/parser.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onFrame\n                            \n                            \n                                    Public\n                                onIncomingPing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                parseChunk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(onFrame: (rawFrame: RawFrameType) => void, onIncomingPing: () => void)\n                    \n                \n                        \n                            \n                                Defined in src/parser.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onFrame\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        onIncomingPing\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onFrame\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onFrame:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/parser.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onIncomingPing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onIncomingPing:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/parser.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseChunk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseChunk(segment: string | ArrayBuffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/parser.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                        \n                                                                    string | ArrayBuffer\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {RawFrameType} from './types';\n\nconst NULL = 0;\nconst LF = 10;\nconst CR = 13;\nconst COLON = 58;\n\nexport class Parser {\n  private readonly _encoder = new TextEncoder();\n  private readonly _decoder = new TextDecoder();\n\n  private _results: RawFrameType;\n\n  private _token: number[] = [];\n  private _headerKey: string;\n  private _bodyBytesRemaining:number;\n\n  private _onByte: (byte: number) => void;\n\n  public constructor(public onFrame: (rawFrame: RawFrameType) => void, public onIncomingPing: () => void) {\n    this._initState();\n  }\n\n  public parseChunk(segment: string|ArrayBuffer) {\n    let chunk: Uint8Array;\n\n    if ((segment instanceof ArrayBuffer)) {\n      chunk = new Uint8Array(segment);\n    } else {\n      chunk = this._encoder.encode(segment);\n    }\n\n    chunk.forEach((byte) => {\n      this._onByte(byte);\n    });\n  }\n\n  // The following implements a simple Rec Descent Parser.\n  // The grammar is simple and just one byte tells what should be the next state\n\n  private _collectFrame(byte: number): void {\n    if (byte === NULL) { // Ignore\n      return;\n    }\n    if (byte === CR) { // Ignore CR\n      return;\n    }\n    if (byte === LF) { // Incoming Ping\n      this.onIncomingPing();\n      return;\n    }\n\n    this._onByte = this._collectCommand;\n    this._reinjectByte(byte);\n  }\n\n  private _collectCommand(byte: number): void {\n    if (byte === CR) { // Ignore CR\n      return;\n    }\n    if (byte === LF) {\n      this._results.command = this._consumeTokenAsUTF8();\n      this._onByte = this._collectHeaders;\n      return;\n    }\n\n    this._consumeByte(byte);\n  }\n\n  private _collectHeaders(byte: number): void {\n    if (byte === CR) { // Ignore CR\n      return;\n    }\n    if (byte === LF) {\n      this._setupCollectBody();\n      return;\n    }\n    this._onByte = this._collectHeaderKey;\n    this._reinjectByte(byte);\n  }\n\n  private _reinjectByte(byte: number) {\n    this._onByte(byte);\n  }\n\n  private _collectHeaderKey(byte: number): void {\n    if (byte === COLON) {\n      this._headerKey = this._consumeTokenAsUTF8();\n      this._onByte = this._collectHeaderValue;\n      return;\n    }\n    this._consumeByte(byte);\n  }\n\n  private _collectHeaderValue(byte: number): void {\n    if (byte === CR) { // Ignore CR\n      return;\n    }\n    if (byte === LF) {\n      this._results.headers.push([this._headerKey, this._consumeTokenAsUTF8()]);\n      this._headerKey = undefined;\n      this._onByte = this._collectHeaders;\n      return;\n    }\n    this._consumeByte(byte);\n  }\n\n  private _setupCollectBody() {\n    const contentLengthHeader = this._results.headers.filter(function (header: [string, string]) {\n      return header[0] === \"content-length\";\n    })[0];\n\n    if(contentLengthHeader) {\n      this._bodyBytesRemaining = parseInt(contentLengthHeader[1]);\n      this._onByte = this._collectBodyFixedSize;\n    } else {\n      this._onByte = this._collectBodyNullTerminated;\n    }\n  }\n\n  private _collectBodyNullTerminated(byte: number): void {\n    if (byte === NULL) {\n      this._retrievedBody();\n      return;\n    }\n    this._consumeByte(byte);\n  }\n\n  private _collectBodyFixedSize(byte: number): void {\n    // It is post decrement, so that we discard the trailing NULL octet\n    if (this._bodyBytesRemaining-- === 0) {\n      this._retrievedBody();\n      return;\n    }\n    this._consumeByte(byte);\n  }\n\n  private _retrievedBody() {\n    this._results.body = this._consumeTokenAsRaw();\n\n    this.onFrame(this._results);\n\n    this._initState();\n  }\n\n  // Rec Descent Parser helpers\n\n  private _consumeByte(byte: number) {\n    this._token.push(byte);\n  }\n\n  private _consumeTokenAsUTF8() {\n    return this._decoder.decode(this._consumeTokenAsRaw());\n  }\n\n  private _consumeTokenAsRaw() {\n    const rawResult = new Uint8Array(this._token);\n    this._token = [];\n    return rawResult;\n  }\n\n  private _initState() {\n    this._results = {\n      command: undefined,\n      headers: [],\n      body: undefined,\n    };\n\n    this._token = [];\n    this._headerKey = undefined;\n\n    this._onByte = this._collectFrame;\n  }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WebSocketClass:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/compatibility/stomp.ts:19\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n        StompJs = require('../../esm5/');\n        Stomp = StompJs.Stomp;\n        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/compatibility/stomp.ts:30\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n        var url = \"ws://localhost:61614/stomp\";\n        var client = Stomp.client(url);\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/compatibility/stomp.ts:68\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once. While reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n        var client = Stomp.over(function(){\n          return new WebSocket('ws://localhost:15674/ws')\n        });\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from \"../versions\";\nimport {CompatClient} from \"./compat-client\";\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   */\n  public static WebSocketClass:any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   */\n  public static client (url: string, protocols: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.protocolVersions(); }\n    const ws_fn= function() {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(ws_fn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once. While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   */\n  public static over (ws: any): CompatClient {\n    const ws_fn = typeof(ws) === \"function\" ? ws : () => ws;\n\n    return new CompatClient(ws_fn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompConfig.html":{"url":"interfaces/StompConfig.html","title":"interface - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        brokerURL\n                                \n                                \n                                            Optional\n                                        connectHeaders\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        disconnectHeaders\n                                \n                                \n                                            Optional\n                                        heartbeatIncoming\n                                \n                                \n                                            Optional\n                                        heartbeatOutgoing\n                                \n                                \n                                            Optional\n                                        maxWebSocketFrameSize\n                                \n                                \n                                            Optional\n                                        onConnect\n                                \n                                \n                                            Optional\n                                        onDisconnect\n                                \n                                \n                                            Optional\n                                        onStompError\n                                \n                                \n                                            Optional\n                                        onUnhandledFrame\n                                \n                                \n                                            Optional\n                                        onUnhandledMessage\n                                \n                                \n                                            Optional\n                                        onUnhandledReceipt\n                                \n                                \n                                            Optional\n                                        onWebSocketClose\n                                \n                                \n                                            Optional\n                                        reconnectDelay\n                                \n                                \n                                            Optional\n                                        treatMessageAsBinary\n                                \n                                \n                                            Optional\n                                        webSocketFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brokerURL\n                                    \n                                \n                                \n                                    \n                                        brokerURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#brokerURL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectHeaders\n                                    \n                                \n                                \n                                    \n                                        connectHeaders:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#connectHeaders.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     debugFnType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     debugFnType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#debug.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disconnectHeaders\n                                    \n                                \n                                \n                                    \n                                        disconnectHeaders:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#disconnectHeaders.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heartbeatIncoming\n                                    \n                                \n                                \n                                    \n                                        heartbeatIncoming:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#heartbeatIncoming.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heartbeatOutgoing\n                                    \n                                \n                                \n                                    \n                                        heartbeatOutgoing:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#heartbeatOutgoing.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxWebSocketFrameSize\n                                    \n                                \n                                \n                                    \n                                        maxWebSocketFrameSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#maxWebSocketFrameSize.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onConnect\n                                    \n                                \n                                \n                                    \n                                        onConnect:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#onConnect.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onDisconnect\n                                    \n                                \n                                \n                                    \n                                        onDisconnect:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#onDisconnect.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onStompError\n                                    \n                                \n                                \n                                    \n                                        onStompError:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#onStompError.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onUnhandledFrame\n                                    \n                                \n                                \n                                    \n                                        onUnhandledFrame:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#onUnhandledFrame.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onUnhandledMessage\n                                    \n                                \n                                \n                                    \n                                        onUnhandledMessage:     messageCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     messageCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#onUnhandledMessage.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onUnhandledReceipt\n                                    \n                                \n                                \n                                    \n                                        onUnhandledReceipt:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#onUnhandledReceipt.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onWebSocketClose\n                                    \n                                \n                                \n                                    \n                                        onWebSocketClose:     closeEventCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     closeEventCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#onWebSocketClose.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reconnectDelay\n                                    \n                                \n                                \n                                    \n                                        reconnectDelay:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#reconnectDelay.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treatMessageAsBinary\n                                    \n                                \n                                \n                                    \n                                        treatMessageAsBinary:     messageCheckCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     messageCheckCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#treatMessageAsBinary.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webSocketFactory\n                                    \n                                \n                                \n                                    \n                                        webSocketFactory:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See Client#webSocketFactory.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\nimport {\n  frameCallbackType,\n  messageCallbackType,\n  closeEventCallbackType,\n  debugFnType,\n  messageCheckCallbackType\n} from \"./types\";\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n */\nexport interface StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  brokerURL?: string;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  webSocketFactory?: () => any;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#maxWebSocketFrameSize]{@link Client#maxWebSocketFrameSize}.\n   */\n  maxWebSocketFrameSize?: number;\n\n  /**\n   * See [Client#treatMessageAsBinary]{@link Client#treatMessageAsBinary}.\n   */\n  treatMessageAsBinary?: messageCheckCallbackType;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  debug?: debugFnType;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompHeaders.html":{"url":"interfaces/StompHeaders.html","title":"interface - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as Frame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in src/stomp-headers.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface StompHeaders { [key: string]: string }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    unsubscribe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribe(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-subscription.ts:15\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe. See Client#unsubscribe for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n */\nexport interface StompSubscription {\n  /**\n   * @internal\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe(headers?: StompHeaders): void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transaction.html":{"url":"interfaces/Transaction.html","title":"interface - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Transaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_0:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in src/versions.ts:8\n                            \n                        \n\n                \n                    \n                        1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in src/versions.ts:12\n                            \n                        \n\n                \n                    \n                        1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in src/versions.ts:16\n                            \n                        \n\n                \n                    \n                        1.2\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * 1.0\n   */\n  static V1_0= '1.0';\n  /**\n   * 1.1\n   */\n  static V1_1= '1.1';\n  /**\n   * 1.2\n   */\n  static V1_2= '1.2';\n\n  /**\n   * @internal\n   */\n  static versions() {\n    return [Versions.V1_0, Versions.V1_1, Versions.V1_2]\n  }\n  /**\n   * @internal\n   */\n  static supportedVersions() {\n    return Versions.versions().join(',');\n  }\n  /**\n   * @internal\n   */\n  static protocolVersions() {\n    return Versions.versions().map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/client.ts\n            \n            \n                class\n            \n            \n                Client\n            \n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                    src/compatibility/compat-client.ts\n            \n            \n                class\n            \n            \n                CompatClient\n            \n            \n                100 %\n                (33/33)\n            \n        \n        \n            \n                \n                    src/compatibility/stomp.ts\n            \n            \n                class\n            \n            \n                Stomp\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/frame.ts\n            \n            \n                class\n            \n            \n                Frame\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/message.ts\n            \n            \n                interface\n            \n            \n                Message\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/parser.ts\n            \n            \n                class\n            \n            \n                Parser\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/parser.ts\n            \n            \n                variable\n            \n            \n                COLON\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/parser.ts\n            \n            \n                variable\n            \n            \n                CR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/parser.ts\n            \n            \n                variable\n            \n            \n                LF\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/parser.ts\n            \n            \n                variable\n            \n            \n                NULL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-config.ts\n            \n            \n                interface\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                    src/stomp-headers.ts\n            \n            \n                interface\n            \n            \n                StompHeaders\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/stomp-subscription.ts\n            \n            \n                interface\n            \n            \n                StompSubscription\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/transaction.ts\n            \n            \n                interface\n            \n            \n                Transaction\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/types.ts\n            \n            \n                interface\n            \n            \n                publishParams\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/versions.ts\n            \n            \n                class\n            \n            \n                Versions\n            \n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTOMP.js\n\nThis library provides a STOMP over WebSocket client for Web browser or node.js.\napplications.\nIntroduction\nThis repository is for version 5 and above of this library.\nFor version 3/4 of this library is maintained at https://github.com/stomp-js/stomp-websocket.\nThis library allows you to connect to a STOMP broker over WebSocket. This library\nsupports full STOMP specifications and all current protocol variants. Most\npopular messaging brokers support STOMP and STOMP over WebSockets either natively\nor using plugins.\nIn general JavaScript engines in browsers are not friendly to binary protocols,\nso using STOMP is a good option because it is a text oriented protocol.\nThis library has its roots in a version released by Jeff Mesnil.\nCurrent Status\nVersion 5 of this library has been bottom up rewritten using TypeScript (versions 3/4\nuse CoffeeScript). The code has substantially changed, so, while there is a compatibility\nmode, you might need to update your code.\nThis library is feature complete and has been used in production for many years. It\nis actively maintained. You are welcome to file issues and submit pull requests.\nUpgrading\nif you were using an older version of this library, you would need to make changes\nto your code. Head to\nUpgrading\nGetting started\nThe documentation is hosted as GitHub pages.\nYou may head straight to the https://stomp-js.github.io/stompjs/\nThis library comes with detailed usage instructions. Please find it at \nUsage instructions. \nThere are quite detailed API documentation,\nyou should start at https://stomp-js.github.io/stompjs/classes/Client.html.\nUsage with Angular2/4/5\nhttps://github.com/stomp-js/ng2-stompjs is based on this library and exposes the entire functionality\noffered by this library as Angular Services and rxjs Observables. Both these libraries are maintained\nby a similar set of contributors.\nTypeScript definitions\nThe npm package includes TypeScript definitions, so there is no need no install it separately.\nChange log\nPlease visit Change Log.\nContributing\nIf you want to understand the code, develop, or contribute. Please visit\nHow to contribute. \nAuthors\n\nJeff Mesnil\nJeff Lindsay\nVanessa Williams\nDeepak Kumar\nAstha Deep\nDillon Sellars\nJimi Charalampidis\nRaul\n\nLicense\nLicense - Apache v2 License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        6 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/publishParams.html":{"url":"interfaces/publishParams.html","title":"interface - publishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  publishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string | Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Message} from \"./message\";\nimport {Frame} from \"./frame\";\nimport {StompHeaders} from \"./stomp-headers\";\n\n/**\n * This callback will receive a `string` as parameter.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n */\nexport type messageCallbackType = (message: Message) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n * The callback will need to return a boolean value.\n */\nexport type messageCheckCallbackType = (frame: Frame) => boolean;\n\n/**\n * This callback will receive a {@link Frame} as parameter.\n */\nexport type frameCallbackType = (receipt: Frame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent} as parameter.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}\n */\nexport interface publishParams {\n  /**\n   * destination end point\n   */\n  destination: string,\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders,\n  /**\n   * body (optional)\n   */\n  body?: string|Uint8Array,\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean\n}\n\n/**\n * The parser yield frames in this structure\n */\nexport type RawHeaderType = [string, string];\nexport type RawFrameType = { command: string; headers: RawHeaderType[]; body: Uint8Array; };\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (src/.../types.ts)\n                        \n                        \n                            debugFnType   (src/.../types.ts)\n                        \n                        \n                            frameCallbackType   (src/.../types.ts)\n                        \n                        \n                            messageCallbackType   (src/.../types.ts)\n                        \n                        \n                            messageCheckCallbackType   (src/.../types.ts)\n                        \n                        \n                            RawFrameType   (src/.../types.ts)\n                        \n                        \n                            RawHeaderType   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        closeEventCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a CloseEvent as parameter.\n\n                        \n                    \n                \n                    \n                        closeEventCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debugFnType\n                    \n                \n                    \n                        \n                            This callback will receive a string as parameter.\n\n                        \n                    \n                \n                    \n                        debugFnType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        frameCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Frame as parameter.\n\n                        \n                    \n                \n                    \n                        frameCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\n\n                        \n                    \n                \n                    \n                        messageCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCheckCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\nThe callback will need to return a boolean value.\n\n                        \n                    \n                \n                    \n                        messageCheckCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        RawFrameType\n                    \n                \n                \n                    \n                        RawFrameType:     literal type\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        RawHeaderType\n                    \n                \n                    \n                        \n                            The parser yield frames in this structure\n\n                        \n                    \n                \n                    \n                        RawHeaderType:     [string, string]\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            COLON   (src/.../parser.ts)\n                        \n                        \n                            CR   (src/.../parser.ts)\n                        \n                        \n                            LF   (src/.../parser.ts)\n                        \n                        \n                            NULL   (src/.../parser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/parser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COLON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COLON:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 58\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CR:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 13\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LF\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LF:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NULL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NULL:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\nThis index provides links to some useful pages in the \ndocumentation:\n\nUsage instructions - how to use this library in a\nweb browser or a NodeJS application. \n\nHow to contribute - if you want to understand \nthe code, develop, contribute. \n\nUpgrading - if you are using\nolder versions and wish to benefit from newer features.\n\nLegacy Documents - \nOriginal documentation (external link). Outdated.\n\nAPI Reference for important entities:\n\nStomp\nClient\n\n\nChange Log\n\nLicense - Apache v2 License\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/usage.html":{"url":"additional-documentation/usage.html","title":"additional-page - Usage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing STOMP JS\nThe STOMP Broker\nEnsure that your STOMP broker supports STOMP over WebSockets. Some messaging\nbrokers supports it out of the box while some may need special configuration \nor activating plugins. See STOMP Brokers for a non\nauthoritative list.\nInclude STOMP.js\nIn Web Browser\n\nDownload or directly include one of [CDN links] or from bundles/ folder.\nStompJs object will now be available. Read along to learn how to use it.\n\nPollyfills\n\nObject.assign.\nIt is not supported by IE (supported by Edge).\nIt will need to be polyfilled from npm package es6-object-assign. A simple approach:  \nTextEncoder\nand\nTextDecoder.\nThese are not supported by any of the MicroSoft browsers as of 2018.\nThese will need to be polyfilled from npm package text-encoding. A simple approach:  \n\nIn NodeJS\n\nAdd npm modules @stomp/stompjs, websocket and text-encoding to your project.\n  $ npm install @stomp/stompjs websocket text-encoding\nRequire the module\n      // This is simplest way to get going\n      WebSocket = require('websocket').w3cwebsocket;\n\n      // There is a proposal to add these by default in NodeJS, so good idea is to check first\n      if (typeof TextEncoder !== 'function') {\n        const TextEncodingPolyfill = require('text-encoding');\n        TextEncoder = TextEncodingPolyfill.TextEncoder;\n        TextDecoder = TextEncodingPolyfill.TextDecoder;\n      }\n\n      StompJs = require('@stomp/stompjs/esm5/');  \nRead along to learn how to use the StompJs object.\n\nSetting/getting options\nAll options can be set/get by directly operating on the client instance:\n    const client = new StompJs.Client();\n    client.brokerURL = \"ws://localhost:15674/ws\";\n\n    console.log(client.brokerURL);These can also be set passing key/value pairs to Client constructor\nor to Client#configure.\nCreate a STOMP client\nSTOMP JavaScript clients will communicate to a STOMP server using a ws:// or wss:// URL.\n    const client = new StompJs.Client({\n      brokerURL: \"ws://localhost:15674/ws\",\n      connectHeaders: {\n        login: \"user\",\n        passcode: \"password\"\n      },\n      debug: function (str) {\n        console.log(str);\n      },\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000\n    });\n\n    client.onConnect = function(frame) {\n      // Do something, all subscribes must be done is this callback\n      // This is needed because this will be executed after a (re)connect\n    };\n\n    client.onStompError = function (frame) {\n      // Will be invoked in case of error encountered at Broker\n      // Bad login/passcode typically will cause an error\n      // Complaint brokers will set `message` header with a brief message. Body may contain details.\n      // Compliant brokers will terminate the connection after any error\n      console.log('Broker reported error: ' + frame.headers['message']);\n      console.log('Additional details: ' + frame.body);\n    };\n\n    client.activate();To deactivate a client call Client#deactivate.\nIt will stop sttempting to reconnect and disconnect if there is an active connection.\n    client.deactivate();Send messages\nWhen the client is connected to the server, it can send STOMP messages using\nthe Client#publish method.\n    client.publish({destination: '/topic/general', body: 'Hello world'});\n\n    // There is an option to skip content length header\n    client.publish({destination: '/topic/general', body: 'Hello world', skipContentLengthHeader: true});\n\n    // Additional headers\n    client.publish({destination: '/topic/general', body: 'Hello world', headers: {'priority': '9'}});Starting version 5, sending binary messages is supported.\nIf the body is of type \nUint8Array,\nthe data will be treated as binary.\n    var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n    client.publish({destination: '/topic/special', body: binaryData});Subscribe and receive messages\nTo receive messages in the browser, the STOMP client must first subscribe to \na destination.\nYou can use the Client#subscribe method to subscribe to a destination. The method\ntakes 2 mandatory arguments: destination, a String corresponding to the \ndestination and callback, a function with one message argument and an optional\nargument headers, a JavaScript object for additional headers.\n  var subscription = client.subscribe(\"/queue/test\", callback);The subscribe() methods returns a JavaScript object with one attribute, id, \nthat correspond to the client subscription ID and one method unsubscribe() \nthat can be used later on to unsubscribe the client from this destination.\nEvery time the server sends \na message to the client, the client will in turn invoke the callback with a \nMessage object.\n  callback = function(message) {\n    // called when the client receives a STOMP message from the server\n    if (message.body) {\n      alert(\"got message with body \" + message.body)\n    } else {\n      alert(\"got empty message\");\n    }\n  };The subscribe() method takes an optional headers argument to specify \nadditional headers when subscribing to a destination:\n  var headers = {ack: 'client'};\n  client.subscribe(\"/queue/test\", message_callback, headers);The client specifies that it will handle the message acknowledgement.\nTo stop receiving messages, the client can use the \nunsubscribe method on \nthe object returned by the Client#subscribe method.\n  var subscription = client.subscribe(\"queue/test\", onmessage);\n\n  // ... use the subscription ...\n\n  subscription.unsubscribe();Binary messages\nPrep your broker\nNot every broker will support binary messages out of the box.\nFor example RabbitMQ (see: https://www.rabbitmq.com/web-stomp.html)\nwill need following to be added to the server configuration:\nweb_stomp.ws_frame = binaryPublishing binary messages\nClient#publish will treat a message as binary if body is\nUint8Array.\nReceiving binary messages\nThere is a callback Client#treatMessageAsBinary\nwhich by default returns false indicating all incoming messages are considered to be text and decoded as UTF8.\nIf you are receiving binary messages you will need to provide an implementation of this callback.\nWhen this callback returns true the body will be returned as a\nUint8Array.\n    // When `true` octet data from teh body is returned as is.\n    // When `false` body of incoming message is converted to `string` assuming to be UTF8.\n\n    // Treat all messages a binary\n    client.treatMessageAsBinary = function(message) {\n      return true;\n    };\n\n    // Treat a message as binary based on content-type\n    // This header is not a standard header, while publishing messages it needs to be explicitly set.\n    client.treatMessageAsBinary = function(message) {\n      return message.headers['content-type'] === 'application/octet-stream';\n    };JSON support\nThe body of a STOMP message must be a String. If you want to send and receive\nJSON objects, you can use JSON.stringify() and \nJSON.parse() to transform the JSON object to a String and vice versa.\n  var quote = {symbol: 'APPL', value: 195.46};\n  client.send(\"/topic/stocks\", {}, JSON.stringify(quote));\n\n  client.subcribe(\"/topic/stocks\", function(message) {\n    var quote = JSON.parse(message.body);\n    alert(quote.symbol + \" is at \" + quote.value);\n  });Acknowledgment\nBy default, STOMP messages will be automatically acknowledged by the server\nbefore the message is delivered to the client.\nThe client can choose instead to handle message \nacknowledgement by subscribing \nto a destination and specify a ack header set to client or \nclient-individual.\nIn that case, the client must use the Message#ack method to inform the \nserver that it has processed the message.\n  var subscription = client.subscribe(\"/queue/test\",\n    function(message) {\n      // do something with the message\n      // ...\n      // and acknowledge it\n      message.ack();\n    },\n    {ack: 'client'}\n  );The Message#ack method accepts headers argument for additional headers.\nFor example, it is possible to acknowledge a \nmessage as part of a transaction and ask for a receipt when the ACK has effectively been processed by the broker:\n  var tx = client.begin();\n  message.ack({ transaction: tx.id, receipt: 'my-receipt' });\n  tx.commit();The Message#nack method can also be used to inform STOMP 1.1 or higher\nbrokers that the client did not consume the message. It \ntakes the same arguments than the Message#ack method.\nTransactions\nMessages can be sent and acknowledged in a transaction.\nA transaction is started by the client using its Client#begin method which \ntakes an optional transaction_id.\nThis methods returns a JavaScript object with an id attribute corresponding\nto the transaction ID and two methods:\n\nClient#commit to commit the transaction\nClient#abort to abort the transaction\n\nThe client can then send and/or acknowledge messages in the transaction\nby specifying a transaction set with the transaction id.\n  // start the transaction\n  var tx = client.begin();\n  // send the message in a transaction\n  client.publish({destination: \"/queue/test\", headers: {transaction: tx.id}, body: \"message in a transaction\"});\n  // commit the transaction to effectively send the message\n  tx.commit();If you forget to add the transaction header when calling Client#publish the message\nwill not be part of the transaction and will be sent directly without waiting\nfor the completion of the transaction.\n  // start the transaction\n  var tx = client.begin();\n  // oops! send the message outside the transaction\n  client.publish({destination: \"/queue/test\", body: \"message in a transaction\"});\n  tx.abort(); // Too late! the message has been sentHeart-beating\nIf the STOMP broker accepts STOMP 1.1 or higher frames, \nheart-beating is enabled by default.\nOptions Client#heartbeatIncoming\nand Client#heartbeatOutgoing\ncan be used to control heart-beating\n(default value for both is 10,000ms). These can be disabled by setting to 0.\n    client.heartbeatOutgoing = 20000; // client will send heartbeats every 20000ms\n    client.heartbeatIncoming = 0;     // client does not want to receive heartbeats\n                                       // from the serverAuto Reconnect\nThe client supports automatic reconnecting in case of a connection failure. It is\ncontrolled by a option Client#reconnectDelay.\nDefault value is 5000ms, which indicates that\na attempt to connect will be made after 5000ms of a connection drop.\n  // Add the following if you need automatic reconnect (delay is in milli seconds)\n  client.reconnectDelay = 300;This can be set quite small.\nDebug\nThe client can set its Client#debug property to a function with takes a String \nargument to see all the debug statements of the library:\n  client.debug = function(str) {\n    console.log(str);\n  };By default, the debug messages are ignored.\nOn a busy system the logs can be overwhelming.\nCallbacks\nLifecycle callbacks\n\nClient#onConnect - invoked for each time STOMP broker connects and\nSTOMP handshake is complete\nClient#onDisconnect - invoked after each graceful disconnection.\nIf the connection breaks because of an error or network failure, it will no tbe called.\nClient#onStompError - invoked when the broker reports an Error\nClient#onWebSocketClose  - when the WebSocket closes.\nIt is most reliable way of knowing that the connection has terminated.\n\nFrame callbacks\n\nClient#onUnhandledMessage - typically brokers will send messages\ncorresponding to subscriptions. \nHowever, brokers may support concepts that are beyond standard definition of STOMP -\nfor example RabbitMQ support concepts of temporary queues.\nIf any message is received that is not linked to a subscription, this callback will be invoked.\nClient#onUnhandledReceipt - you should prefer\nClient#watchForReceipt. If there is any incoming receipt for\nwhich there is no active watcher, this callback will be invoked.\nClient#treatMessageAsBinary - invoked for each incoming\nmessage, depending on the outcome, the body is returned as string or Uint8Array. The default implementation\nalways returns false.\nClient#onUnhandledFrame - it will be invoked if broker sends a\nnon standard STOMP command.\n\nAdvanced notes\nThe version 5 of this library has taken significant variation from previous syntax. This version allows\nall of the options and callbacks to be altered.\nNew values will take effect as soon as possible. For example:\n\nAltered values of Client#onUnhandledMessage \nor Client#onDisconnect will be effective immediately.\nNew values of Client#heartbeatIncoming\nand Client#heartbeatOutgoing will be used next time STOMP connects.\n\nThe callback sequences are arranged in a way that most expected operations should work.\nFor example it is possible to call Client#deactivate\nwithin Client#onStompError\nor Client#onWebSocketClose.\nThis is useful if we determine that we have incorrect credentials and no point keep on trying to connect.\nThe above also allows readjusting Client#reconnectDelay\nin Client#onWebSocketClose.\nThis can be used to implement exponential back-off before each successive reconnect attempt.\nEven Client#brokerURL\nor Client#connectHeaders\ncan be altered which would get used in a subsequent reconnect.\nHowever, I will suggest creating a new instance of the STOMP client in this scenario.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/stomp-brokers.html":{"url":"additional-documentation/stomp-brokers.html","title":"additional-page - STOMP Brokers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBroker Requirements\nInformation on this page is outdated, please refer to your broker documentation\nfor up to date information.\nThis library is not a pure STOMP client. It is aimed to run on the \nWebSockets protocol which is not TCP. Basically, the WebSocket protocol \nrequires a handshake between the browser's client and the server to \nensure the browser's \"same-origin\" security model remains in effect.\nThis means that this library can not connect to regular STOMP brokers \nsince they would not understand the handshake initiated by the WebSocket \nwhich is not part of the STOMP protocol and would likely reject the \nconnection.\nThere are ongoing works to add WebSocket support to STOMP broker so \nthat they will accept STOMP connections over the WebSocket protocol.\nHornetQ\nHornetQ is the Open Source messaging system \ndeveloped by Red Hat and JBoss.\nTo start HornetQ with support for STOMP Over WebSocket, \ndownload the latest version \nand run the following steps:\n  $ cd hornetq-x.y.z/examples/jms/stomp-websockets\n  $ mvn clean install\n  ...\n  INFO: HQ221020: Started Netty Acceptor version 3.6.2.Final-c0d783c localhost:61614 for STOMP_WS protocol\n  Apr 15, 2013 1:15:33 PM org.hornetq.core.server.impl.HornetQServerImpl$SharedStoreLiveActivation run\n  INFO: HQ221007: Server is now live\n  Apr 15, 2013 1:15:33 PM org.hornetq.core.server.impl.HornetQServerImpl start\n  INFO: HQ221001: HornetQ Server version 2.3.0.CR2 (black'n'yellow2, 123) [c9e29e45-a5bd-11e2-976a-b3fef7ceb5df]HornetQ is now started and listens to STOMP over WebSocket on the port 61614.It accepts WebSocket connections from the URL ws://localhost:61614/stomp\nTo configure and run HornetQ with STOMP Over WebSocket enabled, follow the \ninstructions.\nActiveMQ\nActiveMQ is the Open Source messaging system \ndeveloped by Apache. Starting with 5.4 snapshots, ActiveMQ supports STOMP \nOver WebSocket.\nTo configure and run ActiveMQ with STOMP Over WebSocket enabled, follow \nthe instructions.\nActiveMQ Apollo\nActiveMQ Apollo is the next generation \nof ActiveMQ broker. From the start, Apollo supports STOMP Over WebSocket.\nTo configure and run Apollo with STOMP Over WebSocket enabled, follow the \ninstructions.\nRabbitMQ\nRabbitMQ is Open Source messaging system sponsored \nby Pivotal.\nTo configure and run RabbitMQ with STOMP Over WebSocket enabled, follow the \ninstructions to install the \nWeb-Stomp plugin.\nStilts & Torquebox\nStilts is a STOMP-native messaging framework \nwhich aims to address treating STOMP as primary contract for messaging, and \nintegrating around it, instead of simply applying STOMP shims to existing \nservices.\nTorqueBox uses the Stilts project to provide its \nWebSockets and STOMP stack.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/upgrading.html":{"url":"additional-documentation/upgrading.html","title":"additional-page - Upgrading","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUpgrade (Work in Progress)\nUpgrading from version 3/4\nThis version uses newer Javascript features. Few these can be pollyfilled in older\nbrowsers.\nHowever Uint8Array\nis critically needed and not possible to be efficiently pollyfilled  (notably in IE9 or lower).\nIf you need to support any browser that does not have native support for Uint8Array\nplease continue using version 4 of this library.\nBasic changes\nPlease follow section Include STOMP.js to add latest version\nand to include necessary polyfills.\nThe following is for convenience - to keep the code change to the minimum.\n    // Depending on your JS version you may have to use var instead of const \n\n    // To use compatibility mode\n    const Stomp = StompJs.Stomp;For the lazy: use the compatibility mode\nWith the changes above, your code should now work. If you face issues please\nraise an issue at https://github.com/stomp-js/stompjs/issues\nNote: no new features will be added to the compatibility mode.\nAttempt would be made so that code working in version 3/4 continue\nto work. The compatibility mode will be maintained for a year.\nTake control: proper upgrade\nThis section covers rationale of new features and \nchanges needed to take full advantage.\nCreating a client and connecting\nIn version 3/4 typically a client instance is created and one of the\nvariants of connect is called.\nOver the years connect has gotten many variants with different\ncombination of parameters.\nThe new version makes all options settable on client instance.\nThese options can be passed during creation of a client or while\ncalling client.activate.\nOld\n    const client = Stomp.client(\"ws://localhost:15674/ws\");\n\n    client.debug =  function (str) {\n      console.log(str);\n    };\n\n    client.heartbeat.incoming = 4000;\n    client.heartbeat.outgoing = 4000;\n\n    client.reconnect_delay = 5000;\n\n    client.connect(\"user\", \"password\",\n      function () {\n        // Do something\n      });Updated\n    const client = new StompJs.Client({\n      brokerURL: \"ws://localhost:15674/ws\",\n      connectHeaders: {\n        login: \"user\",\n        passcode: \"password\"\n      },\n      debug: function (str) {\n        console.log(str);\n      },\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000\n    });\n\n    client.onConnect = function(frame) {\n    // Do something\n    };\n\n    client.activate();Please see StompConfig for all possible options.\nThese options can be set onto client.\nAlternatively these can be passed\nas options to the Client constructor constructor,\nthe Client#activate\nor the Client#deactivate calls.\nIf you want to set options in bulk you can use Client#configure.\nPublishing messages\nOld\n    client.send('/topic/general', {}, 'Hello world');\n\n    // Skip content length header\n    client.send('/topic/general', {'content-length': false}, 'Hello world');\n\n    // Additional headers\n    client.send('/topic/general', {'priority': '9'}, 'Hello world');Updated\n    client.publish({destination: '/topic/general', body: 'Hello world'});\n\n    // There is an option to skip content length header\n    client.publish({destination: '/topic/general', body: 'Hello world', skipContentLengthHeader: true});\n\n    // Additional headers\n    client.publish({destination: '/topic/general', body: 'Hello world', headers: {'priority': '9'}});Semantic changes\n\nStomp.client --> Client constructor\nand Client#brokerURL\nStomp.over --> Client constructor\nand Client#webSocketFactory\nconnect --> Client#activate\nlogin, passcode, host --> Client#connectHeaders\nconnectCallback --> Client#onConnect \nerrorCallback --> Client#onStompError\ncloseEventCallback --> Client#onWebSocketClose \n\n\ndisconnect --> Client#deactivate\ndisconnectCallback --> Client#onDisconnect\n\n\nsend --> Client#publish\n\nName changes\nThese changes have been carried out in order to make a consistent naming convention (lowerCamelCase)\nand to make meaning of the option clearer.\n\nreconnect_delay --> Client#reconnectDelay\nws --> Client#webSocket\nonreceive --> Client#onUnhandledMessage\nonreceipt --> Client#onUnhandledReceipt\nheartbeat.incoming --> Client#heartbeatIncoming\nheartbeat.outgoing --> Client#heartbeatOutgoing\n\nDropped APIs\n\nClient.html#maxWebSocketFrameSize [TODO]\n\nMigrating from Version 2\nYou will need to follow the instructions above with few additional considerations.\nPlease note:\n\nAuto reconnect is switched on by default.\nSet Client#reconnectDelay to 0 to disable.\nAfter each connect (i.e., initial connect as well each reconnection) the \nClient#onConnect (connectCallback in earlier versions)\nwill be called.\nAfter reconnecting, it will not automatically subscribe to queues that were subscribed.\nSo, if all subscriptions are part of the \nClient#onConnect (which it would in most of the cases),\nyou will not need to do any additional handling.\n\nAdditional notes:\n\nStomp.overWS is same as Stomp.client. Follow the instructions for Stomp.client above.\nNodeJS is supported at same level as browser. Test suits are executed for both NodJS and browser.\nFollow the instructions as above.\nStomp.overTCP is no longer supported. If your brokers supports WebStomp (STOMP over WebSocket),\nyou may switch to that.\nIf you are using SockJS please also see SockJS support\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sockjs-support.html":{"url":"additional-documentation/sockjs-support.html","title":"additional-page - SockJS Support","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the Web browser with a custom WebSocket\nAlmost all brokers that support SockJS also support WebSockets. If your\napplication does not need to support old browsers, switch to using\nWebSockets. Check https://en.wikipedia.org/wiki/WebSocket for compatibility \ninformation.\nWeb browsers supports different versions of the WebSocket protocol. Some \nolder browsers does not provide the WebSocket JavaScript or expose it \nunder another name. By default, stomp.js will use the Web browser native \nWebSocket class to create the WebSocket.\nHowever it is possible to use other type of WebSockets by using the \nStomp.over(ws) method. This method expects an object that conforms \nto the WebSocket definition.\nFor example, it is possible to use the implementation provided by the \nSockJS project which falls \nback to a variety of browser-specific transport protocols instead:\n    // use SockJS implementation instead of the browser's native implementation\n    var client = Stomp.over(function(){\n        return new SockJS(url);\n    });Use Stomp.client(url) to use regular WebSockets or use Stomp.over(ws_fn) \nif you required another type of WebSocket.\nApart from this initialization, the STOMP API remains the same in both cases.\nLimitations of SockJS\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of\nthose, auto reconnect may occasionally fail.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/change-log.html":{"url":"additional-documentation/change-log.html","title":"additional-page - Change Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\n4.0.6 (2018/05/26)\n\nUpdates in typescript definitions, Thanks Raul,\nsee: #39\n\n4.0.5\n\nIgnore - incomplete release\n\n4.0.4 (2018/05/22)\n\nGWT Compatibility, fixes #38\n\n4.0.3 (2018/05/09)\n\nAdd to Bower, fixes #26\nSeveral documentation cleanup, fixes #27\nUpdated typescript definitions, Thanks Jimi Charalampidis.\nSee: #33\nI need to be more disciplined. Caught up on ChangeLog updates :)\n\n4.0.2 (2018/02/23)\n\nDockerfile for RabbitMQ. Thanks Dillon Sellars.\nSee: #22\nAdd closeEventCallback to expose the websocket CloseEvent.\nThanks Dillon Sellars.\nSee: #23\nCleanup disconnect code, fixes #21\n\n4.0.1 (2018/01/29)\n\nFixes #20\n\n4.0.0 (2017/11/09)\n\nNodeJS has been upgraded to first class citizen. Dropped legacy support.\nMajor version change as this version is not backward compatible.\n\n3.1.2 (2017/11/04)\n\nHeader value escaping as per STOMP 1.2 standard.\n\n3.1.0 (2017/07/05)\n\nUpdated tests to QUint latest version. Now using same set of tests\nfor NodeJS environment.\nPruned files and folders no longer needed.\nUpdated dependencies.\nUpdated build scripts.\nRefactored entire documentation.\nEnabled Travis CI (it runs all test cases using NodeJS).\nDocumentation is hosted at GitHub pages.\nUpdated TypeScript type definitions.\n\n2.5.1 (2017/03/28)\n\nAdded typescript definitions. Thanks Jimi Charalampidis (https://github.com/jimic)\nPublished on npmjs.com.\n\n2.5.0 (2017/02/15)\n\nSupport for auto reconnect\nMinor documentation changes\n\n2.4.9 (2016/04/01)\nSTOMP 1.2 and RabbitMQ support\n\ndeletion of durable subscriptions\nSTOMP 1.2 ack/nack headers\ngraceful shutdown\n\nAPI change\n\nthe unsubscribe() method returned by subscribe() now takes an optional\nheaders argument which can be used to pass headers like durable:true and\nauto-delete:false required by RabbitMQ to delete durable subscriptions\n\nfor STOMP 1.2, ack() and nack() methods send an id header rather than\na message-id header to match the incoming MESSAGE frame.\n\nalthough the disconnectCallback is still called immediately after transmitting\na DISCONNECT frame, the websocket is not closed by the client until a RECEIPT is\nreceived. Note that due to server-side behaviour with respect to connection lingering\nthe RECEIPT may never be received and the socket will be closed by the server.\n2.0 (2012/11/29)\n\n\nSTOMP 1.1 support\n\nheart-beat\nnack\ncontent-length\n\nAPI change\n\nthe errorCallback passed to the connect() method is no longer called when the\nclient is properly disconnected by calling disconnect().\n\nack() method takes 3 parameters:\n\nmessageID & subscription are MANDATORY.\nheaders is OPTIONAL\n\n\nthe client object has a heartbeat field which can be used to configure heart-beating by changing its incoming and outgoing integer fields (default value for both is 10000ms):\n  client.heartbeat.outgoing = 20000 // client will send heartbeats every 20000ms\n  client.heartbeat.incoming = 0 // client does not want to receive heartbeats\n                            // from the server\n\nMinified version\nIn addition to the regular stomp.js file, the library is also available in a minified version stomp.min.js\nAnnotated source\nThe source is now documented :)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-to-contribute.html":{"url":"additional-documentation/how-to-contribute.html","title":"additional-page - How to Contribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nHow to contribute\n\nFile issues.\nEdit/write documentation.\nSubmit pull requests.\nTest in different environments.\nRaise awareness.\n\nSummary of tools\nFollowing tools are getting used:\n\nCoffeeScript as primary language - http://coffeescript.org/\ncodo for API documentation - https://github.com/coffeedoc/codo\ncake for build automation - http://coffeescript.org/\nqunit for test cases - http://qunitjs.com/\nnodejs during development - https://nodejs.org/\nyarn for dependency management - https://yarnpkg.com/\nnpm for packaging and distribution - https://www.npmjs.com/\n\nInitial setup\nInstructions on setting up development environment:\n\nInstall node and npm - https://nodejs.org/\nInstall yarn - https://yarnpkg.com/en/docs/install\nInstall 'codo', it needs to be installed globally - npm install -g codo\nCheckout code from GitHub - you may fork the code first into your GitHub account.\nUse yarn to install dependencies:  $ yarn\n\nProject structure\n├── Cakefile                       - build/watch tasks & scripts\n├── LICENSE.txt\n├── README.md\n├── RELEASE_NOTES.md\n├── bower.json\n├── coffeelint.json\n├── doc/                           - Legacy documentation\n├── docs/                          - Documentation (root of GitHub pages)\n│   └── codo/                      - Generated documentation\n├── docs-src/                      - Guides (kodo build process uses it)\n├── example/                       - Legacy example \n├── index.d.ts                     - Typescript type definitions\n├── index.js                       - Entry point for nodejs\n├── lib/                           - Compiled JS files\n│   ├── stomp.js                   - Main library code\n│   └── stomp.min.js\n├── package.json\n├── src/                           - CoffeeSctipt files\n│   └── stomp.coffee               - Main library code\n├── tests/                         - All tests\n│   ├── config/\n│   │   ├── browser-config.js      - Browser specific configuration\n│   │   └── node-config.js         - NodeJS specific configuration\n│   ├── index.html                 - Entry point for browser tests\n│   └── unit/                      - All test files\n└── yarn.lock                      - Current package versions\n\n\nSetup a Stomp broker\n\nA Stomp broker is used for running the tests. I have been using RabbitMQ.\nEdit tests/config/browser-config.js and tests/config/node-config.js as per\nyour setup. Defaults should work for a RabbitMQ default setup on localhost.\nPlease note that in RabbitMQ you will need to enable Stomp and WebStomp plugins.\nA RabbitMQ Dockerfile is provided with the necessary plugins. To use it, run:\ndocker build -t myrabbitmq .\ndocker run -d -p 15674:15674 myrabbitmq\n\n\n\nBuilding and testing\nTo build JavaScript from the CoffeeScript source code:\n$ cake buildTo run tests using nodejs:\n$ cake testTo continuously run tests on file changes:\n$ cake watchBrowser Tests\n\nBrowser and node environments use the same set of test cases.\nOpen test/index.html in your browser.\nIf Chrome fails with \"Uncaught DOMException: Failed to read the 'sessionStorage' property from 'Window'\nyou need to Unblock third-party cookies \nor use Firefox.  \n\nCaution: As both browser and nodejs use same set of test cases and hence same queue\nnames. So, running both together may cause unexpected failures.\nSubmit pull requests\n\nRun cake build to update generated files\nPlease follow GitHub guidelines. Raise an issue if you are unclear.\n\nSTOMP API\nSTOMP over WebSocket provides a straightforward mapping from a STOMP frame \nto a JavaScript object. If you need to understand Stomp protocol,\nplease see http://stomp.github.io/stomp-specification-1.2.html\n\nFrame Object\nPropertyTypeNotes\ncommandStringname of the frame (\"CONNECT\", \"SEND\", etc.)\nheadersJavaScript object\nbodyString\n\n\n\nThe command and headers properties will always be defined but the headers \ncan be empty if the frame has no headers. The body can be null if the frame \ndoes not have a body.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
