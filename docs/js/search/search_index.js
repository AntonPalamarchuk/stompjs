var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/Frame.html",[0,0.72,1,0.896]],["body/classes/Frame.html",[0,0.896,1,1.651,2,0.522,3,0.419,4,0.331,5,1.283,6,0.644,7,2.829,8,0.45,9,1.885,10,1.54,11,1.109,12,1.54,13,0.889,14,2.829,15,1.739,16,0.809,17,1.988,18,1.787,19,1.331,20,1.988,21,0.809,22,1.988,23,1.109,24,2.829,25,0.419,26,1.222,27,3.25,28,2.647,29,4.282,30,0.798,31,0.042,32,1.357,33,1.826,34,3.463,35,1.974,36,1.826,37,1.643,38,1.826,39,2.129,40,1.743,41,2.829,42,0.998,43,4.81,44,2.843,45,2.829,46,1.499,47,1.283,48,0.796,49,0.58,50,2.741,51,5.285,52,2.594,53,1.283,54,0.887,55,2.05,56,1.826,57,3.201,58,3.9,59,1.826,60,3.463,61,2.829,62,1.826,63,3.375,64,2.829,65,3.463,66,2.829,67,2.966,68,1.499,69,1.499,70,0.58,71,1.826,72,1.826,73,1.001,74,1.826,75,1.826,76,1.826,77,1.826,78,1.826,79,1.268,80,1.826,81,1.826,82,2.434,83,1.826,84,1.826,85,1.826,86,1.683,87,1.826,88,1.826,89,3.137,90,1.826,91,1.826,92,0.024,93,1.826,94,1.826,95,0.716,96,1.826,97,1.499,98,3.463,99,1.826,100,1.826,101,2.843,102,1.826,103,3.463,104,3.9,105,3.463,106,1.826,107,1.826,108,1.826,109,1.826,110,1.826,111,1.826,112,1.826,113,0.522,114,2.829,115,1.826,116,1.988,117,1.826,118,1.826,119,2.829,120,1.826,121,1.499,122,1.826,123,1.826,124,0.374,125,1.826,126,2.829,127,1.826,128,1.826,129,1.826,130,2.829,131,1.826,132,1.826,133,1.283,134,2.434,135,1.826,136,1.123,137,2.398,138,2.829,139,1.826,140,1.699,141,1.826,142,2.829,143,1.826,144,1.826,145,3.9,146,2.322,147,1.826,148,2.829,149,1.826,150,2.829,151,1.499,152,1.233,153,2.829,154,2.829,155,3.201,156,0.796,157,1.123,158,0.796,159,0.796,160,2.129,161,0.99,162,1.826,163,1.826,164,1.826,165,1.826,166,1.283,167,1.826,168,2.322,169,0.716,170,1.826,171,1.826,172,2.829,173,2.829,174,1.826,175,1.826,176,1.826,177,1.826,178,1.826,179,1.499,180,1.123,181,1.826,182,1.123,183,0.994,184,1.499,185,1.826,186,1.826,187,3.463,188,1.826,189,1.826,190,1.826,191,1.826,192,1.826,193,1.826,194,1.123,195,1.283,196,1.826,197,0.994,198,1.826,199,1.826,200,1.499,201,1.826,202,1.826,203,1.826,204,1.826,205,1.826,206,1.499,207,1.826,208,1.826,209,1.826,210,1.826,211,1.826,212,1.826,213,0.019]],["title/interfaces/Message.html",[19,0.896,214,0.641]],["body/interfaces/Message.html",[1,1.582,2,0.993,3,0.798,4,0.63,6,1.226,8,0.289,10,1.891,11,1.752,17,3.143,18,1.66,19,1.682,20,3.671,21,1.582,25,0.798,26,1.578,28,1.688,30,0.915,31,0.041,32,1.752,37,1.986,42,1.578,46,2.851,47,2.441,48,1.514,49,1.104,70,1.421,79,1.148,92,0.03,180,3.211,213,0.03,214,0.915,215,2.851,216,3.143,217,2.435,218,2.851,219,4.06,220,1.952,221,1.758,222,2.844,223,2.844,224,4.471,225,3.473,226,2.538,227,5.222,228,1.493,229,4.471,230,1.949,231,1.578,232,3.143,233,2.844,234,4.471,235,3.473,236,4.471,237,3.473,238,3.473,239,3.473,240,3.473,241,3.473,242,2.851,243,3.473,244,3.473]],["title/classes/Stomp.html",[0,0.72,8,0.261]],["body/classes/Stomp.html",[0,1.211,2,0.711,3,0.571,4,0.451,6,0.878,8,0.439,11,1.396,16,1.3,21,0.711,25,0.571,26,1.257,27,2.559,30,0.852,31,0.042,32,1.631,35,1.766,40,0.878,42,1.257,48,1.084,49,0.79,63,2.559,70,1.132,73,0.915,79,1.378,89,3.773,92,0.024,113,1.535,121,2.924,124,1.079,137,2.559,152,2.339,157,2.795,158,1.552,161,1.592,195,3.381,213,0.024,216,3.195,220,1.257,221,1.638,228,1.019,230,1.552,231,1.257,245,2.042,246,3.562,247,3.562,248,1.981,249,1.43,250,4.162,251,1.631,252,0.878,253,2.487,254,1.396,255,2.924,256,2.924,257,1.552,258,2.504,259,2.924,260,3.562,261,3.562,262,4.545,263,3.562,264,2.487,265,2.181,266,2.487,267,2.504,268,3.077,269,2.725,270,2.504,271,2.19,272,2.958,273,2.487,274,2.487,275,4.545,276,3.562,277,2.504,278,2.924,279,4.162,280,1.94,281,1.552,282,1.019,283,1.781,284,3.562,285,3.562,286,2.504,287,2.924,288,3.731,289,2.924,290,2.504,291,1.552,292,3.417,293,2.504,294,3.562,295,2.795,296,0.729,297,1.529,298,1.631,299,2.487,300,3.562,301,2.924,302,1.748,303,1.748,304,2.487,305,2.487,306,2.042,307,2.042,308,2.924,309,1.354,310,2.487,311,2.487,312,3.562,313,2.487,314,2.487,315,3.562,316,2.487,317,2.487]],["title/interfaces/StompConfig.html",[214,0.641,318,1.926]],["body/interfaces/StompConfig.html",[1,1.553,2,0.625,3,0.502,4,0.396,6,0.771,8,0.457,10,2.77,11,1.271,12,2.328,13,1.098,18,1.452,19,1.454,25,0.502,26,1.144,30,1.164,31,0.042,37,1.748,39,2.629,40,1.144,42,1.509,48,1.413,49,0.695,53,2.279,70,1.031,73,0.832,79,0.832,82,2.279,86,2.638,92,0.022,95,1.875,113,1.368,124,0.979,158,1.413,160,1.994,161,1.454,169,1.271,183,1.765,197,2.605,213,0.022,214,0.664,220,1.144,221,1.031,228,1.368,231,2.093,249,1.306,251,1.271,252,1.509,280,1.765,281,1.413,282,0.927,283,1.271,291,1.413,298,0.857,318,1.994,319,1.344,320,1.794,321,1.413,322,1.994,323,1.994,324,2.279,325,1.413,326,3.242,327,3.51,328,3.363,329,3.51,330,3.51,331,3.51,332,3.51,333,3.51,334,3.51,335,3.51,336,3.51,337,3.51,338,3.51,339,3.51,340,3.51,341,3.006,342,1.994,343,1.994,344,1.576,345,3.006,346,2.662,347,1.413,348,2.279,349,2.279,350,2.279,351,2.662,352,3.51,353,2.662,354,1.765,355,1.765,356,2.328,357,3.51,358,3.927,359,2.085,360,2.941,361,1.765,362,2.662,363,2.662,364,2.662,365,3.455,366,2.662,367,2.629,368,2.662,369,2.662,370,2.629,371,1.765,372,2.662,373,2.662,374,2.629,375,2.662,376,1.994,377,2.279,378,2.662,379,1.765,380,3.006,381,1.994,382,1.994,383,2.279,384,2.186]],["title/interfaces/StompHeaders.html",[37,1.106,214,0.641]],["body/interfaces/StompHeaders.html",[2,1.25,3,1.004,4,0.793,6,1.543,8,0.364,9,2.38,13,1.122,18,1.742,25,1.004,31,0.04,32,1.713,35,1.934,37,1.819,39,3.169,47,3.073,49,1.39,52,2.688,54,2.124,86,2.124,92,0.035,113,1.25,197,2.38,213,0.035,214,1.055,228,1.25,230,1.905,319,3.169,385,3.589,386,2.688,387,4.372,388,4.372]],["title/interfaces/StompSubscription.html",[214,0.641,389,1.926]],["body/interfaces/StompSubscription.html",[2,1.175,3,0.944,4,0.745,6,1.451,8,0.342,18,1.579,21,1.42,25,0.944,30,0.841,31,0.041,32,1.611,35,1.451,37,1.957,42,1.451,49,1.306,55,1.997,70,1.306,79,1.055,92,0.034,213,0.034,214,1.017,219,4.078,220,1.753,221,1.579,228,1.42,230,1.791,231,1.451,232,2.889,233,2.705,242,3.374,248,2.165,319,3.054,389,3.41,390,3.374,391,3.41,392,4.967,393,4.11,394,4.967,395,2.238,396,4.11]],["title/interfaces/Transaction.html",[214,0.641,397,1.706]],["body/interfaces/Transaction.html",[2,1.117,3,0.897,4,0.708,6,1.379,16,1.377,17,3.385,21,1.558,25,0.897,26,1.7,30,1.069,31,0.041,35,1.842,49,1.242,92,0.033,113,1.558,159,2.099,213,0.033,214,0.986,220,1.975,222,2.622,223,2.622,228,1.117,233,2.622,248,1.702,256,3.953,395,2.967,397,3.177,398,3.207,399,3.906,400,3.207,401,3.906,402,3.906,403,4.007,404,4.007,405,4.815,406,4.815,407,3.906,408,3.906]],["title/classes/Versions.html",[0,0.72,296,0.641]],["body/classes/Versions.html",[0,1.077,2,1.07,3,0.86,4,0.678,6,1.321,8,0.391,25,0.86,26,1.655,30,1.048,31,0.042,32,2.007,35,1.99,40,1.807,49,1.189,55,2.488,79,1.314,89,4.176,92,0.032,213,0.032,252,1.807,282,1.07,296,1.099,409,3.071,410,5.367,411,5.367,412,5.367,413,4.406,414,3.741,415,3.773,416,3.741,417,3.3,418,3.741,419,3.741,420,3.741,421,3.741,422,3.741,423,3.741,424,3.741,425,3.741,426,3.741]],["title/coverage.html",[427,3.431]],["body/coverage.html",[0,1.299,1,1.157,4,0.734,5,2.845,8,0.337,19,1.157,30,0.829,31,0.041,37,1.428,92,0.033,95,1.586,152,1.764,213,0.033,214,1.177,215,3.323,245,3.323,249,1.039,272,2.489,296,0.829,318,2.489,319,3.26,320,3.323,385,3.323,389,2.489,390,3.323,397,2.204,398,3.323,409,3.323,427,3.323,428,1.428,429,3.323,430,3.323,431,4.04,432,5.948,433,4.047,434,2.845,435,4.047,436,3.323,437,3.323,438,4.047,439,5.516,440,4.047,441,4.047,442,4.047,443,4.047,444,4.047,445,4.047]],["title/dependencies.html",[446,1.874,447,2.301]],["body/dependencies.html",[31,0.037,92,0.037,213,0.037,447,2.922]],["title/index.html",[25,0.612,140,1.162,448,1.639]],["body/index.html",[1,0.954,4,0.605,8,0.464,9,1.817,13,1.119,15,2.983,16,1.246,19,0.954,23,1.308,31,0.03,42,1.178,73,0.857,92,0.03,113,0.954,124,1.092,133,2.346,140,1.454,156,1.454,161,1.387,179,2.739,213,0.03,231,1.178,249,1.119,251,1.901,257,1.899,259,2.739,265,2.114,277,2.346,280,1.817,282,1.246,292,2.739,296,0.683,298,1.308,344,1.622,347,1.899,359,1.454,374,2.052,379,1.817,428,1.178,446,2.346,448,2.052,449,1.817,450,2.261,451,1.308,452,2.117,453,3.337,454,1.817,455,2.346,456,3.577,457,2.739,458,3.337,459,2.052,460,2.052,461,1.817,462,3.337,463,3.337,464,3.337,465,3.337,466,3.337,467,3.337,468,2.052,469,2.679,470,4.851,471,4.357,472,3.337,473,3.577,474,3.337,475,3.337,476,2.052,477,3.577,478,3.337,479,2.346,480,2.739,481,2.739,482,2.346,483,0.767,484,4.357,485,3.337,486,2.739,487,2.346,488,3.337,489,2.739,490,2.679,491,2.499,492,2.739,493,1.817,494,2.739,495,2.739,496,2.739,497,2.373,498,2.739,499,4.357,500,3.337,501,1.622,502,1.817,503,2.739,504,2.346,505,2.114,506,3.337,507,3.337,508,3.337,509,3.337,510,2.346,511,2.739,512,3.337,513,3.337,514,2.739,515,3.337,516,3.337,517,1.817,518,3.337,519,3.063,520,2.679,521,2.346,522,2.346,523,2.052,524,3.337,525,4.357,526,2.983,527,1.817,528,2.052,529,1.622,530,2.739,531,3.337,532,3.337,533,3.337,534,2.739,535,2.739,536,3.337,537,2.739,538,2.739,539,2.739,540,2.739,541,2.739,542,2.983,543,2.346,544,2.739]],["title/license.html",[140,1.162,448,1.639,542,1.639]],["body/license.html",[4,0.715,31,0.033,73,1.012,92,0.033,124,0.991,169,1.545,182,3.223,184,3.236,206,3.236,213,0.033,428,1.391,451,1.545,522,3.685,530,3.236,534,3.236,535,3.236,542,2.424,545,5.242,546,3.942,547,3.942,548,4.843,549,3.942,550,3.942,551,3.942,552,3.942,553,4.843,554,3.942,555,5.467,556,5.889,557,3.942,558,4.843,559,3.942,560,3.404,561,3.942,562,3.942,563,3.942,564,3.236,565,3.236,566,3.942,567,3.236,568,3.942,569,3.942,570,3.942,571,3.942,572,3.942,573,3.942,574,4.843,575,4.843,576,3.942,577,3.942,578,4.843,579,3.942,580,3.942,581,3.942,582,3.942,583,3.942,584,3.942,585,2.771,586,3.942,587,3.236,588,3.942,589,3.942,590,3.942,591,3.942,592,3.942,593,3.942,594,3.942,595,3.236,596,3.942,597,3.942,598,2.771]],["title/modules.html",[599,2.938]],["body/modules.html",[31,0.037,92,0.037,213,0.037,599,3.341]],["title/overview.html",[600,3.431]],["body/overview.html",[0,1.082,31,0.037,92,0.037,213,0.037,214,0.964,600,3.867,601,4.71,602,4.71]],["title/interfaces/publishParams.html",[214,0.641,434,2.202]],["body/interfaces/publishParams.html",[0,0.436,1,1.524,2,0.32,3,0.257,4,0.203,8,0.447,10,2.866,11,1.279,12,2.059,13,1.135,16,0.543,18,1.661,19,1.483,21,1.296,22,2.916,23,1.683,25,0.257,26,0.872,27,3.313,28,2.148,30,0.774,31,0.042,35,1.8,37,1.515,39,0.687,40,0.67,42,1.335,48,1.734,49,0.355,50,2.659,52,1.167,54,0.543,55,0.543,57,1.557,63,1.167,68,1.557,70,0.603,73,1.25,79,1.212,82,0.786,86,1.838,92,0.013,95,1.142,113,1.014,116,0.786,124,0.815,137,1.167,140,0.487,151,0.917,152,0.487,156,0.487,157,0.687,158,1.422,159,1.077,160,0.687,161,1.324,169,0.438,180,2.006,182,0.687,183,1.346,197,1.346,213,0.013,214,0.388,216,1.738,217,2.338,220,0.872,221,0.603,222,1.587,223,1.346,226,1.201,228,1.324,230,1.648,231,1.152,233,2.407,248,0.487,249,0.971,251,0.438,252,0.67,254,0.438,265,0.827,267,0.786,269,2.167,280,1.033,281,0.827,282,0.32,283,1.482,286,0.786,288,2.392,291,0.487,296,0.388,298,1.626,318,1.791,321,1.077,322,1.167,323,0.687,327,1.557,328,1.738,329,1.557,330,1.557,331,1.557,332,1.557,333,1.557,334,1.557,335,1.557,336,1.557,337,1.557,338,1.557,339,1.557,340,0.917,341,0.786,342,0.687,343,0.687,344,0.543,345,1.334,346,0.917,347,0.487,348,0.786,349,0.786,350,0.786,351,0.917,352,3.105,353,0.917,354,2.059,355,1.033,356,1.346,357,1.557,358,2.029,359,1.077,360,1.52,361,1.033,362,0.917,363,0.917,364,0.917,365,2.325,366,0.917,367,1.52,368,0.917,369,0.917,370,1.167,371,0.609,372,0.917,373,0.917,374,1.167,375,0.917,376,0.687,377,0.786,378,0.917,379,0.609,380,1.334,381,0.687,382,0.687,383,1.334,389,1.52,391,1.52,395,1.931,397,2.407,400,1.557,403,1.738,404,1.738,428,0.394,431,0.917,434,1.738,450,0.438,451,0.438,461,0.609,476,1.52,479,0.786,489,0.917,492,0.917,502,0.609,585,0.786,587,0.917,603,3.018,604,0.917,605,1.897,606,1.897,607,0.917,608,1.897,609,1.117,610,1.117,611,1.897,612,2.029,613,1.117,614,1.117,615,2.912,616,1.557,617,1.557,618,3.98,619,3.263,620,1.117,621,1.897,622,0.917,623,1.738,624,1.117,625,1.117,626,1.117,627,1.117,628,0.917,629,1.897,630,1.117,631,1.557,632,1.117,633,1.117,634,1.117,635,1.117,636,1.117,637,1.117,638,1.117,639,1.117,640,1.117,641,1.117,642,4.148,643,1.557,644,0.917,645,0.917,646,0.917,647,0.917,648,1.117,649,0.917,650,0.917,651,1.52,652,1.117,653,1.557,654,1.557,655,1.557,656,0.917,657,1.117,658,0.786,659,1.117,660,1.117,661,1.117,662,1.117,663,1.117,664,0.609,665,1.897,666,1.897,667,1.117,668,1.117,669,1.557,670,1.897,671,1.334,672,3.263,673,1.897,674,1.117,675,1.117,676,1.117,677,1.117,678,1.117,679,1.897,680,1.117,681,1.117,682,1.117,683,1.117,684,1.117,685,0.917,686,0.917,687,1.117,688,1.897,689,0.609,690,1.897,691,1.117,692,1.117,693,1.117,694,1.117,695,1.117,696,1.117,697,1.117,698,1.117,699,1.117,700,1.117,701,1.117,702,1.117,703,1.117,704,1.117,705,1.557,706,1.117,707,1.897,708,1.117,709,1.897,710,1.117,711,0.922,712,1.897,713,1.117,714,1.117,715,1.117,716,1.117,717,1.117,718,1.117,719,1.117,720,0.786,721,0.922,722,0.917,723,0.917,724,0.786,725,1.897,726,1.557,727,0.786,728,0.786,729,1.334,730,0.687,731,0.917,732,1.117,733,0.917,734,1.117,735,1.117,736,2.493,737,1.557,738,1.117,739,1.117,740,1.117,741,1.117,742,2.914,743,1.897,744,1.897,745,1.117,746,1.557,747,1.117,748,1.117,749,1.117,750,1.117,751,1.117,752,1.167,753,0.917,754,0.786,755,1.334,756,1.557,757,0.786,758,0.917,759,1.117,760,1.557,761,0.917,762,2.048,763,1.117,764,1.117,765,1.117,766,2.679,767,1.117,768,1.117,769,1.117,770,1.117,771,1.117,772,1.897,773,1.897,774,1.897,775,1.897,776,1.117,777,0.917,778,1.117,779,1.117,780,1.897,781,1.557,782,1.897,783,1.117,784,1.117,785,1.117,786,1.117,787,0.917,788,1.117,789,1.117,790,1.117,791,1.117,792,1.117,793,1.334,794,0.917,795,1.117,796,1.117,797,2.914,798,1.117,799,1.117,800,1.117,801,1.117,802,0.917,803,1.117,804,1.117,805,1.117]],["title/miscellaneous/typealiases.html",[806,2.188,807,3.742]],["body/miscellaneous/typealiases.html",[5,3.124,25,1.021,30,1.065,31,0.035,44,4.53,92,0.035,113,1.627,213,0.035,345,3.879,365,3.393,367,3.393,380,3.879,806,3.649,808,4.445,809,5.69,810,4.445,811,4.445,812,3.124]],["title/additional-documentation/introduction.html",[455,1.874,483,0.612,813,0.847]],["body/additional-documentation/introduction.html",[8,0.358,15,2.644,25,0.988,31,0.035,42,1.518,48,2.224,92,0.035,124,1.114,156,1.874,213,0.035,249,1.104,257,1.874,296,0.88,347,1.874,428,1.921,450,1.686,451,1.686,452,2.09,454,2.342,455,3.023,468,2.644,469,2.644,473,3.531,483,0.988,490,2.644,493,2.342,494,3.531,495,3.531,496,3.531,497,2.342,501,2.09,502,2.342,503,3.531,505,1.874,526,3.138,527,2.342,528,2.644,529,2.09,542,3.138,543,3.023,544,3.531,814,3.023,815,4.301,816,3.531]],["title/additional-documentation/usage.html",[15,1.639,483,0.612,813,0.847]],["body/additional-documentation/usage.html",[1,1.354,8,0.473,9,0.746,10,2.361,11,1.541,12,2.759,13,1.153,16,1.24,18,1.716,19,1.64,21,0.947,23,0.537,26,0.484,28,1.778,31,0.041,35,1.585,40,1.01,54,0.666,73,1.344,79,0.85,86,0.666,92,0.019,95,1.122,101,1.125,113,1.284,116,0.964,124,1.134,136,0.843,140,1.247,155,1.847,156,1.247,158,2.107,159,2.259,160,1.384,161,1.188,166,0.964,168,1.125,169,0.537,180,2.842,182,0.843,183,0.746,194,0.843,197,1.558,213,0.015,217,2.261,220,0.484,221,1.736,222,2.261,223,0.746,226,2.246,228,1.354,231,1.387,248,1.444,249,1.482,251,0.537,252,1.466,254,1.122,255,1.125,257,1.247,265,0.597,267,1.582,268,1.76,269,2.899,271,1.384,277,0.964,278,3.003,281,2.145,282,1.188,283,1.298,287,1.125,291,0.597,295,0.843,296,0.586,298,1.628,303,0.964,309,0.746,321,0.981,323,2.666,324,2.012,325,0.981,328,2.764,342,2.037,343,2.666,344,1.391,347,1.444,348,0.964,349,1.582,350,1.582,354,2.141,355,0.746,356,1.558,359,1.713,360,1.76,361,0.746,376,0.843,377,1.582,379,0.746,381,2.037,382,0.843,386,2.249,391,1.76,395,2.579,397,2.957,403,1.582,404,2.012,413,1.125,415,2.012,417,1.384,429,1.125,430,1.125,449,1.225,450,1.628,451,1.122,452,1.778,454,0.746,457,1.125,460,0.843,461,1.225,476,0.843,483,0.517,491,1.391,493,1.225,501,0.666,505,0.597,517,0.746,521,2.012,522,1.582,523,0.843,527,1.804,529,0.666,567,1.125,598,0.964,599,1.582,603,3.329,623,1.582,651,0.843,669,1.125,671,0.964,689,0.746,711,0.666,720,0.964,721,1.093,724,1.582,726,1.125,727,1.582,728,1.582,729,1.582,730,1.76,736,2.012,737,1.847,746,2.35,752,3.247,753,1.125,754,2.329,755,1.582,756,1.847,757,2.012,758,2.35,760,1.847,761,1.125,762,0.964,766,1.125,777,1.125,781,2.35,787,1.125,793,1.582,794,2.35,802,1.125,812,0.964,813,1.25,817,1.125,818,0.964,819,1.371,820,1.371,821,1.125,822,0.964,823,1.847,824,2.25,825,2.25,826,2.249,827,2.862,828,0.843,829,1.371,830,1.847,831,0.843,832,1.371,833,0.964,834,1.371,835,1.371,836,1.371,837,1.371,838,2.25,839,1.371,840,1.371,841,1.371,842,1.847,843,1.371,844,1.225,845,1.125,846,1.371,847,1.371,848,1.371,849,3.003,850,2.25,851,1.371,852,1.371,853,3.313,854,1.371,855,1.371,856,1.371,857,1.371,858,0.964,859,1.371,860,2.25,861,1.371,862,2.25,863,1.125,864,1.371,865,0.964,866,2.25,867,1.371,868,1.371,869,1.371,870,1.371,871,1.371,872,3.313,873,3.157,874,2.919,875,2.329,876,1.371,877,1.847,878,3.313,879,1.371,880,1.125,881,1.371,882,1.371,883,1.371,884,1.371,885,1.371,886,3.56,887,1.371,888,1.371,889,1.125,890,2.862,891,1.125,892,2.012,893,2.012,894,2.25,895,0.843,896,1.125,897,1.371,898,1.125,899,1.125,900,1.125,901,1.125,902,1.371,903,1.125,904,1.371,905,1.125,906,1.125,907,1.125,908,1.371,909,2.35,910,1.371,911,1.371,912,1.371,913,2.719,914,1.371,915,2.25,916,1.371,917,1.371,918,1.371,919,2.25,920,2.25,921,1.371,922,1.371,923,1.371,924,1.371,925,2.25,926,1.371,927,1.371,928,1.371,929,1.371,930,1.371,931,1.371,932,1.371,933,1.371,934,1.371,935,2.25,936,1.371,937,1.371,938,1.371,939,1.371,940,1.371,941,1.371,942,1.371,943,1.371,944,1.371,945,1.371,946,1.371,947,1.371,948,1.582,949,1.371,950,1.582,951,1.371,952,2.862,953,2.25,954,1.371,955,1.371,956,2.25,957,1.371,958,1.371,959,1.371,960,1.371,961,1.371,962,1.371,963,1.371,964,1.371,965,1.371,966,1.371,967,1.371,968,0.843,969,1.371,970,1.371,971,1.371,972,1.371,973,1.371,974,1.371,975,1.125,976,1.371,977,1.371,978,1.125,979,1.371]],["title/additional-documentation/stomp-brokers.html",[8,0.193,13,0.595,483,0.533,813,0.737]],["body/additional-documentation/stomp-brokers.html",[2,1.314,3,1.056,8,0.493,13,1.322,19,1.472,31,0.036,73,1.265,92,0.028,124,0.613,140,2.313,156,1.305,158,2.003,161,1.68,169,2.017,213,0.028,249,1.041,251,2.193,265,2.243,268,1.841,270,2.105,282,1.409,290,2.105,296,0.941,309,1.63,321,2.147,325,1.305,371,2.503,386,2.493,428,1.057,450,1.589,451,1.174,459,1.841,460,1.841,461,1.63,468,1.841,469,2.493,483,0.688,490,3.029,491,1.455,498,2.458,502,1.63,514,2.458,523,2.493,528,1.841,543,2.105,595,2.458,656,2.458,664,1.63,689,2.208,816,2.458,818,2.105,821,2.458,826,1.841,828,1.841,831,2.493,849,2.458,858,3.231,889,2.458,895,3.029,948,2.85,950,2.105,978,3.773,980,2.105,981,2.994,982,2.994,983,4.054,984,3.814,985,2.994,986,3.328,987,2.994,988,2.85,989,2.994,990,2.994,991,2.458,992,2.458,993,2.105,994,2.994,995,2.994,996,2.105,997,5.306,998,2.994,999,2.994,1000,2.994,1001,2.458,1002,2.458,1003,2.994,1004,2.994,1005,2.994,1006,2.994,1007,2.994,1008,2.994,1009,2.994,1010,2.994,1011,2.994,1012,2.994,1013,2.994,1014,4.054,1015,4.054,1016,4.054,1017,4.054,1018,4.054,1019,2.994,1020,2.994,1021,2.994,1022,2.994,1023,2.994,1024,2.994,1025,2.994,1026,2.994,1027,2.994,1028,2.994,1029,2.994,1030,2.994,1031,2.994,1032,2.994,1033,2.994,1034,2.994,1035,5.426,1036,2.994,1037,2.994,1038,4.926,1039,2.994,1040,2.994,1041,4.597,1042,4.054,1043,2.994,1044,2.994,1045,2.994,1046,2.458,1047,2.994,1048,2.994,1049,2.994,1050,2.994,1051,2.994]],["title/additional-documentation/upgrading.html",[483,0.612,497,1.451,813,0.847]],["body/additional-documentation/upgrading.html",[8,0.445,13,1.059,16,1.529,21,1.18,23,1.204,31,0.041,40,1.084,70,0.976,73,1.059,79,0.789,92,0.028,95,1.204,97,2.522,113,0.878,124,1.118,146,2.522,152,1.798,161,1.562,169,1.617,213,0.028,217,1.673,221,0.976,226,2.005,228,0.878,248,1.339,249,1.444,251,1.951,254,1.204,257,2.029,268,2.863,269,3.095,270,3.274,271,1.889,280,1.673,282,1.18,283,2.141,290,2.9,291,2.263,293,2.16,295,1.889,296,0.629,302,3.499,306,4.389,308,4.086,309,2.246,321,1.798,322,2.536,325,1.339,360,1.889,370,1.889,376,2.536,381,2.863,382,2.863,450,1.617,452,1.493,454,1.673,459,2.536,468,1.889,477,2.522,487,2.16,491,1.493,493,1.673,497,2.246,504,2.16,505,2.029,529,2.005,560,2.16,607,3.386,651,2.536,664,1.673,671,2.16,689,1.673,711,2.263,721,1.493,793,2.9,813,0.976,818,2.9,826,2.863,833,2.9,842,3.823,844,2.246,873,2.9,906,3.823,907,3.823,950,2.16,968,1.889,986,2.522,988,2.9,996,2.16,1002,2.522,1052,3.072,1053,3.072,1054,3.072,1055,4.125,1056,4.125,1057,3.072,1058,3.386,1059,2.522,1060,3.072,1061,3.072,1062,3.072,1063,3.072,1064,2.522,1065,2.522,1066,3.072,1067,3.072,1068,3.072,1069,3.072,1070,2.522,1071,3.072,1072,3.072,1073,3.072]],["title/additional-documentation/sockjs-support.html",[282,0.663,291,1.011,483,0.533,813,0.737]],["body/additional-documentation/sockjs-support.html",[0,0.845,8,0.306,9,2.002,13,0.944,16,1.051,23,1.441,30,0.949,31,0.036,55,1.787,70,1.169,79,0.944,92,0.032,124,1.2,133,2.585,152,1.602,156,2.213,161,1.695,213,0.032,220,1.298,221,1.474,248,1.602,249,0.944,252,1.298,254,1.441,265,2.021,269,2.002,271,2.261,281,1.602,282,1.572,283,1.441,289,3.018,291,2.447,293,2.585,296,0.753,297,2.261,298,1.441,301,3.807,302,3.749,303,3.57,309,2.525,325,1.602,379,2.002,449,2.002,451,1.817,452,2.728,454,2.002,459,2.851,493,2.002,501,1.787,510,2.585,517,2.002,520,2.261,560,2.585,664,2.002,711,1.787,828,2.261,831,2.261,833,2.585,844,2.002,845,3.018,863,3.018,865,2.585,892,2.585,893,2.585,913,3.018,948,2.585,988,2.585,991,3.018,992,3.018,993,2.585,1058,3.018,1059,3.018,1074,3.677,1075,3.677,1076,3.677,1077,3.677,1078,3.677,1079,3.677,1080,3.677,1081,3.677,1082,3.677,1083,3.677,1084,3.677,1085,3.677,1086,3.677]],["title/additional-documentation/change-log.html",[347,1.011,483,0.533,505,1.011,813,0.737]],["body/additional-documentation/change-log.html",[0,0.63,1,1.092,3,0.877,4,0.692,8,0.416,11,1.496,12,2.391,16,1.092,18,1.685,19,1.092,21,1.358,30,0.562,31,0.038,40,1.347,54,1.333,67,1.929,69,3.134,73,0.98,79,0.704,92,0.03,95,1.075,124,0.972,134,1.929,136,1.687,157,1.687,158,1.914,159,1.664,161,1.092,194,1.687,195,1.929,200,2.252,213,0.026,217,2.391,221,1.509,222,2.079,223,2.079,226,1.333,228,1.256,230,1.196,231,1.347,249,1.281,252,0.968,254,1.075,257,1.914,258,1.929,281,1.196,282,1.358,283,1.075,286,1.929,296,1.022,297,2.348,321,1.196,324,2.684,325,1.196,344,1.333,347,1.196,354,2.585,355,2.079,356,2.391,359,1.196,361,1.494,371,2.391,391,1.687,395,2.079,415,1.929,417,2.919,428,1.761,447,1.687,449,1.494,450,1.075,482,1.929,483,0.63,497,1.494,501,1.855,505,2.252,510,1.929,511,2.252,517,1.494,519,3.337,520,2.919,527,1.494,529,1.333,537,3.134,538,3.134,539,3.134,540,3.134,541,2.252,564,2.252,622,2.252,631,3.134,658,3.726,689,2.391,711,1.855,721,1.333,730,1.687,736,2.684,752,1.687,813,0.872,814,1.929,822,1.929,826,2.348,831,1.687,874,1.929,875,1.929,877,2.252,886,3.134,891,3.134,892,2.684,893,2.684,895,1.687,896,2.252,898,2.252,899,2.252,900,2.252,901,2.252,968,2.7,980,1.929,984,1.929,993,1.929,1001,2.252,1064,2.252,1065,2.252,1087,2.743,1088,2.743,1089,4.991,1090,2.743,1091,2.743,1092,2.743,1093,2.743,1094,2.743,1095,2.743,1096,2.743,1097,2.743,1098,4.991,1099,2.743,1100,2.743,1101,2.743,1102,2.743,1103,2.743,1104,2.743,1105,3.818,1106,2.743,1107,2.743,1108,2.743,1109,2.743,1110,2.743,1111,2.743,1112,2.743,1113,2.252,1114,2.743,1115,2.743,1116,2.743,1117,2.743,1118,2.743,1119,2.743,1120,2.743,1121,2.743,1122,2.743,1123,2.743,1124,2.252,1125,2.743,1126,2.743,1127,2.743,1128,2.743,1129,2.743,1130,2.743,1131,2.743,1132,2.252,1133,2.252,1134,2.743,1135,2.743,1136,2.743,1137,2.743,1138,2.743,1139,2.743,1140,2.743,1141,2.743,1142,2.743,1143,2.743,1144,2.743,1145,2.743,1146,2.743,1147,3.818,1148,2.743,1149,2.743,1150,2.743,1151,2.743,1152,2.743,1153,2.743,1154,2.252,1155,2.743,1156,2.743,1157,2.743,1158,2.743,1159,2.743,1160,2.743,1161,2.743,1162,2.743,1163,2.743,1164,2.743,1165,2.743,1166,2.743,1167,2.743,1168,2.743,1169,3.818,1170,2.743]],["title/additional-documentation/how-to-contribute.html",[483,0.612,526,1.639,813,0.847]],["body/additional-documentation/how-to-contribute.html",[1,1.389,3,0.586,4,0.915,8,0.433,13,0.932,16,1.315,18,1.342,21,0.73,23,1.655,26,1.281,28,1.764,29,2.095,30,0.523,31,0.041,32,1,70,0.811,73,0.655,92,0.025,124,1.121,136,1.57,137,1.57,159,1.112,161,0.73,169,1.422,183,1.39,194,1.57,213,0.025,220,1.281,251,1,252,1.281,254,1.655,257,2.117,258,2.968,265,1.112,281,1.84,296,0.523,298,1.422,321,1.582,325,1.84,359,1.84,370,1.57,371,2.504,374,2.231,428,1.715,446,2.551,447,2.231,448,1.57,449,1.39,450,1.422,451,1.422,452,2.453,456,2.095,460,2.231,461,1.976,469,2.231,479,2.551,480,2.979,481,2.979,482,3.233,483,0.586,486,2.979,487,2.551,490,1.57,491,2.052,501,1.764,505,1.112,517,1.976,519,1.794,520,1.57,521,2.968,523,3.104,526,2.231,528,1.57,529,2.361,565,2.095,604,2.095,658,1.794,664,1.39,721,1.24,757,1.794,814,2.551,817,2.095,822,1.794,823,2.095,828,1.57,830,3.775,844,1.39,858,1.794,865,2.551,880,2.095,895,1.57,903,2.095,968,3.47,980,1.794,984,3.651,996,1.794,1046,2.095,1070,2.095,1113,2.095,1132,4.144,1133,2.095,1171,2.553,1172,3.629,1173,2.553,1174,3.629,1175,3.629,1176,2.553,1177,3.629,1178,4.599,1179,2.553,1180,4.858,1181,2.553,1182,2.553,1183,2.553,1184,2.553,1185,3.629,1186,2.553,1187,2.553,1188,2.553,1189,4.599,1190,4.223,1191,2.553,1192,2.553,1193,2.553,1194,2.553,1195,2.553,1196,2.553,1197,2.553,1198,2.553,1199,2.553,1200,2.553,1201,2.553,1202,2.553,1203,2.553,1204,2.553,1205,2.553,1206,4.223,1207,2.553,1208,3.629,1209,2.553,1210,2.553,1211,2.553,1212,2.553,1213,2.553,1214,2.553,1215,3.629,1216,2.553,1217,2.553,1218,2.553,1219,4.599,1220,2.553,1221,2.553,1222,2.553,1223,2.553,1224,2.553,1225,2.553,1226,2.553,1227,2.553,1228,2.553,1229,3.629,1230,2.553,1231,3.629,1232,2.553,1233,2.553,1234,2.553,1235,2.553,1236,2.553,1237,2.553,1238,2.553,1239,2.553,1240,2.553,1241,2.553,1242,2.553,1243,2.553,1244,2.553,1245,2.553,1246,2.553,1247,2.553,1248,2.553,1249,2.553,1250,2.553,1251,2.553,1252,2.553,1253,2.553,1254,2.553,1255,2.553,1256,2.553,1257,2.553,1258,2.553,1259,2.553,1260,2.553,1261,2.553,1262,2.553,1263,2.553,1264,2.553,1265,2.553]],["title/routes.html",[1266,3.431]],["body/routes.html",[31,0.037,92,0.037,213,0.037,1266,3.901]],["title/classes/CompatClient.html",[0,0.72,272,1.926]],["body/classes/CompatClient.html",[0,0.705,1,0.877,2,0.434,3,0.348,4,0.275,6,0.535,8,0.398,11,1.202,13,1.058,16,0.698,18,1.712,19,1.102,20,1.717,21,1.366,22,2.156,23,1.378,25,0.348,27,2.861,28,2.261,30,1.049,31,0.042,32,1.95,35,1.852,37,1.361,40,1.723,42,1.082,48,1.064,49,0.482,50,2.156,52,0.932,53,1.717,54,2.732,55,0.737,63,0.932,67,1.066,70,1.581,73,1.157,79,1.347,86,2.321,92,0.017,95,0.594,113,0.434,124,1.049,134,1.066,152,0.661,159,1.964,166,1.066,213,0.017,218,2.005,221,0.975,226,1.187,228,0.698,230,1.964,231,1.686,232,1.066,233,2.659,249,1.195,252,1.082,254,0.957,272,1.886,283,0.957,295,1.502,296,0.5,297,3.428,298,0.594,307,4.577,322,1.502,323,1.502,341,1.717,342,0.932,343,2.371,344,1.49,354,1.33,355,1.33,356,1.33,359,1.796,361,1.33,365,2.162,367,2.162,383,1.717,386,0.932,417,0.932,428,0.862,436,4.15,437,1.245,476,1.502,491,2.106,502,1.33,504,1.066,527,1.33,585,1.717,598,1.066,603,2.896,612,1.245,615,2.005,616,1.245,617,2.005,623,1.717,628,1.245,643,1.245,644,1.245,645,1.245,646,2.005,647,2.005,649,1.245,650,1.245,651,1.502,653,1.245,654,1.245,655,1.245,685,1.245,686,1.245,705,1.245,711,1.187,720,1.717,721,1.709,722,2.005,723,2.005,724,1.717,727,1.717,728,1.717,729,2.472,730,0.932,731,2.005,733,1.245,752,1.886,754,1.066,755,1.717,762,1.066,812,2.472,844,0.826,873,3.358,874,3.168,875,2.472,905,1.245,909,2.887,975,2.005,1124,4.577,1154,2.518,1267,4.333,1268,2.442,1269,1.516,1270,2.442,1271,2.442,1272,1.516,1273,3.067,1274,2.442,1275,2.442,1276,3.516,1277,1.516,1278,1.516,1279,1.516,1280,1.516,1281,1.516,1282,1.516,1283,1.516,1284,1.516,1285,1.516,1286,1.516,1287,1.516,1288,2.442,1289,1.516,1290,2.442,1291,2.442,1292,2.442,1293,1.516,1294,3.516,1295,1.516,1296,1.516,1297,1.516,1298,1.516,1299,5.246,1300,2.442,1301,1.516,1302,1.516,1303,2.442,1304,1.516,1305,1.516,1306,3.516,1307,1.516,1308,1.516,1309,2.442,1310,1.516,1311,1.516,1312,3.516,1313,1.516,1314,1.516,1315,1.516,1316,1.516,1317,3.516,1318,3.516,1319,1.516,1320,1.516,1321,1.516,1322,1.516,1323,1.516,1324,1.516,1325,1.516,1326,1.516,1327,1.516,1328,1.516,1329,1.516,1330,1.516,1331,2.442,1332,2.442,1333,2.442,1334,2.442,1335,1.516,1336,1.516,1337,1.516,1338,1.516,1339,1.516,1340,2.442,1341,1.516,1342,1.516,1343,1.516,1344,1.516,1345,1.516,1346,2.442,1347,1.516,1348,2.442,1349,1.516,1350,1.516,1351,2.442,1352,1.516,1353,2.442,1354,2.442,1355,1.516,1356,1.516,1357,1.516,1358,1.516,1359,2.442,1360,1.516,1361,2.442,1362,1.516]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"routes.html":{},"classes/CompatClient.html":{}}}],["0",{"_index":95,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["0/4",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["001",{"_index":761,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["1",{"_index":130,"title":{},"body":{"classes/Frame.html":{}}}],["1).map((fram",{"_index":176,"title":{},"body":{"classes/Frame.html":{}}}],["1)[0",{"_index":189,"title":{},"body":{"classes/Frame.html":{}}}],["1.0",{"_index":413,"title":{},"body":{"classes/Versions.html":{},"additional-documentation/usage.html":{}}}],["1.1",{"_index":415,"title":{},"body":{"classes/Versions.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["1.2",{"_index":417,"title":{},"body":{"classes/Versions.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["1.2.html",{"_index":1259,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["1.2.html#abort",{"_index":788,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1.2.html#ack",{"_index":795,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1.2.html#begin",{"_index":776,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1.2.html#commit",{"_index":784,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1.2.html#connect_or_stomp_fram",{"_index":1329,"title":{},"body":{"classes/CompatClient.html":{}}}],["1.2.html#disconnect",{"_index":713,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1.2.html#error",{"_index":633,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1.2.html#nack",{"_index":803,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1.2.html#send",{"_index":731,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["1.2.html#stomp_fram",{"_index":24,"title":{},"body":{"classes/Frame.html":{}}}],["1.2.html#subscrib",{"_index":763,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1.2.html#unsubscrib",{"_index":769,"title":{},"body":{"interfaces/publishParams.html":{}}}],["1/1",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["10,000m",{"_index":897,"title":{},"body":{"additional-documentation/usage.html":{}}}],["100",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":608,"title":{},"body":{"interfaces/publishParams.html":{}}}],["10000m",{"_index":1168,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["1024",{"_index":610,"title":{},"body":{"interfaces/publishParams.html":{}}}],["11e2",{"_index":1029,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["123",{"_index":1026,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["15",{"_index":1015,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["15674:15674",{"_index":1234,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["16",{"_index":609,"title":{},"body":{"interfaces/publishParams.html":{}}}],["16/16",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["16kib",{"_index":364,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["195.46",{"_index":938,"title":{},"body":{"additional-documentation/usage.html":{}}}],["1:15:33",{"_index":1017,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["1st",{"_index":123,"title":{},"body":{"classes/Frame.html":{}}}],["2",{"_index":101,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{}}}],["2.0",{"_index":1164,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2.3.0.cr2",{"_index":1024,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["2.4.9",{"_index":1145,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2.5.0",{"_index":1142,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2.5.1",{"_index":1137,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2/2",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1119,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["20000",{"_index":899,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["20000m",{"_index":900,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["2012/11/29",{"_index":1165,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2013",{"_index":1016,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["2016/04/01",{"_index":1146,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/02/15",{"_index":1143,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/03/28",{"_index":1138,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/07/05",{"_index":1128,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/11/04",{"_index":1126,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2017/11/09",{"_index":1121,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018",{"_index":546,"title":{},"body":{"license.html":{}}}],["2018/01/29",{"_index":1118,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018/02/23",{"_index":1112,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018/05/09",{"_index":1101,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018/05/22",{"_index":1096,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["2018/05/26",{"_index":1088,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["21",{"_index":1116,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["22",{"_index":1114,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["23",{"_index":1115,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["26",{"_index":1103,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["27",{"_index":1106,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["29/29",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1166,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["3.1.0",{"_index":1127,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["3.1.2",{"_index":1125,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["3.6.2.final",{"_index":1010,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["3.x.x",{"_index":847,"title":{},"body":{"additional-documentation/usage.html":{}}}],["3/3",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1107,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["38",{"_index":1099,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["39",{"_index":1090,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.0",{"_index":1120,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.1",{"_index":1117,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.2",{"_index":1111,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.3",{"_index":1100,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.4",{"_index":1095,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.5",{"_index":1091,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4.0.6",{"_index":1087,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["4/4",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":601,"title":{},"body":{"overview.html":{}}}],["5.4",{"_index":1036,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["5000",{"_index":607,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/upgrading.html":{}}}],["5000;see",{"_index":1057,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["5000;send",{"_index":908,"title":{},"body":{"additional-documentation/usage.html":{}}}],["6",{"_index":602,"title":{},"body":{"overview.html":{}}}],["61613",{"_index":1068,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["61614.it",{"_index":1034,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["8",{"_index":84,"title":{},"body":{"classes/Frame.html":{}}}],["9",{"_index":728,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["976a",{"_index":1030,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["_activ",{"_index":638,"title":{},"body":{"interfaces/publishParams.html":{}}}],["_connect",{"_index":674,"title":{},"body":{"interfaces/publishParams.html":{}}}],["_createwebsocket",{"_index":701,"title":{},"body":{"interfaces/publishParams.html":{}}}],["_disposestomphandl",{"_index":717,"title":{},"body":{"interfaces/publishParams.html":{}}}],["_heartbeatinfo",{"_index":1350,"title":{},"body":{"classes/CompatClient.html":{}}}],["_parseconnect(...arg",{"_index":1326,"title":{},"body":{"classes/CompatClient.html":{}}}],["_reconnector",{"_index":639,"title":{},"body":{"interfaces/publishParams.html":{}}}],["_schedule_reconnect",{"_index":704,"title":{},"body":{"interfaces/publishParams.html":{}}}],["_stomphandl",{"_index":637,"title":{},"body":{"interfaces/publishParams.html":{}}}],["_websocket",{"_index":614,"title":{},"body":{"interfaces/publishParams.html":{}}}],["a5bd",{"_index":1028,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["abort",{"_index":403,"title":{},"body":{"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["abort(transactionid",{"_index":789,"title":{},"body":{"interfaces/publishParams.html":{}}}],["abort]{@link",{"_index":774,"title":{},"body":{"interfaces/publishParams.html":{}}}],["abov",{"_index":573,"title":{},"body":{"license.html":{}}}],["accept",{"_index":386,"title":{},"body":{"interfaces/StompHeaders.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"classes/CompatClient.html":{}}}],["acceptor",{"_index":1009,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["access",{"_index":17,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["accessor",{"_index":1296,"title":{},"body":{"classes/CompatClient.html":{}}}],["account",{"_index":1196,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["ack",{"_index":222,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["ack(head",{"_index":224,"title":{},"body":{"interfaces/Message.html":{}}}],["ack(messageid",{"_index":796,"title":{},"body":{"interfaces/publishParams.html":{}}}],["ack/nack",{"_index":1148,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["ack]{@link",{"_index":791,"title":{},"body":{"interfaces/publishParams.html":{}}}],["acknowledg",{"_index":180,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["act",{"_index":246,"title":{},"body":{"classes/Stomp.html":{}}}],["action",{"_index":594,"title":{},"body":{"license.html":{}}}],["activ",{"_index":476,"title":{},"body":{"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["activemq",{"_index":1035,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["actual",{"_index":352,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["ad",{"_index":1139,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["add",{"_index":826,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["addit",{"_index":813,"title":{"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["address",{"_index":1044,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["advanc",{"_index":14,"title":{},"body":{"classes/Frame.html":{}}}],["aim",{"_index":983,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["alert(\"got",{"_index":756,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["alert(\"se",{"_index":888,"title":{},"body":{"additional-documentation/usage.html":{}}}],["alert(error.headers.messag",{"_index":870,"title":{},"body":{"additional-documentation/usage.html":{}}}],["alert(quote.symbol",{"_index":943,"title":{},"body":{"additional-documentation/usage.html":{}}}],["alias",{"_index":808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":292,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["along",{"_index":824,"title":{},"body":{"additional-documentation/usage.html":{}}}],["alreadi",{"_index":680,"title":{},"body":{"interfaces/publishParams.html":{}}}],["altern",{"_index":275,"title":{},"body":{"classes/Stomp.html":{}}}],["although",{"_index":1153,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["alway",{"_index":1265,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["and/or",{"_index":567,"title":{},"body":{"license.html":{},"additional-documentation/usage.html":{}}}],["angular",{"_index":513,"title":{},"body":{"index.html":{}}}],["angular2/4/5",{"_index":506,"title":{},"body":{"index.html":{}}}],["annot",{"_index":1170,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["anoth",{"_index":301,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["apach",{"_index":543,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{}}}],["apart",{"_index":1083,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["api",{"_index":501,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["apollo",{"_index":1038,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["append",{"_index":970,"title":{},"body":{"additional-documentation/usage.html":{}}}],["appl",{"_index":937,"title":{},"body":{"additional-documentation/usage.html":{}}}],["appli",{"_index":656,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/stomp-brokers.html":{}}}],["applic",{"_index":454,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["appropri",{"_index":629,"title":{},"body":{"interfaces/publishParams.html":{}}}],["apr",{"_index":1014,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["arg",{"_index":1287,"title":{},"body":{"classes/CompatClient.html":{}}}],["args.length",{"_index":1327,"title":{},"body":{"classes/CompatClient.html":{}}}],["argument",{"_index":752,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["aris",{"_index":597,"title":{},"body":{"license.html":{}}}],["around",{"_index":1048,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["array",{"_index":843,"title":{},"body":{"additional-documentation/usage.html":{}}}],["arraybuff",{"_index":703,"title":{},"body":{"interfaces/publishParams.html":{}}}],["asc",{"_index":148,"title":{},"body":{"classes/Frame.html":{}}}],["ask",{"_index":951,"title":{},"body":{"additional-documentation/usage.html":{}}}],["assign",{"_index":661,"title":{},"body":{"interfaces/publishParams.html":{}}}],["associ",{"_index":557,"title":{},"body":{"license.html":{}}}],["astha",{"_index":536,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":860,"title":{},"body":{"additional-documentation/usage.html":{}}}],["attempt",{"_index":670,"title":{},"body":{"interfaces/publishParams.html":{}}}],["attribut",{"_index":915,"title":{},"body":{"additional-documentation/usage.html":{}}}],["authent",{"_index":850,"title":{},"body":{"additional-documentation/usage.html":{}}}],["author",{"_index":530,"title":{},"body":{"index.html":{},"license.html":{}}}],["authorit",{"_index":820,"title":{},"body":{"additional-documentation/usage.html":{}}}],["auto",{"_index":711,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["autom",{"_index":1181,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["automat",{"_index":381,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["avail",{"_index":54,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["awar",{"_index":1173,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["b3fef7ceb5df]hornetq",{"_index":1031,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["back",{"_index":863,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["backward",{"_index":1124,"title":{},"body":{"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["base",{"_index":509,"title":{},"body":{"index.html":{}}}],["basic",{"_index":985,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["beat",{"_index":893,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["befor",{"_index":116,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["begin",{"_index":777,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["begin(transactionid",{"_index":778,"title":{},"body":{"interfaces/publishParams.html":{}}}],["behavior",{"_index":846,"title":{},"body":{"additional-documentation/usage.html":{}}}],["behaviour",{"_index":1160,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["behind",{"_index":856,"title":{},"body":{"additional-documentation/usage.html":{}}}],["benefit",{"_index":495,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["better",{"_index":465,"title":{},"body":{"index.html":{}}}],["between",{"_index":987,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["bigger",{"_index":363,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["binari",{"_index":464,"title":{},"body":{"index.html":{}}}],["black'n'yellow2",{"_index":1025,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["bodi",{"_index":28,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["body);subscrib",{"_index":912,"title":{},"body":{"additional-documentation/usage.html":{}}}],["body]{@link",{"_index":240,"title":{},"body":{"interfaces/Message.html":{}}}],["bodystr",{"_index":1264,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["borker",{"_index":852,"title":{},"body":{"additional-documentation/usage.html":{}}}],["both",{"_index":517,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["bower",{"_index":1102,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["bower.json",{"_index":1204,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["box",{"_index":819,"title":{},"body":{"additional-documentation/usage.html":{}}}],["break",{"_index":151,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["broker",{"_index":13,"title":{"additional-documentation/stomp-brokers.html":{}},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["browser",{"_index":452,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["browser'",{"_index":988,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["buffer",{"_index":185,"title":{},"body":{"classes/Frame.html":{}}}],["build",{"_index":1132,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["build/watch",{"_index":1199,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["buildto",{"_index":1235,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["bulk",{"_index":660,"title":{},"body":{"interfaces/publishParams.html":{}}}],["busi",{"_index":977,"title":{},"body":{"additional-documentation/usage.html":{}}}],["byte",{"_index":43,"title":{},"body":{"classes/Frame.html":{}}}],["byte.lf",{"_index":190,"title":{},"body":{"classes/Frame.html":{}}}],["byte.nul",{"_index":150,"title":{},"body":{"classes/Frame.html":{}}}],["c",{"_index":206,"title":{},"body":{"classes/Frame.html":{},"license.html":{}}}],["c0d783c",{"_index":1011,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["c9e29e45",{"_index":1027,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["cake",{"_index":1180,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["cakefil",{"_index":1198,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["call",{"_index":228,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["callabl",{"_index":285,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":10,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["callback);th",{"_index":914,"title":{},"body":{"additional-documentation/usage.html":{}}}],["callback]{@link",{"_index":237,"title":{},"body":{"interfaces/Message.html":{}}}],["callbck",{"_index":751,"title":{},"body":{"interfaces/publishParams.html":{}}}],["caller",{"_index":186,"title":{},"body":{"classes/Frame.html":{}}}],["case",{"_index":254,"title":{},"body":{"classes/Stomp.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["caught",{"_index":1109,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["caus",{"_index":1253,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["caution",{"_index":1250,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["caveat",{"_index":402,"title":{},"body":{"interfaces/Transaction.html":{}}}],["cd",{"_index":1003,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["chang",{"_index":505,"title":{"additional-documentation/change-log.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["changelog",{"_index":1110,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["charact",{"_index":87,"title":{},"body":{"classes/Frame.html":{}}}],["charalampidi",{"_index":540,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["charg",{"_index":552,"title":{},"body":{"license.html":{}}}],["check",{"_index":133,"title":{},"body":{"classes/Frame.html":{},"index.html":{},"additional-documentation/sockjs-support.html":{}}}],["checkout",{"_index":1194,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["choos",{"_index":946,"title":{},"body":{"additional-documentation/usage.html":{}}}],["chr",{"_index":145,"title":{},"body":{"classes/Frame.html":{}}}],["chrome",{"_index":1240,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["ci",{"_index":1136,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["citizen",{"_index":1122,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["claim",{"_index":590,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Frame.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"classes/CompatClient.html":{}},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{},"overview.html":{},"interfaces/publishParams.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["clean",{"_index":1006,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["cleanup",{"_index":1105,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["clear",{"_index":715,"title":{},"body":{"interfaces/publishParams.html":{}}}],["cleartimeout(this._reconnector",{"_index":716,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client",{"_index":249,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["client#abort",{"_index":405,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#abort]{@link",{"_index":408,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#ack",{"_index":229,"title":{},"body":{"interfaces/Message.html":{}}}],["client#ack]{@link",{"_index":243,"title":{},"body":{"interfaces/Message.html":{}}}],["client#activ",{"_index":1273,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#activate]{@link",{"_index":1336,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#begin",{"_index":400,"title":{},"body":{"interfaces/Transaction.html":{},"interfaces/publishParams.html":{}}}],["client#commit",{"_index":406,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#commit]{@link",{"_index":407,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#configur",{"_index":326,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#configure]{@link",{"_index":384,"title":{},"body":{"interfaces/StompConfig.html":{}}}],["client#connecthead",{"_index":1277,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#deactiv",{"_index":668,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client#deactivate]{@link",{"_index":667,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client#disconnecthead",{"_index":1291,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#disconnectheaders]{@link",{"_index":1338,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#heartbeatincom",{"_index":1317,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#heartbeatincoming]{@link",{"_index":1353,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#heartbeatoutgo",{"_index":1318,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":1354,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#nack",{"_index":236,"title":{},"body":{"interfaces/Message.html":{}}}],["client#nack]{@link",{"_index":244,"title":{},"body":{"interfaces/Message.html":{}}}],["client#onconnect",{"_index":1278,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#ondisconnect",{"_index":1290,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#ondisconnect]{@link",{"_index":1337,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#onrec",{"_index":239,"title":{},"body":{"interfaces/Message.html":{}}}],["client#onstomperror",{"_index":1279,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#onunhandledmessag",{"_index":1306,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#onunhandledmessage]{@link",{"_index":1346,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#onunhandledreceipt",{"_index":1312,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":1348,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#onwebsocketclos",{"_index":628,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["client#onwebsocketclose]{@link",{"_index":627,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client#publish",{"_index":1294,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#publish]{@link",{"_index":1340,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#reconnectdelay",{"_index":1300,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#reconnectdelay]{@link",{"_index":1343,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#subscrib",{"_index":219,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":242,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscrib",{"_index":394,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":396,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":617,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["client#watchforreceipt]{@link",{"_index":616,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["client#websocket",{"_index":1303,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#websocket]{@link",{"_index":1345,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#websocketfactori",{"_index":1270,"title":{},"body":{"classes/CompatClient.html":{}}}],["client#websocketfactory]{@link",{"_index":1321,"title":{},"body":{"classes/CompatClient.html":{}}}],["client(url",{"_index":264,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":284,"title":{},"body":{"classes/Stomp.html":{}}}],["client.begin",{"_index":952,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.begin(txid",{"_index":782,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client.begin]{@link",{"_index":780,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client.connect('guest",{"_index":1282,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.connect(head",{"_index":878,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.connect(login",{"_index":872,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.debug",{"_index":349,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["client.debug(\"connect",{"_index":1285,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.disconnect(funct",{"_index":887,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.heartbeat.incom",{"_index":901,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["client.heartbeat.outgo",{"_index":898,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["client.reconnect_delay",{"_index":907,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["client.send(\"/queue/test",{"_index":909,"title":{},"body":{"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["client.send(\"/topic/stock",{"_index":939,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.send(destin",{"_index":911,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.send(test.destin",{"_index":747,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client.send({destin",{"_index":725,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client.subcribe(\"/topic/stock",{"_index":941,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.subscrib",{"_index":767,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client.subscribe(\"/queue/test",{"_index":758,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["client.subscribe(\"queue/anoth",{"_index":927,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.subscribe(\"queue/test",{"_index":925,"title":{},"body":{"additional-documentation/usage.html":{}}}],["client.subscribe(destin",{"_index":762,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["client.subscribe(test.destin",{"_index":745,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client.t",{"_index":437,"title":{},"body":{"coverage.html":{},"classes/CompatClient.html":{}}}],["client.ts:10",{"_index":1269,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:108",{"_index":1289,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:137",{"_index":1293,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:147",{"_index":1298,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:156",{"_index":1302,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:165",{"_index":1305,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:174",{"_index":1308,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:184",{"_index":1311,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:193",{"_index":1314,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:205",{"_index":1316,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:215",{"_index":1320,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.ts:88",{"_index":1272,"title":{},"body":{"classes/CompatClient.html":{}}}],["client.watchforreceipt(receiptid",{"_index":744,"title":{},"body":{"interfaces/publishParams.html":{}}}],["close",{"_index":631,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/change-log.html":{}}}],["close/termin",{"_index":626,"title":{},"body":{"interfaces/publishParams.html":{}}}],["closeev",{"_index":877,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["closeeventcallback",{"_index":875,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["closeeventcallback);wher",{"_index":879,"title":{},"body":{"additional-documentation/usage.html":{}}}],["closeeventcallbacktyp",{"_index":380,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["code",{"_index":529,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["codo",{"_index":1178,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["coffeelint.json",{"_index":1205,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["coffeescript",{"_index":1175,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["coffeesctipt",{"_index":1217,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["combin",{"_index":741,"title":{},"body":{"interfaces/publishParams.html":{}}}],["come",{"_index":488,"title":{},"body":{"index.html":{}}}],["command",{"_index":29,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/how-to-contribute.html":{}}}],["commandstringnam",{"_index":1261,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["commit",{"_index":404,"title":{},"body":{"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["commit(transactionid",{"_index":785,"title":{},"body":{"interfaces/publishParams.html":{}}}],["commit]{@link",{"_index":772,"title":{},"body":{"interfaces/publishParams.html":{}}}],["commun",{"_index":833,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["compat",{"_index":297,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["compatcli",{"_index":272,"title":{"classes/CompatClient.html":{}},"body":{"classes/Stomp.html":{},"coverage.html":{},"classes/CompatClient.html":{}}}],["compatclient(ws_fn",{"_index":315,"title":{},"body":{"classes/Stomp.html":{}}}],["compil",{"_index":1214,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["complet",{"_index":379,"title":{},"body":{"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["compliant",{"_index":630,"title":{},"body":{"interfaces/publishParams.html":{}}}],["compos",{"_index":88,"title":{},"body":{"classes/Frame.html":{}}}],["comprehens",{"_index":167,"title":{},"body":{"classes/Frame.html":{}}}],["comput",{"_index":81,"title":{},"body":{"classes/Frame.html":{}}}],["condit",{"_index":572,"title":{},"body":{"license.html":{}}}],["conf",{"_index":663,"title":{},"body":{"interfaces/publishParams.html":{}}}],["config",{"_index":604,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/how-to-contribute.html":{}}}],["config.j",{"_index":1219,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["config.t",{"_index":320,"title":{},"body":{"interfaces/StompConfig.html":{},"coverage.html":{}}}],["configur",{"_index":321,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["configure(conf",{"_index":659,"title":{},"body":{"interfaces/publishParams.html":{}}}],["conform",{"_index":1079,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["connect",{"_index":73,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"index.html":{},"license.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["connect(...arg",{"_index":1271,"title":{},"body":{"classes/CompatClient.html":{}}}],["connect(head",{"_index":1275,"title":{},"body":{"classes/CompatClient.html":{}}}],["connect(login",{"_index":1276,"title":{},"body":{"classes/CompatClient.html":{}}}],["connect_callback",{"_index":862,"title":{},"body":{"additional-documentation/usage.html":{}}}],["connectcallback",{"_index":873,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"classes/CompatClient.html":{}}}],["connectcallback);to",{"_index":885,"title":{},"body":{"additional-documentation/usage.html":{}}}],["connecthead",{"_index":327,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["consecut",{"_index":102,"title":{},"body":{"classes/Frame.html":{}}}],["consol",{"_index":348,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["console.log(...messag",{"_index":1325,"title":{},"body":{"classes/CompatClient.html":{}}}],["console.log(str",{"_index":351,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["const",{"_index":63,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["constructor",{"_index":53,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"classes/CompatClient.html":{}}}],["constructor(command",{"_index":56,"title":{},"body":{"classes/Frame.html":{}}}],["constructor(conf",{"_index":640,"title":{},"body":{"interfaces/publishParams.html":{}}}],["constructor(websocketfactori",{"_index":1268,"title":{},"body":{"classes/CompatClient.html":{}}}],["consum",{"_index":955,"title":{},"body":{"additional-documentation/usage.html":{}}}],["contain",{"_index":168,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{}}}],["content",{"_index":134,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["continu",{"_index":1237,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["contract",{"_index":595,"title":{},"body":{"license.html":{},"additional-documentation/stomp-brokers.html":{}}}],["contribut",{"_index":526,"title":{"additional-documentation/how-to-contribute.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-to-contribute.html":{}}}],["contributor",{"_index":518,"title":{},"body":{"index.html":{}}}],["control",{"_index":904,"title":{},"body":{"additional-documentation/usage.html":{}}}],["cooki",{"_index":1248,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["copi",{"_index":555,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":545,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":323,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["count",{"_index":85,"title":{},"body":{"classes/Frame.html":{}}}],["coverag",{"_index":427,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covert",{"_index":722,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["creat",{"_index":248,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["credenti",{"_index":854,"title":{},"body":{"additional-documentation/usage.html":{}}}],["current",{"_index":456,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["custom",{"_index":1074,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["d",{"_index":1232,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["damag",{"_index":591,"title":{},"body":{"license.html":{}}}],["data",{"_index":98,"title":{},"body":{"classes/Frame.html":{}}}],["data.charat(i",{"_index":149,"title":{},"body":{"classes/Frame.html":{}}}],["data.length",{"_index":147,"title":{},"body":{"classes/Frame.html":{}}}],["data.search(new",{"_index":106,"title":{},"body":{"classes/Frame.html":{}}}],["data.substring(0",{"_index":109,"title":{},"body":{"classes/Frame.html":{}}}],["datas.split(new",{"_index":171,"title":{},"body":{"classes/Frame.html":{}}}],["data}`).substring(start",{"_index":144,"title":{},"body":{"classes/Frame.html":{}}}],["date",{"_index":981,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["deactiv",{"_index":688,"title":{},"body":{"interfaces/publishParams.html":{}}}],["deal",{"_index":558,"title":{},"body":{"license.html":{}}}],["debug",{"_index":328,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["debug\").append(str",{"_index":974,"title":{},"body":{"additional-documentation/usage.html":{}}}],["debugfntyp",{"_index":345,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["deep",{"_index":499,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":534,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":252,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["defin",{"_index":32,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["definit",{"_index":520,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["delay",{"_index":382,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["delet",{"_index":69,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/change-log.html":{}}}],["delete:fals",{"_index":1152,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["deliv",{"_index":945,"title":{},"body":{"additional-documentation/usage.html":{}}}],["depend",{"_index":447,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["deprec",{"_index":307,"title":{},"body":{"classes/Stomp.html":{},"classes/CompatClient.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"classes/CompatClient.html":{}}}],["deseri",{"_index":96,"title":{},"body":{"classes/Frame.html":{}}}],["design",{"_index":625,"title":{},"body":{"interfaces/publishParams.html":{}}}],["destin",{"_index":603,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["detail",{"_index":489,"title":{},"body":{"index.html":{},"interfaces/publishParams.html":{}}}],["develop",{"_index":469,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["differ",{"_index":844,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["dillon",{"_index":537,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["directli",{"_index":766,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["disabl",{"_index":360,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["discard",{"_index":346,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["disciplin",{"_index":1108,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["disconnect",{"_index":354,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["disconnect(disconnectcallback",{"_index":1288,"title":{},"body":{"classes/CompatClient.html":{}}}],["disconnectcallback",{"_index":1154,"title":{},"body":{"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["disconnecthead",{"_index":329,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["display",{"_index":868,"title":{},"body":{"additional-documentation/usage.html":{}}}],["dispos",{"_index":718,"title":{},"body":{"interfaces/publishParams.html":{}}}],["distribut",{"_index":565,"title":{},"body":{"license.html":{},"additional-documentation/how-to-contribute.html":{}}}],["div",{"_index":971,"title":{},"body":{"additional-documentation/usage.html":{}}}],["dive",{"_index":500,"title":{},"body":{"index.html":{}}}],["divid",{"_index":105,"title":{},"body":{"classes/Frame.html":{}}}],["divider).split(byte.lf",{"_index":110,"title":{},"body":{"classes/Frame.html":{}}}],["doc",{"_index":1206,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["docker",{"_index":1229,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["dockerfil",{"_index":1113,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["document",{"_index":428,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["domexcept",{"_index":1242,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["done",{"_index":859,"title":{},"body":{"additional-documentation/usage.html":{}}}],["download",{"_index":821,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["drop",{"_index":1065,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["due",{"_index":622,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/change-log.html":{}}}],["dummi",{"_index":641,"title":{},"body":{"interfaces/publishParams.html":{}}}],["durabl",{"_index":1147,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["durable:tru",{"_index":1151,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["dure",{"_index":1184,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["e.g",{"_index":383,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["each",{"_index":322,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/upgrading.html":{},"classes/CompatClient.html":{}}}],["edit",{"_index":1223,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["edit/writ",{"_index":1171,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["effect",{"_index":849,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["empti",{"_index":757,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["emul",{"_index":1084,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["enabl",{"_index":895,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["encodeuri(s).match(/%..|./g",{"_index":93,"title":{},"body":{"classes/Frame.html":{}}}],["end",{"_index":146,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/upgrading.html":{}}}],["endpoint",{"_index":376,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["engin",{"_index":462,"title":{},"body":{"index.html":{}}}],["ensur",{"_index":818,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["entir",{"_index":511,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["entiti",{"_index":503,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["entri",{"_index":486,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["environ",{"_index":258,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["error",{"_index":623,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["error'",{"_index":869,"title":{},"body":{"additional-documentation/usage.html":{}}}],["error_callback",{"_index":866,"title":{},"body":{"additional-documentation/usage.html":{}}}],["errorcallback",{"_index":874,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["escap",{"_index":200,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/change-log.html":{}}}],["escapeheadervalu",{"_index":51,"title":{},"body":{"classes/Frame.html":{}}}],["etc",{"_index":1262,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["europ",{"_index":920,"title":{},"body":{"additional-documentation/usage.html":{}}}],["event",{"_index":587,"title":{},"body":{"license.html":{},"interfaces/publishParams.html":{}}}],["evt",{"_index":694,"title":{},"body":{"interfaces/publishParams.html":{}}}],["exampl",{"_index":220,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["exce",{"_index":162,"title":{},"body":{"classes/Frame.html":{}}}],["exist",{"_index":498,"title":{},"body":{"index.html":{},"additional-documentation/stomp-brokers.html":{}}}],["expect",{"_index":1078,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["explicit",{"_index":759,"title":{},"body":{"interfaces/publishParams.html":{}}}],["export",{"_index":49,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["expos",{"_index":510,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["express",{"_index":580,"title":{},"body":{"license.html":{}}}],["extend",{"_index":20,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/CompatClient.html":{}}}],["extern",{"_index":815,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["factori",{"_index":247,"title":{},"body":{"classes/Stomp.html":{}}}],["fail",{"_index":865,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["failur",{"_index":903,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["fall",{"_index":1080,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["fals",{"_index":57,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["featur",{"_index":473,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["few",{"_index":967,"title":{},"body":{"additional-documentation/usage.html":{}}}],["field",{"_index":324,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"license.html":{},"interfaces/publishParams.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["final",{"_index":178,"title":{},"body":{"classes/Frame.html":{}}}],["find",{"_index":492,"title":{},"body":{"index.html":{},"interfaces/publishParams.html":{}}}],["firefox",{"_index":1249,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["first",{"_index":136,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["fit",{"_index":583,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1098,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["folder",{"_index":1131,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["follow",{"_index":169,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"license.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["forget",{"_index":958,"title":{},"body":{"additional-documentation/usage.html":{}}}],["fork",{"_index":1195,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["form",{"_index":881,"title":{},"body":{"additional-documentation/usage.html":{}}}],["found",{"_index":138,"title":{},"body":{"classes/Frame.html":{}}}],["fragment",{"_index":163,"title":{},"body":{"classes/Frame.html":{}}}],["frame",{"_index":1,"title":{"classes/Frame.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["frame#bodi",{"_index":241,"title":{},"body":{"interfaces/Message.html":{}}}],["frame#head",{"_index":47,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompHeaders.html":{}}}],["frame(command",{"_index":153,"title":{},"body":{"classes/Frame.html":{}}}],["frame.frunescape(valu",{"_index":131,"title":{},"body":{"classes/Frame.html":{}}}],["frame.tostr",{"_index":199,"title":{},"body":{"classes/Frame.html":{}}}],["frame.unmarshallsingle(fram",{"_index":177,"title":{},"body":{"classes/Frame.html":{}}}],["frame]{@link",{"_index":1328,"title":{},"body":{"classes/CompatClient.html":{}}}],["framecallbacktyp",{"_index":365,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"classes/CompatClient.html":{}}}],["frames.slic",{"_index":188,"title":{},"body":{"classes/Frame.html":{}}}],["frames.slice(0",{"_index":175,"title":{},"body":{"classes/Frame.html":{}}}],["framework",{"_index":1043,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["free",{"_index":551,"title":{},"body":{"license.html":{}}}],["frescape(str",{"_index":201,"title":{},"body":{"classes/Frame.html":{}}}],["friendli",{"_index":463,"title":{},"body":{"index.html":{}}}],["frunescape(str",{"_index":208,"title":{},"body":{"classes/Frame.html":{}}}],["full",{"_index":179,"title":{},"body":{"classes/Frame.html":{},"index.html":{}}}],["function",{"_index":113,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/Transaction.html":{},"index.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"classes/CompatClient.html":{}}}],["function(error",{"_index":867,"title":{},"body":{"additional-documentation/usage.html":{}}}],["function(fram",{"_index":1284,"title":{},"body":{"classes/CompatClient.html":{}}}],["function(messag",{"_index":754,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["function(str",{"_index":350,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["furnish",{"_index":570,"title":{},"body":{"license.html":{}}}],["g",{"_index":1193,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["gener",{"_index":461,"title":{},"body":{"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["get",{"_index":448,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["getheartbeat",{"_index":1315,"title":{},"body":{"classes/CompatClient.html":{}}}],["getonrec",{"_index":1304,"title":{},"body":{"classes/CompatClient.html":{}}}],["getonreceipt",{"_index":1310,"title":{},"body":{"classes/CompatClient.html":{}}}],["getw",{"_index":1301,"title":{},"body":{"classes/CompatClient.html":{}}}],["github",{"_index":482,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["global",{"_index":1192,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["grace",{"_index":1149,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["grant",{"_index":550,"title":{},"body":{"license.html":{}}}],["guarante",{"_index":861,"title":{},"body":{"additional-documentation/usage.html":{}}}],["guest",{"_index":1283,"title":{},"body":{"classes/CompatClient.html":{}}}],["guid",{"_index":1209,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["guidelin",{"_index":1255,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["gwt",{"_index":1097,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["hack",{"_index":300,"title":{},"body":{"classes/Stomp.html":{}}}],["handl",{"_index":793,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["handler",{"_index":606,"title":{},"body":{"interfaces/publishParams.html":{}}}],["handshak",{"_index":986,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["happen",{"_index":864,"title":{},"body":{"additional-documentation/usage.html":{}}}],["hat",{"_index":999,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["head",{"_index":484,"title":{},"body":{"index.html":{}}}],["header",{"_index":18,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["headerlin",{"_index":108,"title":{},"body":{"classes/Frame.html":{}}}],["headerlines.revers",{"_index":125,"title":{},"body":{"classes/Frame.html":{}}}],["headerlines.shift",{"_index":111,"title":{},"body":{"classes/Frame.html":{}}}],["headers);th",{"_index":922,"title":{},"body":{"additional-documentation/usage.html":{}}}],["headers.t",{"_index":385,"title":{},"body":{"interfaces/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:5",{"_index":387,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["headers['cont",{"_index":141,"title":{},"body":{"classes/Frame.html":{}}}],["headers[key",{"_index":132,"title":{},"body":{"classes/Frame.html":{}}}],["headers]{@link",{"_index":46,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{}}}],["headersjavascript",{"_index":1263,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["heart",{"_index":892,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["heartbeat",{"_index":356,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["heartbeat(valu",{"_index":1356,"title":{},"body":{"classes/CompatClient.html":{}}}],["heartbeatincom",{"_index":330,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["heartbeatinfo",{"_index":1351,"title":{},"body":{"classes/CompatClient.html":{}}}],["heartbeatinfo(thi",{"_index":1352,"title":{},"body":{"classes/CompatClient.html":{}}}],["heartbeatoutgo",{"_index":331,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["hello",{"_index":729,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["help",{"_index":969,"title":{},"body":{"additional-documentation/usage.html":{}}}],["henc",{"_index":1251,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["herebi",{"_index":549,"title":{},"body":{"license.html":{}}}],["higher",{"_index":894,"title":{},"body":{"additional-documentation/usage.html":{}}}],["holder",{"_index":588,"title":{},"body":{"license.html":{}}}],["hornetq",{"_index":997,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["host",{"_index":344,"title":{},"body":{"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["host);wher",{"_index":876,"title":{},"body":{"additional-documentation/usage.html":{}}}],["hq221001",{"_index":1023,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["hq221007",{"_index":1020,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["hq221020",{"_index":1007,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["html5",{"_index":279,"title":{},"body":{"classes/Stomp.html":{}}}],["http://coffeescript.org",{"_index":1177,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["http://qunitjs.com",{"_index":1183,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["http://stomp.github.com/stomp",{"_index":22,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["http://stomp.github.io/stomp",{"_index":1258,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":1076,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["https://github.com/coffeedoc/codo",{"_index":1179,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://github.com/jim",{"_index":1140,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["https://github.com/jmesnil/stomp",{"_index":1066,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["https://github.com/stomp",{"_index":507,"title":{},"body":{"index.html":{}}}],["https://nodejs.org",{"_index":1185,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://stomp.github.io/stomp",{"_index":632,"title":{},"body":{"interfaces/publishParams.html":{}}}],["https://www.npmjs.com",{"_index":1188,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://yarnpkg.com",{"_index":1187,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://yarnpkg.com/en/docs/instal",{"_index":1191,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["i.",{"_index":1053,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["id",{"_index":395,"title":{},"body":{"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["identifi",{"_index":429,"title":{},"body":{"coverage.html":{},"additional-documentation/usage.html":{}}}],["idx",{"_index":126,"title":{},"body":{"classes/Frame.html":{}}}],["ignor",{"_index":1092,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["immedi",{"_index":1156,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["implement",{"_index":302,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["impli",{"_index":581,"title":{},"body":{"license.html":{}}}],["import",{"_index":42,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"classes/CompatClient.html":{}}}],["inact",{"_index":677,"title":{},"body":{"interfaces/publishParams.html":{}}}],["includ",{"_index":522,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/usage.html":{}}}],["incom",{"_index":355,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["incoming(valu",{"_index":1362,"title":{},"body":{"classes/CompatClient.html":{}}}],["incomplet",{"_index":1093,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{},"classes/CompatClient.html":{}}}],["index.d.t",{"_index":1211,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["index.html",{"_index":1220,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["index.j",{"_index":1212,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["indic",{"_index":671,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["individu",{"_index":947,"title":{},"body":{"additional-documentation/usage.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/stomp-brokers.html":{},"classes/CompatClient.html":{}}}],["inform",{"_index":948,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{}}}],["initi",{"_index":664,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["insist",{"_index":855,"title":{},"body":{"additional-documentation/usage.html":{}}}],["instal",{"_index":523,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["instanc",{"_index":216,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/publishParams.html":{}}}],["instead",{"_index":309,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["instruct",{"_index":490,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["integ",{"_index":896,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["integr",{"_index":1047,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["interest",{"_index":923,"title":{},"body":{"additional-documentation/usage.html":{}}}],["interfac",{"_index":214,"title":{"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{}},"body":{"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"coverage.html":{},"overview.html":{},"interfaces/publishParams.html":{}}}],["intern",{"_index":55,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/sockjs-support.html":{},"classes/CompatClient.html":{}}}],["interv",{"_index":357,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["introduct",{"_index":455,"title":{"additional-documentation/introduction.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["invok",{"_index":618,"title":{},"body":{"interfaces/publishParams.html":{}}}],["issu",{"_index":479,"title":{},"body":{"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/how-to-contribute.html":{}}}],["javascript",{"_index":298,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["jboss",{"_index":1000,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["jeff",{"_index":470,"title":{},"body":{"index.html":{}}}],["jimi",{"_index":539,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["jqueri",{"_index":973,"title":{},"body":{"additional-documentation/usage.html":{}}}],["js",{"_index":817,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["js/ng2",{"_index":508,"title":{},"body":{"index.html":{}}}],["json",{"_index":724,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["json.pars",{"_index":931,"title":{},"body":{"additional-documentation/usage.html":{}}}],["json.parse(message.bodi",{"_index":942,"title":{},"body":{"additional-documentation/usage.html":{}}}],["json.stringifi",{"_index":930,"title":{},"body":{"additional-documentation/usage.html":{}}}],["json.stringify(quot",{"_index":940,"title":{},"body":{"additional-documentation/usage.html":{}}}],["keep",{"_index":665,"title":{},"body":{"interfaces/publishParams.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/publishParams.html":{}}}],["key:str",{"_index":1341,"title":{},"body":{"classes/CompatClient.html":{}}}],["kind",{"_index":579,"title":{},"body":{"license.html":{}}}],["klass",{"_index":313,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":314,"title":{},"body":{"classes/Stomp.html":{}}}],["kodo",{"_index":1210,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["kumar",{"_index":535,"title":{},"body":{"index.html":{},"license.html":{}}}],["languag",{"_index":1176,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["last_fram",{"_index":187,"title":{},"body":{"classes/Frame.html":{}}}],["last_frame.search(new",{"_index":191,"title":{},"body":{"classes/Frame.html":{}}}],["late",{"_index":965,"title":{},"body":{"additional-documentation/usage.html":{}}}],["later",{"_index":916,"title":{},"body":{"additional-documentation/usage.html":{}}}],["latest",{"_index":1001,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{}}}],["learn",{"_index":825,"title":{},"body":{"additional-documentation/usage.html":{}}}],["legaci",{"_index":814,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["len",{"_index":142,"title":{},"body":{"classes/Frame.html":{}}}],["length",{"_index":67,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["length:${frame.sizeofutf8(this.bodi",{"_index":77,"title":{},"body":{"classes/Frame.html":{}}}],["lf",{"_index":103,"title":{},"body":{"classes/Frame.html":{}}}],["liabil",{"_index":592,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":589,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1213,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["librari",{"_index":450,"title":{},"body":{"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["licens",{"_index":542,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["license.txt",{"_index":1201,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["limit",{"_index":560,"title":{},"body":{"license.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["lindsay",{"_index":531,"title":{},"body":{"index.html":{}}}],["line",{"_index":64,"title":{},"body":{"classes/Frame.html":{}}}],["line.indexof",{"_index":127,"title":{},"body":{"classes/Frame.html":{}}}],["lines.join(byte.lf",{"_index":80,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`${name}:${frame.frescape(`${valu",{"_index":74,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`${name}:${valu",{"_index":75,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`cont",{"_index":76,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(byte.lf",{"_index":78,"title":{},"body":{"classes/Frame.html":{}}}],["linger",{"_index":1162,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["link",{"_index":48,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"classes/CompatClient.html":{}}}],["list",{"_index":166,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["listen",{"_index":1032,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["liter",{"_index":812,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["live",{"_index":1021,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["localhost",{"_index":1226,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["localhost:61614",{"_index":1012,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["locat",{"_index":267,"title":{},"body":{"classes/Stomp.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["log",{"_index":347,"title":{"additional-documentation/change-log.html":{}},"body":{"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["login",{"_index":342,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["longer",{"_index":891,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["loop",{"_index":712,"title":{},"body":{"interfaces/publishParams.html":{}}}],["main",{"_index":1215,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["maintain",{"_index":477,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{}}}],["major",{"_index":1123,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["make",{"_index":504,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{},"classes/CompatClient.html":{}}}],["manag",{"_index":1186,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["mandat",{"_index":1281,"title":{},"body":{"classes/CompatClient.html":{}}}],["mandatori",{"_index":730,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["mani",{"_index":9,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{},"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["manual",{"_index":227,"title":{},"body":{"interfaces/Message.html":{}}}],["map",{"_index":880,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["mark",{"_index":676,"title":{},"body":{"interfaces/publishParams.html":{}}}],["marshall(command",{"_index":198,"title":{},"body":{"classes/Frame.html":{}}}],["match",{"_index":92,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"routes.html":{},"classes/CompatClient.html":{}}}],["matches.length",{"_index":94,"title":{},"body":{"classes/Frame.html":{}}}],["maximum",{"_index":362,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["maxwebsocketframes",{"_index":332,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["mean",{"_index":992,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{}}}],["mechan",{"_index":1071,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["merchant",{"_index":582,"title":{},"body":{"license.html":{}}}],["merg",{"_index":563,"title":{},"body":{"license.html":{}}}],["mesnil",{"_index":471,"title":{},"body":{"index.html":{}}}],["messag",{"_index":19,"title":{"interfaces/Message.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"coverage.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["message#ack",{"_index":792,"title":{},"body":{"interfaces/publishParams.html":{}}}],["message#nack",{"_index":800,"title":{},"body":{"interfaces/publishParams.html":{}}}],["message.ack",{"_index":794,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["message.bodi",{"_index":755,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["message.nack",{"_index":802,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["message_callback",{"_index":921,"title":{},"body":{"additional-documentation/usage.html":{}}}],["messagecallbacktyp",{"_index":367,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"classes/CompatClient.html":{}}}],["messageid",{"_index":1167,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["messages\").append",{"_index":1286,"title":{},"body":{"classes/CompatClient.html":{}}}],["method",{"_index":221,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["milli",{"_index":906,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["millisecond",{"_index":358,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["minifi",{"_index":1169,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["minor",{"_index":1144,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["miscellan",{"_index":806,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mit",{"_index":547,"title":{},"body":{"license.html":{}}}],["model",{"_index":990,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["modifi",{"_index":562,"title":{},"body":{"license.html":{}}}],["modul",{"_index":599,"title":{"modules.html":{}},"body":{"modules.html":{},"additional-documentation/usage.html":{}}}],["more",{"_index":286,"title":{},"body":{"classes/Stomp.html":{},"interfaces/publishParams.html":{},"additional-documentation/change-log.html":{}}}],["mozwebsocket",{"_index":304,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":748,"title":{},"body":{"interfaces/publishParams.html":{}}}],["multipl",{"_index":160,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["mvn",{"_index":1005,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["mylogin",{"_index":883,"title":{},"body":{"additional-documentation/usage.html":{}}}],["mypasscod",{"_index":884,"title":{},"body":{"additional-documentation/usage.html":{}}}],["myrabbitmq",{"_index":1231,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["mysubid",{"_index":760,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["n",{"_index":975,"title":{},"body":{"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["n\").replace(/:/g",{"_index":205,"title":{},"body":{"classes/Frame.html":{}}}],["n\").replace(/\\\\c/g",{"_index":211,"title":{},"body":{"classes/Frame.html":{}}}],["nack",{"_index":223,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["nack(head",{"_index":234,"title":{},"body":{"interfaces/Message.html":{}}}],["nack(messageid",{"_index":804,"title":{},"body":{"interfaces/publishParams.html":{}}}],["nack]{@link",{"_index":799,"title":{},"body":{"interfaces/publishParams.html":{}}}],["name",{"_index":70,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["nativ",{"_index":459,"title":{},"body":{"index.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["necessari",{"_index":1228,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["need",{"_index":16,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/Transaction.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["negoti",{"_index":634,"title":{},"body":{"interfaces/publishParams.html":{}}}],["netti",{"_index":1008,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["never",{"_index":1163,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["new",{"_index":152,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"classes/CompatClient.html":{}}}],["newer",{"_index":496,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["next",{"_index":889,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["node",{"_index":1190,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["node.j",{"_index":453,"title":{},"body":{"index.html":{}}}],["nodej",{"_index":257,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["non",{"_index":255,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{}}}],["none",{"_index":753,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["noninfring",{"_index":586,"title":{},"body":{"license.html":{}}}],["noop",{"_index":642,"title":{},"body":{"interfaces/publishParams.html":{}}}],["note",{"_index":721,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["noth",{"_index":681,"title":{},"body":{"interfaces/publishParams.html":{}}}],["notic",{"_index":574,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":377,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["now",{"_index":689,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["npm",{"_index":521,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["npmjs.com",{"_index":1141,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["null",{"_index":137,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/publishParams.html":{},"additional-documentation/how-to-contribute.html":{}}}],["number",{"_index":86,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["object",{"_index":281,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["object).assign(thi",{"_index":662,"title":{},"body":{"interfaces/publishParams.html":{}}}],["object.keys(this.head",{"_index":71,"title":{},"body":{"classes/Frame.html":{}}}],["observ",{"_index":516,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":554,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":1086,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["occur",{"_index":801,"title":{},"body":{"interfaces/publishParams.html":{}}}],["offer",{"_index":512,"title":{},"body":{"index.html":{}}}],["old",{"_index":845,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["older",{"_index":493,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["on",{"_index":913,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["onc",{"_index":287,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{}}}],["onconnect",{"_index":333,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["ondisconnect",{"_index":334,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["ongo",{"_index":995,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["onmessag",{"_index":746,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["onmessage);to",{"_index":928,"title":{},"body":{"additional-documentation/usage.html":{}}}],["onrec",{"_index":218,"title":{},"body":{"interfaces/Message.html":{},"classes/CompatClient.html":{}}}],["onreceipt",{"_index":1309,"title":{},"body":{"classes/CompatClient.html":{}}}],["onreceipt(valu",{"_index":1349,"title":{},"body":{"classes/CompatClient.html":{}}}],["onreceive(valu",{"_index":1347,"title":{},"body":{"classes/CompatClient.html":{}}}],["onreceive]{@link",{"_index":238,"title":{},"body":{"interfaces/Message.html":{}}}],["onstomperror",{"_index":335,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["onunhandledfram",{"_index":336,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["onunhandledmessag",{"_index":337,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["onunhandledreceipt",{"_index":338,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["onwebsocketclos",{"_index":339,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["oop",{"_index":962,"title":{},"body":{"additional-documentation/usage.html":{}}}],["open",{"_index":858,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["oper",{"_index":378,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["option",{"_index":231,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["order",{"_index":121,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{}}}],["org.hornetq.core.server.impl.hornetqserverimpl",{"_index":1022,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["org.hornetq.core.server.impl.hornetqserverimpl$sharedstoreliveactiv",{"_index":1019,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["orient",{"_index":467,"title":{},"body":{"index.html":{}}}],["origin",{"_index":468,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["otherwis",{"_index":184,"title":{},"body":{"classes/Frame.html":{},"license.html":{}}}],["out",{"_index":598,"title":{},"body":{"license.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["out[0",{"_index":1331,"title":{},"body":{"classes/CompatClient.html":{}}}],["out[1",{"_index":1332,"title":{},"body":{"classes/CompatClient.html":{}}}],["out[2",{"_index":1333,"title":{},"body":{"classes/CompatClient.html":{}}}],["out[3",{"_index":1334,"title":{},"body":{"classes/CompatClient.html":{}}}],["outdat",{"_index":816,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{}}}],["outgo",{"_index":361,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["outgoing(valu",{"_index":1360,"title":{},"body":{"classes/CompatClient.html":{}}}],["outsid",{"_index":963,"title":{},"body":{"additional-documentation/usage.html":{}}}],["over",{"_index":251,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["over(w",{"_index":273,"title":{},"body":{"classes/Stomp.html":{}}}],["overload",{"_index":1274,"title":{},"body":{"classes/CompatClient.html":{}}}],["overrid",{"_index":837,"title":{},"body":{"additional-documentation/usage.html":{}}}],["overview",{"_index":600,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwhelm",{"_index":979,"title":{},"body":{"additional-documentation/usage.html":{}}}],["p",{"_index":1233,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["packag",{"_index":446,"title":{"dependencies.html":{}},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["package.json",{"_index":1216,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["page",{"_index":483,"title":{"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["pair",{"_index":41,"title":{},"body":{"classes/Frame.html":{}}}],["param",{"_index":733,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["paramet",{"_index":230,"title":{},"body":{"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["pars",{"_index":119,"title":{},"body":{"classes/Frame.html":{}}}],["parseint(headers['cont",{"_index":143,"title":{},"body":{"classes/Frame.html":{}}}],["part",{"_index":950,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["parti",{"_index":1247,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["partial",{"_index":45,"title":{},"body":{"classes/Frame.html":{}}}],["particular",{"_index":584,"title":{},"body":{"license.html":{}}}],["pass",{"_index":11,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["passcod",{"_index":343,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["payload",{"_index":723,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["per",{"_index":194,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["permiss",{"_index":548,"title":{},"body":{"license.html":{}}}],["permit",{"_index":569,"title":{},"body":{"license.html":{}}}],["person",{"_index":553,"title":{},"body":{"license.html":{}}}],["ping",{"_index":181,"title":{},"body":{"classes/Frame.html":{}}}],["pivot",{"_index":1040,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["pleas",{"_index":491,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["plugin",{"_index":460,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["pm",{"_index":1018,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["point",{"_index":487,"title":{},"body":{"index.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["popular",{"_index":458,"title":{},"body":{"index.html":{}}}],["port",{"_index":1033,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["portion",{"_index":577,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":303,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{}}}],["prefer",{"_index":615,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["previou",{"_index":1324,"title":{},"body":{"classes/CompatClient.html":{}}}],["primari",{"_index":1046,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["prior",{"_index":305,"title":{},"body":{"classes/Stomp.html":{}}}],["prioriti",{"_index":727,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["privat",{"_index":50,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["process",{"_index":183,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["product",{"_index":474,"title":{},"body":{"index.html":{}}}],["progress",{"_index":1052,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["project",{"_index":828,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["proper",{"_index":652,"title":{},"body":{"interfaces/publishParams.html":{}}}],["properli",{"_index":1064,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["properti",{"_index":26,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["propertytypenot",{"_index":1260,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["protect",{"_index":613,"title":{},"body":{"interfaces/publishParams.html":{}}}],["protocol",{"_index":265,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["protocolvers",{"_index":424,"title":{},"body":{"classes/Versions.html":{}}}],["provid",{"_index":451,"title":{},"body":{"index.html":{},"license.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["prune",{"_index":1130,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["public",{"_index":27,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["publish",{"_index":564,"title":{},"body":{"license.html":{},"additional-documentation/change-log.html":{}}}],["publish(param",{"_index":732,"title":{},"body":{"interfaces/publishParams.html":{}}}],["publishparam",{"_index":434,"title":{"interfaces/publishParams.html":{}},"body":{"coverage.html":{},"interfaces/publishParams.html":{}}}],["pull",{"_index":481,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["pure",{"_index":982,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["purpos",{"_index":585,"title":{},"body":{"license.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["queue",{"_index":370,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["queue/test",{"_index":726,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["quint",{"_index":1129,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["qunit",{"_index":1182,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["quot",{"_index":935,"title":{},"body":{"additional-documentation/usage.html":{}}}],["quote.valu",{"_index":944,"title":{},"body":{"additional-documentation/usage.html":{}}}],["r",{"_index":173,"title":{},"body":{"classes/Frame.html":{}}}],["r\").replace(/\\\\n/g",{"_index":210,"title":{},"body":{"classes/Frame.html":{}}}],["r\").replace(/\\n/g",{"_index":204,"title":{},"body":{"classes/Frame.html":{}}}],["r.frame",{"_index":174,"title":{},"body":{"classes/Frame.html":{}}}],["r.frames.push(frame.unmarshallsingle(last_fram",{"_index":192,"title":{},"body":{"classes/Frame.html":{}}}],["r.partial",{"_index":193,"title":{},"body":{"classes/Frame.html":{}}}],["rabbitmq",{"_index":371,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["rais",{"_index":1172,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["random",{"_index":740,"title":{},"body":{"interfaces/publishParams.html":{}}}],["randomtext",{"_index":743,"title":{},"body":{"interfaces/publishParams.html":{}}}],["raul",{"_index":541,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["raw",{"_index":97,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/upgrading.html":{}}}],["read",{"_index":823,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["readme.md",{"_index":1202,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["readonli",{"_index":611,"title":{},"body":{"interfaces/publishParams.html":{}}}],["receipt",{"_index":736,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["receiptid",{"_index":742,"title":{},"body":{"interfaces/publishParams.html":{}}}],["receiv",{"_index":12,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["recent",{"_index":848,"title":{},"body":{"additional-documentation/usage.html":{}}}],["reconnect",{"_index":283,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["reconnect_delay",{"_index":905,"title":{},"body":{"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["reconnect_delay(valu",{"_index":1344,"title":{},"body":{"classes/CompatClient.html":{}}}],["reconnectdelay",{"_index":340,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["red",{"_index":998,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["refactor",{"_index":1134,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["refer",{"_index":502,"title":{},"body":{"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"classes/CompatClient.html":{}}}],["regexp(`${byte.lf}${byte.lf",{"_index":107,"title":{},"body":{"classes/Frame.html":{}}}],["regexp(`${byte.null}${byte.lf",{"_index":172,"title":{},"body":{"classes/Frame.html":{}}}],["regist",{"_index":917,"title":{},"body":{"additional-documentation/usage.html":{}}}],["regular",{"_index":993,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["reject",{"_index":994,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["releas",{"_index":1094,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["release_notes.md",{"_index":1203,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["remain",{"_index":991,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{}}}],["remark",{"_index":310,"title":{},"body":{"classes/Stomp.html":{}}}],["renam",{"_index":1299,"title":{},"body":{"classes/CompatClient.html":{}}}],["repeat",{"_index":122,"title":{},"body":{"classes/Frame.html":{}}}],["replac",{"_index":1072,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["replace(/\\\\\\\\/g",{"_index":212,"title":{},"body":{"classes/Frame.html":{}}}],["replace(/\\r/g",{"_index":203,"title":{},"body":{"classes/Frame.html":{}}}],["repres",{"_index":7,"title":{},"body":{"classes/Frame.html":{}}}],["request",{"_index":374,"title":{},"body":{"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/how-to-contribute.html":{}}}],["requir",{"_index":831,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["require('../../esm5",{"_index":260,"title":{},"body":{"classes/Stomp.html":{}}}],["require('@stomp/stompj",{"_index":832,"title":{},"body":{"additional-documentation/usage.html":{}}}],["require('websocket').w3cwebsocket",{"_index":263,"title":{},"body":{"classes/Stomp.html":{}}}],["respect",{"_index":1161,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["restrict",{"_index":559,"title":{},"body":{"license.html":{}}}],["result",{"_index":213,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"routes.html":{},"classes/CompatClient.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["revers",{"_index":120,"title":{},"body":{"classes/Frame.html":{}}}],["right",{"_index":561,"title":{},"body":{"license.html":{}}}],["root",{"_index":1207,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["rout",{"_index":1266,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":984,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["rxj",{"_index":515,"title":{},"body":{"index.html":{}}}],["s",{"_index":91,"title":{},"body":{"classes/Frame.html":{}}}],["same",{"_index":325,"title":{},"body":{"interfaces/StompConfig.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["save",{"_index":829,"title":{},"body":{"additional-documentation/usage.html":{}}}],["scene",{"_index":857,"title":{},"body":{"additional-documentation/usage.html":{}}}],["schedul",{"_index":707,"title":{},"body":{"interfaces/publishParams.html":{}}}],["script",{"_index":1133,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["search",{"_index":100,"title":{},"body":{"classes/Frame.html":{}}}],["second",{"_index":842,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{}}}],["secur",{"_index":989,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["see",{"_index":21,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["selector",{"_index":919,"title":{},"body":{"additional-documentation/usage.html":{}}}],["sell",{"_index":568,"title":{},"body":{"license.html":{}}}],["sellar",{"_index":538,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{}}}],["semant",{"_index":1060,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["send",{"_index":159,"title":{},"body":{"classes/Frame.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["send(destin",{"_index":1292,"title":{},"body":{"classes/CompatClient.html":{}}}],["sent",{"_index":197,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["sentdebug",{"_index":966,"title":{},"body":{"additional-documentation/usage.html":{}}}],["separ",{"_index":524,"title":{},"body":{"index.html":{}}}],["sequenc",{"_index":738,"title":{},"body":{"interfaces/publishParams.html":{}}}],["serial",{"_index":34,"title":{},"body":{"classes/Frame.html":{}}}],["server",{"_index":158,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{}}}],["server'",{"_index":834,"title":{},"body":{"additional-documentation/usage.html":{}}}],["serverauto",{"_index":902,"title":{},"body":{"additional-documentation/usage.html":{}}}],["servic",{"_index":514,"title":{},"body":{"index.html":{},"additional-documentation/stomp-brokers.html":{}}}],["sessionstorag",{"_index":1243,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["set",{"_index":359,"title":{},"body":{"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["setheartbeat(valu",{"_index":1319,"title":{},"body":{"classes/CompatClient.html":{}}}],["setonreceipt(valu",{"_index":1313,"title":{},"body":{"classes/CompatClient.html":{}}}],["setonreceive(valu",{"_index":1307,"title":{},"body":{"classes/CompatClient.html":{}}}],["setreconnect_delay(valu",{"_index":1297,"title":{},"body":{"classes/CompatClient.html":{}}}],["settimeout",{"_index":710,"title":{},"body":{"interfaces/publishParams.html":{}}}],["setup",{"_index":1189,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["sever",{"_index":1104,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["shall",{"_index":575,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1267,"title":{},"body":{"classes/CompatClient.html":{}}}],["shim",{"_index":1050,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["shutdown",{"_index":1150,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["side",{"_index":1159,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["similar",{"_index":280,"title":{},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/upgrading.html":{}}}],["simpl",{"_index":871,"title":{},"body":{"additional-documentation/usage.html":{}}}],["simpli",{"_index":1049,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["singl",{"_index":155,"title":{},"body":{"classes/Frame.html":{},"additional-documentation/usage.html":{}}}],["size",{"_index":82,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["sizeofutf8(",{"_index":90,"title":{},"body":{"classes/Frame.html":{}}}],["skip",{"_index":139,"title":{},"body":{"classes/Frame.html":{}}}],["skipcontentlength",{"_index":65,"title":{},"body":{"classes/Frame.html":{}}}],["snapshot",{"_index":1037,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["socket",{"_index":157,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/publishParams.html":{},"additional-documentation/change-log.html":{}}}],["sockj",{"_index":291,"title":{"additional-documentation/sockjs-support.html":{}},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["sockjs(url",{"_index":1058,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["softwar",{"_index":556,"title":{},"body":{"license.html":{}}}],["someth",{"_index":949,"title":{},"body":{"additional-documentation/usage.html":{}}}],["somewher",{"_index":972,"title":{},"body":{"additional-documentation/usage.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["special",{"_index":720,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["specif",{"_index":23,"title":{},"body":{"classes/Frame.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["specifi",{"_index":278,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{}}}],["split",{"_index":104,"title":{},"body":{"classes/Frame.html":{}}}],["sponsor",{"_index":1039,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["src",{"_index":1208,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["src/.../frame.t",{"_index":810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../types.t",{"_index":809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/client.t",{"_index":431,"title":{},"body":{"coverage.html":{},"interfaces/publishParams.html":{}}}],["src/compatibility/compat",{"_index":436,"title":{},"body":{"coverage.html":{},"classes/CompatClient.html":{}}}],["src/compatibility/stomp.t",{"_index":245,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["src/compatibility/stomp.ts:19",{"_index":253,"title":{},"body":{"classes/Stomp.html":{}}}],["src/compatibility/stomp.ts:30",{"_index":266,"title":{},"body":{"classes/Stomp.html":{}}}],["src/compatibility/stomp.ts:68",{"_index":274,"title":{},"body":{"classes/Stomp.html":{}}}],["src/frame.t",{"_index":5,"title":{},"body":{"classes/Frame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/frame.ts:18",{"_index":36,"title":{},"body":{"classes/Frame.html":{}}}],["src/frame.ts:23",{"_index":38,"title":{},"body":{"classes/Frame.html":{}}}],["src/frame.ts:28",{"_index":33,"title":{},"body":{"classes/Frame.html":{}}}],["src/message.t",{"_index":215,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/message.ts:18",{"_index":225,"title":{},"body":{"interfaces/Message.html":{}}}],["src/message.ts:25",{"_index":235,"title":{},"body":{"interfaces/Message.html":{}}}],["src/stomp",{"_index":319,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["src/transaction.t",{"_index":398,"title":{},"body":{"interfaces/Transaction.html":{},"coverage.html":{}}}],["src/types.t",{"_index":811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/versions.t",{"_index":409,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["src/versions.ts:12",{"_index":416,"title":{},"body":{"classes/Versions.html":{}}}],["src/versions.ts:16",{"_index":418,"title":{},"body":{"classes/Versions.html":{}}}],["src/versions.ts:8",{"_index":414,"title":{},"body":{"classes/Versions.html":{}}}],["stack",{"_index":1051,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["standard",{"_index":195,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"additional-documentation/change-log.html":{}}}],["start",{"_index":140,"title":{"index.html":{},"license.html":{}},"body":{"classes/Frame.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["statement",{"_index":430,"title":{},"body":{"coverage.html":{},"additional-documentation/usage.html":{}}}],["static",{"_index":89,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["statu",{"_index":472,"title":{},"body":{"index.html":{}}}],["step",{"_index":1002,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["still",{"_index":1155,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["stilt",{"_index":1041,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["stomp",{"_index":8,"title":{"classes/Stomp.html":{},"additional-documentation/stomp-brokers.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["stomp\");se",{"_index":1295,"title":{},"body":{"classes/CompatClient.html":{}}}],["stomp\");th",{"_index":910,"title":{},"body":{"additional-documentation/usage.html":{}}}],["stomp#client",{"_index":276,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":316,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":306,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{}}}],["stomp.client(\"ws://localhost:61614/stomp",{"_index":1063,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.client(\"ws://localhost:61614/stomp\");do",{"_index":1069,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.client(\"ws://localhost:61614/stomp\");se",{"_index":1073,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.client(url",{"_index":271,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["stomp.client(url);th",{"_index":836,"title":{},"body":{"additional-documentation/usage.html":{}}}],["stomp.coffe",{"_index":1218,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["stomp.j",{"_index":449,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["stomp.min.j",{"_index":822,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["stomp.ov",{"_index":308,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{}}}],["stomp.over(funct",{"_index":293,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["stomp.over(w",{"_index":1059,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["stomp.over(ws_fn",{"_index":1082,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["stomp.overtcp",{"_index":1055,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.overtcp(\"localhost",{"_index":1067,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.overw",{"_index":1056,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.overws(\"ws://localhost:61614/stomp",{"_index":1062,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["stomp.websocketclass",{"_index":262,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/stompj",{"_index":827,"title":{},"body":{"additional-documentation/usage.html":{}}}],["stomp_w",{"_index":1013,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["stompconfig",{"_index":318,"title":{"interfaces/StompConfig.html":{}},"body":{"interfaces/StompConfig.html":{},"coverage.html":{},"interfaces/publishParams.html":{}}}],["stomphandl",{"_index":605,"title":{},"body":{"interfaces/publishParams.html":{}}}],["stomphandler(thi",{"_index":684,"title":{},"body":{"interfaces/publishParams.html":{}}}],["stomphead",{"_index":37,"title":{"interfaces/StompHeaders.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["stompj",{"_index":259,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["stompjs.stomp",{"_index":261,"title":{},"body":{"classes/Stomp.html":{}}}],["stompsubscript",{"_index":389,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{},"interfaces/publishParams.html":{}}}],["stop",{"_index":669,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["str",{"_index":117,"title":{},"body":{"classes/Frame.html":{}}}],["str.replace(/\\\\/g",{"_index":202,"title":{},"body":{"classes/Frame.html":{}}}],["str.replace(/\\\\r/g",{"_index":209,"title":{},"body":{"classes/Frame.html":{}}}],["str.replace(/^\\s+|\\s+$/g",{"_index":118,"title":{},"body":{"classes/Frame.html":{}}}],["straight",{"_index":485,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":1257,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["stray",{"_index":373,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["string",{"_index":35,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"classes/CompatClient.html":{}}}],["string|number|boolean",{"_index":388,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["structur",{"_index":1197,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["sub1",{"_index":924,"title":{},"body":{"additional-documentation/usage.html":{}}}],["sub2",{"_index":926,"title":{},"body":{"additional-documentation/usage.html":{}}}],["subject",{"_index":571,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":566,"title":{},"body":{"license.html":{}}}],["submit",{"_index":480,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["subprotocol",{"_index":838,"title":{},"body":{"additional-documentation/usage.html":{}}}],["subscrib",{"_index":226,"title":{},"body":{"interfaces/Message.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["subscribe(destin",{"_index":764,"title":{},"body":{"interfaces/publishParams.html":{}}}],["subscript",{"_index":217,"title":{},"body":{"interfaces/Message.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["subscription.t",{"_index":390,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:15",{"_index":393,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["subscription.unsubscrib",{"_index":768,"title":{},"body":{"interfaces/publishParams.html":{}}}],["subscription.unsubscribe();json",{"_index":929,"title":{},"body":{"additional-documentation/usage.html":{}}}],["subscriptionid",{"_index":797,"title":{},"body":{"interfaces/publishParams.html":{}}}],["substanti",{"_index":576,"title":{},"body":{"license.html":{}}}],["success",{"_index":621,"title":{},"body":{"interfaces/publishParams.html":{}}}],["such",{"_index":372,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["suitabl",{"_index":196,"title":{},"body":{"classes/Frame.html":{}}}],["summari",{"_index":1070,"title":{},"body":{"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["super",{"_index":1322,"title":{},"body":{"classes/CompatClient.html":{}}}],["super.activ",{"_index":1335,"title":{},"body":{"classes/CompatClient.html":{}}}],["super.deactiv",{"_index":1339,"title":{},"body":{"classes/CompatClient.html":{}}}],["support",{"_index":282,"title":{"additional-documentation/sockjs-support.html":{}},"body":{"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"classes/Versions.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["supportedvers",{"_index":422,"title":{},"body":{"classes/Versions.html":{}}}],["switch",{"_index":1075,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["symbol",{"_index":936,"title":{},"body":{"additional-documentation/usage.html":{}}}],["syntax",{"_index":1061,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["system",{"_index":978,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{}}}],["t",{"_index":1230,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tabl",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":886,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["task",{"_index":1200,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tcp",{"_index":290,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["temporari",{"_index":369,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["termin",{"_index":714,"title":{},"body":{"interfaces/publishParams.html":{}}}],["test",{"_index":968,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["test/index.html",{"_index":1239,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tests/config/brows",{"_index":1224,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tests/config/nod",{"_index":1225,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["testto",{"_index":1236,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["text",{"_index":466,"title":{},"body":{"index.html":{}}}],["thank",{"_index":1089,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["third",{"_index":1246,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["this._act",{"_index":672,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._connect",{"_index":673,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._createwebsocket",{"_index":683,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._disposestomphandl",{"_index":690,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._heartbeatinfo",{"_index":1355,"title":{},"body":{"classes/CompatClient.html":{}}}],["this._parseconnect(...arg",{"_index":1330,"title":{},"body":{"classes/CompatClient.html":{}}}],["this._reconnector",{"_index":709,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._schedule_reconnect",{"_index":696,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandl",{"_index":619,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.abort(transactionid",{"_index":790,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.ack(messageid",{"_index":798,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.begin(transactionid",{"_index":779,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.commit(transactionid",{"_index":786,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.connect",{"_index":620,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.dispos",{"_index":719,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.nack(messageid",{"_index":805,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.publish",{"_index":734,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.start",{"_index":700,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.subscribe(destin",{"_index":765,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.unsubscribe(id",{"_index":771,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.vers",{"_index":635,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._stomphandler.watchforreceipt(receiptid",{"_index":750,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this._websocket",{"_index":612,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.bodi",{"_index":60,"title":{},"body":{"classes/Frame.html":{}}}],["this.client.heartbeatincom",{"_index":1361,"title":{},"body":{"classes/CompatClient.html":{}}}],["this.client.heartbeatoutgo",{"_index":1359,"title":{},"body":{"classes/CompatClient.html":{}}}],["this.command",{"_index":58,"title":{},"body":{"classes/Frame.html":{}}}],["this.configure(conf",{"_index":657,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.connect",{"_index":678,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.connecthead",{"_index":653,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.debug",{"_index":643,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.debug(\"open",{"_index":682,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.debug('cli",{"_index":675,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.debug('stomp",{"_index":679,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.debug(`stomp",{"_index":706,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.disconnecthead",{"_index":654,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.escapeheadervalu",{"_index":61,"title":{},"body":{"classes/Frame.html":{}}}],["this.head",{"_index":59,"title":{},"body":{"classes/Frame.html":{}}}],["this.headers['cont",{"_index":66,"title":{},"body":{"classes/Frame.html":{}}}],["this.headers[nam",{"_index":72,"title":{},"body":{"classes/Frame.html":{}}}],["this.heartbeatincom",{"_index":685,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.heartbeatoutgo",{"_index":686,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.maxwebsocketframes",{"_index":687,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.onconnect",{"_index":644,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.onconnect(fram",{"_index":691,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.ondisconnect",{"_index":645,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.ondisconnect(fram",{"_index":692,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.onstomperror",{"_index":649,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.onstomperror(fram",{"_index":693,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.onunhandledfram",{"_index":648,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.onunhandledframe(fram",{"_index":699,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.onunhandledmessag",{"_index":646,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.onunhandledmessage(messag",{"_index":697,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.onunhandledreceipt",{"_index":647,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.onunhandledreceipt(fram",{"_index":698,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.onwebsocketclos",{"_index":650,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.onwebsocketclose(evt",{"_index":695,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.publish({destin",{"_index":1342,"title":{},"body":{"classes/CompatClient.html":{}}}],["this.reconnect_delay",{"_index":1323,"title":{},"body":{"classes/CompatClient.html":{}}}],["this.reconnectdelay",{"_index":705,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["this.reconnectdelay}m",{"_index":708,"title":{},"body":{"interfaces/publishParams.html":{}}}],["this.websocketfactori",{"_index":655,"title":{},"body":{"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["those",{"_index":1085,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["thought",{"_index":964,"title":{},"body":{"additional-documentation/usage.html":{}}}],["time",{"_index":890,"title":{},"body":{"additional-documentation/usage.html":{}}}],["todo",{"_index":401,"title":{},"body":{"interfaces/Transaction.html":{}}}],["togeth",{"_index":1252,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tool",{"_index":1174,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["top",{"_index":135,"title":{},"body":{"classes/Frame.html":{}}}],["torquebox",{"_index":1042,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["tort",{"_index":596,"title":{},"body":{"license.html":{}}}],["tostr",{"_index":62,"title":{},"body":{"classes/Frame.html":{}}}],["tranasct",{"_index":399,"title":{},"body":{"interfaces/Transaction.html":{}}}],["transact",{"_index":397,"title":{"interfaces/Transaction.html":{}},"body":{"interfaces/Transaction.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["transaction#abort",{"_index":775,"title":{},"body":{"interfaces/publishParams.html":{}}}],["transaction#commit",{"_index":773,"title":{},"body":{"interfaces/publishParams.html":{}}}],["transaction_id",{"_index":956,"title":{},"body":{"additional-documentation/usage.html":{}}}],["transform",{"_index":932,"title":{},"body":{"additional-documentation/usage.html":{}}}],["transmiss",{"_index":353,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["transmit",{"_index":1157,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["transport",{"_index":289,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["travi",{"_index":1135,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["treat",{"_index":1045,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["tri",{"_index":666,"title":{},"body":{"interfaces/publishParams.html":{}}}],["trim",{"_index":114,"title":{},"body":{"classes/Frame.html":{}}}],["trim(line.substring(0",{"_index":128,"title":{},"body":{"classes/Frame.html":{}}}],["trim(line.substring(idx",{"_index":129,"title":{},"body":{"classes/Frame.html":{}}}],["true",{"_index":68,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["turn",{"_index":918,"title":{},"body":{"additional-documentation/usage.html":{}}}],["two",{"_index":853,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tx",{"_index":781,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["tx.abort",{"_index":787,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["tx.commit",{"_index":783,"title":{},"body":{"interfaces/publishParams.html":{}}}],["tx.commit();if",{"_index":957,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tx.commit();th",{"_index":954,"title":{},"body":{"additional-documentation/usage.html":{}}}],["tx.id",{"_index":953,"title":{},"body":{"additional-documentation/usage.html":{}}}],["txid",{"_index":960,"title":{},"body":{"additional-documentation/usage.html":{}}}],["type",{"_index":30,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["typealias",{"_index":807,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof(w",{"_index":317,"title":{},"body":{"classes/Stomp.html":{}}}],["typescript",{"_index":519,"title":{},"body":{"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["typic",{"_index":651,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"classes/CompatClient.html":{}}}],["ugli",{"_index":165,"title":{},"body":{"classes/Frame.html":{}}}],["unblock",{"_index":1245,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["uncaught",{"_index":1241,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["unclear",{"_index":1256,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["undefin",{"_index":636,"title":{},"body":{"interfaces/publishParams.html":{}}}],["under",{"_index":1077,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["underli",{"_index":288,"title":{},"body":{"classes/Stomp.html":{},"interfaces/publishParams.html":{}}}],["understand",{"_index":528,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/how-to-contribute.html":{}}}],["unescap",{"_index":207,"title":{},"body":{"classes/Frame.html":{}}}],["unexpect",{"_index":1254,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["unhandl",{"_index":368,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["uniqu",{"_index":737,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["unique_transaction_identifi",{"_index":961,"title":{},"body":{"additional-documentation/usage.html":{}}}],["unit",{"_index":1221,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["unknown",{"_index":366,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["unmarshal",{"_index":154,"title":{},"body":{"classes/Frame.html":{}}}],["unmarshall(data",{"_index":164,"title":{},"body":{"classes/Frame.html":{}}}],["unmarshallresult",{"_index":44,"title":{},"body":{"classes/Frame.html":{},"miscellaneous/typealiases.html":{}}}],["unmarshallsingle(data",{"_index":99,"title":{},"body":{"classes/Frame.html":{}}}],["unsubcrib",{"_index":375,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["unsubscrib",{"_index":391,"title":{},"body":{"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{}}}],["unsubscribe(head",{"_index":392,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["unsubscribe(id",{"_index":770,"title":{},"body":{"interfaces/publishParams.html":{}}}],["until",{"_index":1158,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["up",{"_index":980,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["updat",{"_index":658,"title":{},"body":{"interfaces/publishParams.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["upgrad",{"_index":497,"title":{"additional-documentation/upgrading.html":{}},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{}}}],["url",{"_index":268,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["us",{"_index":124,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"index.html":{},"license.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["usag",{"_index":15,"title":{"additional-documentation/usage.html":{}},"body":{"classes/Frame.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["user",{"_index":277,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"additional-documentation/usage.html":{}}}],["usual",{"_index":851,"title":{},"body":{"additional-documentation/usage.html":{}}}],["utf",{"_index":83,"title":{},"body":{"classes/Frame.html":{}}}],["util",{"_index":112,"title":{},"body":{"classes/Frame.html":{}}}],["uuid",{"_index":739,"title":{},"body":{"interfaces/publishParams.html":{}}}],["v${x.replac",{"_index":426,"title":{},"body":{"classes/Versions.html":{}}}],["v10.stomp",{"_index":839,"title":{},"body":{"additional-documentation/usage.html":{}}}],["v11.stomp",{"_index":840,"title":{},"body":{"additional-documentation/usage.html":{}}}],["v12.stomp",{"_index":841,"title":{},"body":{"additional-documentation/usage.html":{}}}],["v1_0",{"_index":410,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":411,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":412,"title":{},"body":{"classes/Versions.html":{}}}],["v2",{"_index":544,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["valu",{"_index":40,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["value.incom",{"_index":1357,"title":{},"body":{"classes/CompatClient.html":{}}}],["value.outgo",{"_index":1358,"title":{},"body":{"classes/CompatClient.html":{}}}],["vanessa",{"_index":532,"title":{},"body":{"index.html":{}}}],["var",{"_index":269,"title":{},"body":{"classes/Stomp.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{}}}],["variant",{"_index":457,"title":{},"body":{"index.html":{},"additional-documentation/usage.html":{}}}],["varieti",{"_index":1081,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["versa",{"_index":934,"title":{},"body":{"additional-documentation/usage.html":{}}}],["version",{"_index":296,"title":{"classes/Versions.html":{}},"body":{"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{},"classes/CompatClient.html":{}}}],["versions.protocolvers",{"_index":311,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_0",{"_index":419,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":420,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":421,"title":{},"body":{"classes/Versions.html":{}}}],["versions.versions().join",{"_index":423,"title":{},"body":{"classes/Versions.html":{}}}],["versions.versions().map(x",{"_index":425,"title":{},"body":{"classes/Versions.html":{}}}],["vice",{"_index":933,"title":{},"body":{"additional-documentation/usage.html":{}}}],["virtual",{"_index":1280,"title":{},"body":{"classes/CompatClient.html":{}}}],["visit",{"_index":525,"title":{},"body":{"index.html":{}}}],["void",{"_index":233,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["wait",{"_index":959,"title":{},"body":{"additional-documentation/usage.html":{}}}],["want",{"_index":527,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/change-log.html":{},"classes/CompatClient.html":{}}}],["warranti",{"_index":578,"title":{},"body":{"license.html":{}}}],["watch",{"_index":735,"title":{},"body":{"interfaces/publishParams.html":{}}}],["watchbrows",{"_index":1238,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["watchforreceipt(receiptid",{"_index":749,"title":{},"body":{"interfaces/publishParams.html":{}}}],["way",{"_index":624,"title":{},"body":{"interfaces/publishParams.html":{}}}],["web",{"_index":156,"title":{},"body":{"classes/Frame.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/introduction.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/sockjs-support.html":{}}}],["websocket",{"_index":161,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"interfaces/StompConfig.html":{},"index.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["websocket('ws://localhost:15674/w",{"_index":294,"title":{},"body":{"classes/Stomp.html":{}}}],["websocket.binarytyp",{"_index":702,"title":{},"body":{"interfaces/publishParams.html":{}}}],["websocketclass",{"_index":250,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass:ani",{"_index":299,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactori",{"_index":341,"title":{},"body":{"interfaces/StompConfig.html":{},"interfaces/publishParams.html":{},"classes/CompatClient.html":{}}}],["webstomp",{"_index":1227,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["welcom",{"_index":478,"title":{},"body":{"index.html":{}}}],["well",{"_index":1054,"title":{},"body":{"additional-documentation/upgrading.html":{}}}],["whether",{"_index":593,"title":{},"body":{"license.html":{}}}],["whitespac",{"_index":115,"title":{},"body":{"classes/Frame.html":{}}}],["william",{"_index":533,"title":{},"body":{"index.html":{}}}],["window",{"_index":1244,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["window'",{"_index":976,"title":{},"body":{"additional-documentation/usage.html":{}}}],["wish",{"_index":494,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["within",{"_index":256,"title":{},"body":{"classes/Stomp.html":{},"interfaces/Transaction.html":{}}}],["without",{"_index":182,"title":{},"body":{"classes/Frame.html":{},"license.html":{},"interfaces/publishParams.html":{},"additional-documentation/usage.html":{}}}],["work",{"_index":996,"title":{},"body":{"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{},"additional-documentation/how-to-contribute.html":{}}}],["ws",{"_index":295,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/usage.html":{},"additional-documentation/upgrading.html":{},"classes/CompatClient.html":{}}}],["ws://localhost:15674/w",{"_index":835,"title":{},"body":{"additional-documentation/usage.html":{}}}],["ws://localhost:61614/stomp",{"_index":270,"title":{},"body":{"classes/Stomp.html":{},"additional-documentation/stomp-brokers.html":{},"additional-documentation/upgrading.html":{}}}],["ws_fn",{"_index":312,"title":{},"body":{"classes/Stomp.html":{}}}],["x.y.z/examples/jms/stomp",{"_index":1004,"title":{},"body":{"additional-documentation/stomp-brokers.html":{}}}],["yarn",{"_index":830,"title":{},"body":{"additional-documentation/usage.html":{},"additional-documentation/how-to-contribute.html":{}}}],["yarn.lock",{"_index":1222,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["ye",{"_index":232,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{},"classes/CompatClient.html":{}}}],["year",{"_index":475,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":882,"title":{},"body":{"additional-documentation/usage.html":{}}}],["zero",{"_index":170,"title":{},"body":{"classes/Frame.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Frame.html":{"url":"classes/Frame.html","title":"class - Frame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Frame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/frame.ts\n        \n\n            \n                Description\n            \n            \n                Frame class represents a STOMP frame. Many of the callbacks pass the Frame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nMessage is an extended Frame.\nSee: http://stomp.github.com/stomp-specification-1.2.html#STOMP_Frames STOMP Frame\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                command\n                            \n                            \n                                    Public\n                                headers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/frame.ts:28\n                            \n                        \n\n                \n                    \n                        It is serialized string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            command\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        command:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/frame.ts:18\n                            \n                        \n\n                \n                    \n                        STOMP Command\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/frame.ts:23\n                            \n                        \n\n                \n                    \n                        Headers, key value pairs.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\nimport {Byte} from \"./byte\";\n\ntype unmarshallResults = { frames: Frame[]; partial: string };\n\n/**\n * Frame class represents a STOMP frame. Many of the callbacks pass the Frame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link Frame#headers}.\n *\n * {@link Message} is an extended Frame.\n *\n * See: http://stomp.github.com/stomp-specification-1.2.html#STOMP_Frames STOMP Frame\n */\nexport class Frame {\n  /**\n   * STOMP Command\n   */\n  public command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  public headers: StompHeaders;\n\n  /**\n   * It is serialized string\n   */\n  public body: any;\n\n  private escapeHeaderValues: boolean;\n\n  /**\n   * Frame constructor. `command`, `headers` and `body` are available as properties.\n   *\n   * @internal\n   */\n  constructor(command: string, headers: StompHeaders = {}, body: any = '', escapeHeaderValues: boolean = false) {\n    this.command = command;\n    this.headers = headers;\n    this.body = body;\n    this.escapeHeaderValues = escapeHeaderValues;\n  }\n\n  /**\n   * @internal\n   */\n  public toString(): string {\n    const lines = [this.command];\n    const skipContentLength = (this.headers['content-length'] === false) ? true : false;\n    if (skipContentLength) {\n      delete this.headers['content-length'];\n    }\n\n    for (let name of Object.keys(this.headers || {})) {\n      const value = this.headers[name];\n      if (this.escapeHeaderValues && (this.command !== 'CONNECT') && (this.command !== 'CONNECTED')) {\n        lines.push(`${name}:${Frame.frEscape(`${value}`)}`);\n      } else {\n        lines.push(`${name}:${value}`);\n      }\n    }\n    if (this.body && !skipContentLength) {\n      lines.push(`content-length:${Frame.sizeOfUTF8(this.body)}`);\n    }\n    lines.push(Byte.LF + this.body);\n    return lines.join(Byte.LF);\n  }\n\n  /**\n   * Compute the size of a UTF-8 string by counting its number of bytes\n   * (and not the number of characters composing the string)\n   */\n  private static sizeOfUTF8(s: string): number {\n    if (s) {\n      const matches = encodeURI(s).match(/%..|./g) || [];\n      return matches.length;\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * deserialize a STOMP Frame from raw data.\n   *\n   * @internal\n   */\n  public static unmarshallSingle(data: any, escapeHeaderValues: boolean): Frame {\n    // search for 2 consecutives LF byte to split the command\n    // and headers from the body\n    const divider = data.search(new RegExp(`${Byte.LF}${Byte.LF}`));\n    const headerLines: string[] = data.substring(0, divider).split(Byte.LF);\n    const command = headerLines.shift();\n    const headers: StompHeaders = {};\n    // utility function to trim any whitespace before and after a string\n    const trim = (str: string): string => str.replace(/^\\s+|\\s+$/g, '');\n    // Parse headers in reverse order so that for repeated headers, the 1st\n    // value is used\n    for (let line of headerLines.reverse()) {\n      const idx = line.indexOf(':');\n\n      const key = trim(line.substring(0, idx));\n      let value = trim(line.substring(idx + 1));\n\n      if (escapeHeaderValues && (command !== 'CONNECT') && (command !== 'CONNECTED')) {\n        value = Frame.frUnEscape(value);\n      }\n\n      headers[key] = value;\n    }\n    // Parse body\n    // check for content-length or  topping at the first NULL byte found.\n    let body = '';\n    // skip the 2 LF bytes that divides the headers from the body\n    const start = divider + 2;\n    if (headers['content-length']) {\n      const len = parseInt(headers['content-length']);\n      body = (`${data}`).substring(start, start + len);\n    } else {\n      let chr = null;\n      for (let i = start, end = data.length, asc = start  end; asc ? i++ : i--) {\n        chr = data.charAt(i);\n        if (chr === Byte.NULL) {\n          break;\n        }\n        body += chr;\n      }\n    }\n    return new Frame(command, headers, body, escapeHeaderValues);\n  }\n\n  /**\n   * Split the data before unmarshalling every single STOMP frame.\n   * Web socket servers can send multiple frames in a single websocket message.\n   * If the message size exceeds the websocket message size, then a single\n   * frame can be fragmented across multiple messages.\n   *\n   * @internal\n   */\n  public static unmarshall(datas: any, escapeHeaderValues: boolean): unmarshallResults {\n    // Ugly list comprehension to split and unmarshall *multiple STOMP frames*\n    // contained in a *single WebSocket frame*.\n    // The data is split when a NULL byte (followed by zero or many LF bytes) is\n    // found\n    if (escapeHeaderValues == null) {\n      escapeHeaderValues = false;\n    }\n    const frames = datas.split(new RegExp(`${Byte.NULL}${Byte.LF}*`));\n\n    const r: unmarshallResults = {\n      frames: [],\n      partial: ''\n    };\n    r.frames = (frames.slice(0, -1).map((frame: Frame) => Frame.unmarshallSingle(frame, escapeHeaderValues)));\n\n    // If this contains a final full message or just a acknowledgement of a PING\n    // without any other content, process this frame, otherwise return the\n    // contents of the buffer to the caller.\n    const last_frame = frames.slice(-1)[0];\n\n    if ((last_frame === Byte.LF) || ((last_frame.search(new RegExp(`${Byte.NULL}${Byte.LF}*$`))) !== -1)) {\n      r.frames.push(Frame.unmarshallSingle(last_frame, escapeHeaderValues));\n    } else {\n      r.partial = last_frame;\n    }\n    return r;\n  }\n\n  /**\n   * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n   *\n   * @internal\n   */\n  public static marshall(command: string, headers: StompHeaders, body: any, escapeHeaderValues: boolean) {\n    const frame = new Frame(command, headers, body, escapeHeaderValues);\n    return frame.toString() + Byte.NULL;\n  }\n\n  /**\n   *  Escape header values\n   */\n  private static frEscape(str: string): string {\n    return str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\r/g, \"\\\\r\").replace(/\\n/g, \"\\\\n\").replace(/:/g, \"\\\\c\");\n  }\n\n  /**\n   * UnEscape header values\n   */\n  private static frUnEscape(str: string): string {\n    return str.replace(/\\\\r/g, \"\\r\").replace(/\\\\n/g, \"\\n\").replace(/\\\\c/g, \":\").replace(/\\\\\\\\/g, \"\\\\\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand onreceive.\nSince it is an extended Frame, you can access headers\nand body as properties.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    Frame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ack\n                                \n                                \n                                    nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \nack(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/message.ts:18\n                            \n                        \n\n\n                \n                    \n                            When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nack\n                            \n                            \n                        \n                    \n                \n                \n                    \nnack(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/message.ts:25\n                            \n                        \n\n\n                \n                    \n                            When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Frame} from \"./frame\";\nimport {StompHeaders} from \"./stomp-headers\";\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [onreceive]{@link Client#onreceive}.\n * Since it is an extended {@link Frame}, you can access [headers]{@link Frame#headers}\n * and [body]{@link Frame#body} as properties.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface Message extends Frame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack(headers?: StompHeaders): void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack(headers?: StompHeaders): void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WebSocketClass:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/compatibility/stomp.ts:19\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n        StompJs = require('../../esm5/');\n        Stomp = StompJs.Stomp;\n        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/compatibility/stomp.ts:30\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n        var url = \"ws://localhost:61614/stomp\";\n        var client = Stomp.client(url);\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/compatibility/stomp.ts:68\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once. While reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n        var client = Stomp.over(function(){\n          return new WebSocket('ws://localhost:15674/ws')\n        });\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from \"../versions\";\nimport {CompatClient} from \"./compat-client\";\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   */\n  public static WebSocketClass:any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   */\n  public static client (url: string, protocols: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.protocolVersions(); }\n    const ws_fn= function() {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(ws_fn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once. While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   */\n  public static over (ws: any): CompatClient {\n    const ws_fn = typeof(ws) === \"function\" ? ws : () => ws;\n\n    return new CompatClient(ws_fn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompConfig.html":{"url":"interfaces/StompConfig.html","title":"interface - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        connectHeaders\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        disconnectHeaders\n                                \n                                \n                                            Optional\n                                        heartbeatIncoming\n                                \n                                \n                                            Optional\n                                        heartbeatOutgoing\n                                \n                                \n                                            Optional\n                                        maxWebSocketFrameSize\n                                \n                                \n                                            Optional\n                                        onConnect\n                                \n                                \n                                            Optional\n                                        onDisconnect\n                                \n                                \n                                            Optional\n                                        onStompError\n                                \n                                \n                                            Optional\n                                        onUnhandledFrame\n                                \n                                \n                                            Optional\n                                        onUnhandledMessage\n                                \n                                \n                                            Optional\n                                        onUnhandledReceipt\n                                \n                                \n                                            Optional\n                                        onWebSocketClose\n                                \n                                \n                                            Optional\n                                        reconnectDelay\n                                \n                                \n                                            Optional\n                                        webSocketFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectHeaders\n                                    \n                                \n                                \n                                    \n                                        connectHeaders:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Connection headers, important keys - login, passcode, host\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     debugFnType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     debugFnType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, debug messages are discarded. To log to console following can be used:\n        client.debug = function(str) {\n          console.log(str);\n        };This method is called for every actual transmission of the STOMP frames over the\nWebSocket.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disconnectHeaders\n                                    \n                                \n                                \n                                    \n                                        disconnectHeaders:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Disconnection headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heartbeatIncoming\n                                    \n                                \n                                \n                                    \n                                        heartbeatIncoming:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Incoming heartbeat interval in milliseconds. Set to 0 to disable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heartbeatOutgoing\n                                    \n                                \n                                \n                                    \n                                        heartbeatOutgoing:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxWebSocketFrameSize\n                                    \n                                \n                                \n                                    \n                                        maxWebSocketFrameSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum WebSocket frame size sent by the client. If the STOMP frame\nis bigger than this value, the STOMP frame will be sent using multiple\nWebSocket frames (default is 16KiB)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onConnect\n                                    \n                                \n                                \n                                    \n                                        onConnect:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onDisconnect\n                                    \n                                \n                                \n                                    \n                                        onDisconnect:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onStompError\n                                    \n                                \n                                \n                                    \n                                        onStompError:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onUnhandledFrame\n                                    \n                                \n                                \n                                    \n                                        onUnhandledFrame:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If we receive an unknown frame type from the STOMP Broker.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onUnhandledMessage\n                                    \n                                \n                                \n                                    \n                                        onUnhandledMessage:     messageCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     messageCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This function will be called for any unhandled messages. It is useful to receive messages sent to\ntemporary queues (for example RabbitMQ supports such queues).\nIt can also be called for stray messages while the server is processing a request to unsubcribe\nfrom an endpoint.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onUnhandledReceipt\n                                    \n                                \n                                \n                                    \n                                        onUnhandledReceipt:     frameCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     frameCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    STOMP brokers can be requested to notify when an operation is actually completed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onWebSocketClose\n                                    \n                                \n                                \n                                    \n                                        onWebSocketClose:     closeEventCallbackType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     closeEventCallbackType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reconnectDelay\n                                    \n                                \n                                \n                                    \n                                        reconnectDelay:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    automatically reconnect with delay in milliseconds, set to 0 to disable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webSocketFactory\n                                    \n                                \n                                \n                                    \n                                        webSocketFactory:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This function should return a WebSocket or a similar (e.g. SockJS) object.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\nimport {frameCallbackType, messageCallbackType, closeEventCallbackType, debugFnType} from \"./types\";\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n */\nexport interface StompConfig {\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   */\n  webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable\n   */\n  reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable\n   */\n  heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable\n   */\n  heartbeatOutgoing?: number;\n\n  /**\n   * Maximum WebSocket frame size sent by the client. If the STOMP frame\n   * is bigger than this value, the STOMP frame will be sent using multiple\n   * WebSocket frames (default is 16KiB)\n   */\n  maxWebSocketFrameSize?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`\n   */\n  connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers\n   */\n  disconnectHeaders?: StompHeaders;\n\n  /**\n   * This function will be called for any unhandled messages. It is useful to receive messages sent to\n   * temporary queues (for example RabbitMQ supports such queues).\n   *\n   * It can also be called for stray messages while the server is processing a request to unsubcribe\n   * from an endpoint.\n   */\n  onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * STOMP brokers can be requested to notify when an operation is actually completed.\n   */\n  onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * If we receive an unknown frame type from the STOMP Broker.\n   */\n  onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * Callback\n   */\n  onConnect?: frameCallbackType;\n\n  /**\n   * Callback\n   */\n  onDisconnect?: frameCallbackType;\n\n  /**\n   * Callback\n   */\n  onStompError?: frameCallbackType;\n\n  /**\n   * Callback\n   */\n  onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * By default, debug messages are discarded. To log to `console` following can be used:\n   *\n   * ```javascript\n   *        client.debug = function(str) {\n   *          console.log(str);\n   *        };\n   * ```\n   *\n   * This method is called for every actual transmission of the STOMP frames over the\n   * WebSocket.\n   */\n  debug?: debugFnType;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompHeaders.html":{"url":"interfaces/StompHeaders.html","title":"interface - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as Frame#headers.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string | number | boolean\n\n                    \n                \n                        \n                            \n                                Defined in src/stomp-headers.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface StompHeaders { [key: string]: string|number|boolean }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    unsubscribe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribe(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/stomp-subscription.ts:15\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe. See Client#unsubscribe for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n */\nexport interface StompSubscription {\n  /**\n   * @internal\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe(headers?: StompHeaders): void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transaction.html":{"url":"interfaces/Transaction.html","title":"interface - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Tranasction is created by calling Client#begin\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Transaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_0:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in src/versions.ts:8\n                            \n                        \n\n                \n                    \n                        1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in src/versions.ts:12\n                            \n                        \n\n                \n                    \n                        1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in src/versions.ts:16\n                            \n                        \n\n                \n                    \n                        1.2\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * 1.0\n   */\n  static V1_0= '1.0';\n  /**\n   * 1.1\n   */\n  static V1_1= '1.1';\n  /**\n   * 1.2\n   */\n  static V1_2= '1.2';\n\n  /**\n   * @internal\n   */\n  static versions() {\n    return [Versions.V1_0, Versions.V1_1, Versions.V1_2]\n  }\n  /**\n   * @internal\n   */\n  static supportedVersions() {\n    return Versions.versions().join(',');\n  }\n  /**\n   * @internal\n   */\n  static protocolVersions() {\n    return Versions.versions().map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/client.ts\n            \n            \n                class\n            \n            \n                Client\n            \n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                    src/client.ts\n            \n            \n                interface\n            \n            \n                publishParams\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/compatibility/compat-client.ts\n            \n            \n                class\n            \n            \n                CompatClient\n            \n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                    src/compatibility/stomp.ts\n            \n            \n                class\n            \n            \n                Stomp\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/frame.ts\n            \n            \n                class\n            \n            \n                Frame\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/message.ts\n            \n            \n                interface\n            \n            \n                Message\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/stomp-config.ts\n            \n            \n                interface\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    src/stomp-headers.ts\n            \n            \n                interface\n            \n            \n                StompHeaders\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/stomp-subscription.ts\n            \n            \n                interface\n            \n            \n                StompSubscription\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/transaction.ts\n            \n            \n                interface\n            \n            \n                Transaction\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/versions.ts\n            \n            \n                class\n            \n            \n                Versions\n            \n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTOMP.js\n\nThis library provides a WebSocket over STOMP client for Web browser or node.js \napplications.\nIntroduction\nThis library allows you to connect to a STOMP broker over WebSocket. This library\nsupports full STOMP specifications and all current protocol variants. Most\npopular messaging brokers support STOMP and STOMP over WebSockets either natively\nor using plugins.\nIn general JavaScript engines in browsers are not friendly to binary protocols,\nso using STOMP is a better option because it is a text oriented protocol.\nThis library was originally developed by Jeff Mesnil.\nCurrent Status\nThis library is feature complete and has been used in production for many years. It\nis actively maintained. You are welcome to file issues and submit pull requests.\nGetting started\nThe documentation is hosted as GitHub pages.\nYou may head straight to the \nentry point.\n(or with frames)\nThis library comes with detailed usage instructions. Please find it at \nUsage instructions. \nIf you were using older versions and wish to benefit from newer features, head to\nUpgrading. \nIf you are an existing user and will like to deep dive - API references for important entities:\n\nStomp\nClient\n\nNodeJS\nIf you are using this library in NodeJS you might need to make changes, please check\nUpgrading. \nUsage with Angular2/4/5\nhttps://github.com/stomp-js/ng2-stompjs is based on this library and exposes the entire functionality\noffered by this library as Angular Services and rxjs Observables. Both these libraries are maintained\nby a similar set of contributors.\nTypeScript definitions\nThe npm package includes TypeScript definitions, so there is no need no install it separately.\nChange log\nPlease visit Change Log.\nContributing\nIf you want to understand the code, develop, or contribute. Please visit\nHow to contribute. \nAuthors\n\nJeff Mesnil\nJeff Lindsay\nVanessa Williams\nDeepak Kumar\nAstha Deep\nDillon Sellars\nJimi Charalampidis\nRaul\n\nLicense\nLicense - Apache v2 License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        5 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/publishParams.html":{"url":"interfaces/publishParams.html","title":"interface - publishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  publishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/client.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\nimport {StompSubscription} from \"./stomp-subscription\";\nimport {Transaction} from \"./transaction\";\nimport {closeEventCallbackType, debugFnType, frameCallbackType, messageCallbackType} from \"./types\";\nimport {StompConfig} from './stomp-config';\nimport {StompHandler} from \"./stomp-handler\";\n\ninterface publishParams {\n  destination: string,\n  headers?: StompHeaders,\n  body?: string\n}\n\n/**\n * STOMP Client Class.\n */\nexport class Client {\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   */\n  public webSocketFactory: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable\n   */\n  public reconnectDelay: number = 5000;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable\n   */\n  public heartbeatIncoming: number = 10000;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable\n   */\n  public heartbeatOutgoing: number = 10000;\n\n  // public heartbeat: { outgoing: number; incoming: number };\n\n  /**\n   * Maximum WebSocket frame size sent by the client. If the STOMP frame\n   * is bigger than this value, the STOMP frame will be sent using multiple\n   * WebSocket frames (default is 16KiB)\n   */\n  public maxWebSocketFrameSize: number = 16 * 1024;\n\n  /**\n   * Underlying WebSocket instance, READONLY\n   */\n  get webSocket(): WebSocket {\n    return this._webSocket;\n  }\n  /**\n   * Underlying WebSocket instance\n   * @internal\n   */\n  protected _webSocket: WebSocket;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`\n   */\n  public connectHeaders: StompHeaders;\n\n  /**\n   * Disconnection headers\n   */\n  public disconnectHeaders: StompHeaders;\n\n  /**\n   * This function will be called for any unhandled messages. It is useful to receive messages sent to\n   * temporary queues (for example RabbitMQ supports such queues).\n   *\n   * It can also be called for stray messages while the server is processing a request to unsubcribe\n   * from an endpoint.\n   */\n  public onUnhandledMessage: messageCallbackType;\n\n  /**\n   * STOMP brokers can be requested to notify when an operation is actually completed.\n   * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}. See\n   * [Client#watchForReceipt]{@link Client#watchForReceipt} for examples.\n   */\n  public onUnhandledReceipt: frameCallbackType;\n\n  /**\n   * Will be invoked if we receive an unknown frame type from the STOMP broker\n   */\n  public onUnhandledFrame: frameCallbackType;\n\n  /**\n   * `true` if there is a active connection with STOMP Broker\n   */\n  get connected(): boolean {\n    return (!!this._stompHandler) && this._stompHandler.connected;\n  }\n\n  /**\n   * Callback, invoked on every successful connection to the STOMP broker.\n   *\n   * The actual frame is passed as parameter to the callback.\n   */\n  public onConnect: frameCallbackType;\n\n  /**\n   * Callback, invoked on every successful disconnection from the STOMP broker. It will not be invoked if\n   * the STOMP broker disconnected due to an error.\n   *\n   * The actual frame is passed as parameter to the callback.\n   *\n   * The way STOMP protocol is designed, the connection may close/terminate without the client\n   * receiving the DISCONNECT frame.\n   * You might find [Client#onWebSocketClose]{@link Client#onWebSocketClose} more appropriate.\n   */\n  public onDisconnect: frameCallbackType;\n\n  /**\n   * Callback, invoked on an ERROR frame received from the STOMP Broker.\n   * A compliant STOMP Broker will close the connection after this type of frame.\n   *\n   * The actual frame is passed as parameter to the callback.\n   *\n   * See https://stomp.github.io/stomp-specification-1.2.html#ERROR.\n   */\n  public onStompError: frameCallbackType;\n\n  /**\n   * Callback, invoked when underlying WebSocket is closed.\n   *\n   * Actual `event` is passed as parameter to the callback.\n   */\n  public onWebSocketClose: closeEventCallbackType;\n\n  /**\n   * By default, debug messages are discarded. To log to `console` following can be used:\n   *\n   * ```javascript\n   *        client.debug = function(str) {\n   *          console.log(str);\n   *        };\n   * ```\n   *\n   * This method is called for every actual transmission of the STOMP frames over the\n   * WebSocket.\n   */\n  public debug: debugFnType;\n\n  /**\n   * version of STOMP protocol negotiated with the server, READONLY\n   */\n  get version(): string {\n    return this._stompHandler ? this._stompHandler.version : undefined;\n  }\n\n  private _stompHandler: StompHandler;\n\n  private _active: boolean = false;\n  private _reconnector: any;\n\n  /**\n   * Create an instance.\n   */\n  constructor(conf: StompConfig = {}) {\n    // Dummy callbacks\n    const noOp = () => {};\n    this.debug = noOp;\n    this.onConnect = noOp;\n    this.onDisconnect = noOp;\n    this.onUnhandledMessage = noOp;\n    this.onUnhandledReceipt = noOp;\n    this.onUnhandledFrame = noOp;\n    this.onStompError = noOp;\n    this.onWebSocketClose = noOp;\n\n    // These parameters would typically get proper values before connect is called\n    this.connectHeaders = {};\n    this.disconnectHeaders = {};\n    this.webSocketFactory = () => null;\n\n    // Apply configuration\n    this.configure(conf);\n  }\n\n  /**\n   * Update configuration. See {@link StompConfig} for details of configuration options.\n   */\n  public configure(conf: StompConfig): void {\n    // bulk assign all properties to this\n    (Object).assign(this, conf);\n  }\n\n  /**\n   * Initiate the connection. If the connection breaks it will keep trying to reconnect.\n   *\n   * Call [Client#deactivate]{@link Client#deactivate} to disconnect and stop reconnection attempts.\n   */\n  public activate(): void {\n    // Indicate that this connection is active (it will keep trying to connect)\n    this._active = true;\n\n    this._connect();\n  }\n\n  private _connect(): void {\n    if (!this._active) {\n      this.debug('Client has been marked inactive, will not attempt to connect');\n      return;\n    }\n\n    if (this.connected) {\n      this.debug('STOMP: already connected, nothing to do');\n      return;\n    }\n\n    this.debug(\"Opening Web Socket...\");\n\n    // Get the actual Websocket (or a similar object)\n    this._webSocket = this._createWebSocket();\n\n    this._stompHandler = new StompHandler(this, this._webSocket, {\n      debug: this.debug,\n      connectHeaders: this.connectHeaders,\n      disconnectHeaders: this.disconnectHeaders,\n      heartbeatIncoming: this.heartbeatIncoming,\n      heartbeatOutgoing: this.heartbeatOutgoing,\n      maxWebSocketFrameSize: this.maxWebSocketFrameSize,\n      onConnect: (frame) => {\n        if (!this._active) {\n          this.debug('STOMP got connected while deactivate was issued, will disconnect now');\n          this._disposeStompHandler();\n          return;\n        }\n        this.onConnect(frame);\n      },\n      onDisconnect: (frame) => {\n        this.onDisconnect(frame);\n      },\n      onStompError: (frame) => {\n        this.onStompError(frame);\n      },\n      onWebSocketClose: (evt) => {\n        this.onWebSocketClose(evt);\n        if (this._active) {\n          this._schedule_reconnect();\n        }\n      },\n      onUnhandledMessage: (message) => {\n        this.onUnhandledMessage(message);\n      },\n      onUnhandledReceipt: (frame) => {\n        this.onUnhandledReceipt(frame);\n      },\n      onUnhandledFrame: (frame) => {\n        this.onUnhandledFrame(frame);\n      }\n    });\n\n    this._stompHandler.start();\n  }\n\n  private _createWebSocket() {\n    const webSocket = this.webSocketFactory();\n    webSocket.binaryType = \"arraybuffer\";\n    return webSocket;\n  }\n\n  private _schedule_reconnect(): void {\n    if (this.reconnectDelay > 0) {\n      this.debug(`STOMP: scheduling reconnection in ${this.reconnectDelay}ms`);\n\n      this._reconnector = setTimeout(() => {\n        this._connect();\n      }, this.reconnectDelay);\n    }\n  }\n\n  /**\n   * Disconnect and stop auto reconnect loop.\n   *\n   * Appropriate callbacks will be invoked if underlying STOMP connection is connected.\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#DISCONNECT\n   */\n  public deactivate(): void {\n    // indicate that auto reconnect loop should terminate\n    this._active = false;\n\n    // Clear if a reconnection was scheduled\n    if (this._reconnector) {\n      clearTimeout(this._reconnector);\n    }\n    this._disposeStompHandler();\n  }\n\n  private _disposeStompHandler() {\n    // Dispose STOMP Handler\n    if (this._stompHandler) {\n      this._stompHandler.dispose();\n      this._stompHandler = null;\n    }\n  }\n\n  /**\n   * Send a message to a named destination. Refer to your STOMP broker documentation for types\n   * and naming of destinations. The headers will, typically, be available to the subscriber.\n   * However, there may be special purpose headers corresponding to your STOMP broker.\n   *\n   * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n   *\n   * ```javascript\n   *        client.send({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n   *\n   *        // Only destination is mandatory parameter\n   *        client.send({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n   * ```\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#SEND SEND Frame\n   */\n  public publish(params: publishParams) {\n    let {destination, headers, body} = params;\n    this._stompHandler.publish({\n      destination: destination,\n      headers: headers || {},\n      body: body || ''\n    });\n  }\n\n  /**\n   * Watch for a receipt, callback will receive the STOMP frame as parameter.\n   *\n   * The receipt id needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination would be used.\n   *\n   * Example:\n   * ```javascript\n   *        // Receipt for Subscription\n   *        let receiptId = randomText();\n   *\n   *        client.watchForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *\n   *        client.subscribe(TEST.destination, onMessage, {receipt: receiptId});\n   *\n   *        // Receipt for message send\n   *        receiptId = randomText();\n   *\n   *        client.watchForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        client.send(TEST.destination, {receipt: receiptId}, msg);\n   * ```\n   */\n  public watchForReceipt(receiptId: string, callback: frameCallbackType): void {\n    this._stompHandler.watchForReceipt(receiptId, callback);\n  }\n\n  /**\n   * Subscribe to a STOMP Broker location. The callbck will be invoked for each received message with\n   * the {@link Message} as argument.\n   *\n   * Note: The library will generate an unique ID if there is none provided in the headers.\n   *       To use your own ID, pass it using the headers argument.\n   *\n   * ```javascript\n   *        callback = function(message) {\n   *        // called when the client receives a STOMP message from the server\n   *          if (message.body) {\n   *            alert(\"got message with body \" + message.body)\n   *          } else {\n   *            alert(\"got empty message\");\n   *          }\n   *        });\n   *\n   *        var subscription = client.subscribe(\"/queue/test\", callback);\n   *\n   *        // Explicit subscription id\n   *        var mySubId = 'my-subscription-id-001';\n   *        var subscription = client.subscribe(destination, callback, { id: mySubId });\n   * ```\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#SUBSCRIBE SUBSCRIBE Frame\n   */\n  public subscribe(destination: string, callback: messageCallbackType, headers: StompHeaders = {}): StompSubscription {\n    return this._stompHandler.subscribe(destination, callback, headers);\n  }\n\n  /**\n   * It is preferable to unsubscribe from a subscription by calling\n   * `unsubscribe()` directly on {@link StompSubscription} returned by `client.subscribe()`:\n   *\n   * ```javascript\n   *        var subscription = client.subscribe(destination, onmessage);\n   *        // ...\n   *        subscription.unsubscribe();\n   * ```\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#UNSUBSCRIBE UNSUBSCRIBE Frame\n   */\n  public unsubscribe(id: string, headers: StompHeaders = {}): void {\n    this._stompHandler.unsubscribe(id, headers);\n  }\n\n  /**\n   * Start a transaction, the returned {@link Transaction} has methods - [commit]{@link Transaction#commit}\n   * and [abort]{@link Transaction#abort}.\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#BEGIN BEGIN Frame\n   */\n  public begin(transactionId: string): Transaction {\n    return this._stompHandler.begin(transactionId);\n  }\n\n  /**\n   * Commit a transaction.\n   * It is preferable to commit a transaction by calling [commit]{@link Transaction#commit} directly on\n   * {@link Transaction} returned by [client.begin]{@link Client#begin}.\n   *\n   * ```javascript\n   *        var tx = client.begin(txId);\n   *        //...\n   *        tx.commit();\n   * ```\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#COMMIT COMMIT Frame\n   */\n  public commit(transactionId: string): void {\n    this._stompHandler.commit(transactionId);\n  }\n\n  /**\n   * Abort a transaction.\n   * It is preferable to abort a transaction by calling [abort]{@link Transaction#abort} directly on\n   * {@link Transaction} returned by [client.begin]{@link Client#begin}.\n   *\n   * ```javascript\n   *        var tx = client.begin(txId);\n   *        //...\n   *        tx.abort();\n   * ```\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#ABORT ABORT Frame\n   */\n  public abort(transactionId: string): void {\n    this._stompHandler.abort(transactionId);\n  }\n\n  /**\n   * ACK a message. It is preferable to acknowledge a message by calling [ack]{@link Message#ack} directly\n   * on the {@link Message} handled by a subscription callback:\n   *\n   * ```javascript\n   *        var callback = function (message) {\n   *          // process the message\n   *          // acknowledge it\n   *          message.ack();\n   *        };\n   *        client.subscribe(destination, callback, {'ack': 'client'});\n   * ```\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#ACK ACK Frame\n   */\n  public ack(messageId: string, subscriptionId: string, headers: StompHeaders = {}): void {\n    this._stompHandler.ack(messageId, subscriptionId, headers);\n  }\n\n  /**\n   * NACK a message. It is preferable to acknowledge a message by calling [nack]{@link Message#nack} directly\n   * on the {@link Message} handled by a subscription callback:\n   *\n   * ```javascript\n   *        var callback = function (message) {\n   *          // process the message\n   *          // an error occurs, nack it\n   *          message.nack();\n   *        };\n   *        client.subscribe(destination, callback, {'ack': 'client'});\n   * ```\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#NACK NACK Frame\n   */\n  public nack(messageId: string, subscriptionId: string, headers: StompHeaders = {}): void {\n    this._stompHandler.nack(messageId, subscriptionId, headers);\n  }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (src/.../types.ts)\n                        \n                        \n                            debugFnType   (src/.../types.ts)\n                        \n                        \n                            frameCallbackType   (src/.../types.ts)\n                        \n                        \n                            messageCallbackType   (src/.../types.ts)\n                        \n                        \n                            unmarshallResults   (src/.../frame.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        closeEventCallbackType\n                    \n                \n                \n                    \n                        closeEventCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debugFnType\n                    \n                \n                \n                    \n                        debugFnType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        frameCallbackType\n                    \n                \n                \n                    \n                        frameCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCallbackType\n                    \n                \n                \n                    \n                        messageCallbackType:     function\n\n                    \n                \n            \n        \n\n    src/frame.ts\n    \n        \n            \n                \n                    \n                        \n                        unmarshallResults\n                    \n                \n                \n                    \n                        unmarshallResults:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\nThis index provides links to some useful pages in the \ndocumentation:\n\nUsage instructions - how to use this library in a\nweb browser or a NodeJS application. \n\nHow to contribute - if you want to understand \nthe code, develop, contribute. \n\nUpgrading - if you are using\nolder versions and wish to benefit from newer features.\n\nLegacy Documents - \nOriginal documentation (external link). Outdated.\n\nAPI Reference for important entities:\n\nStomp\nClient\n\n\nChange Log\n\nLicense - Apache v2 License\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/usage.html":{"url":"additional-documentation/usage.html","title":"additional-page - Usage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing STOMP JS\nThe STOMP Broker\nEnsure that your STOMP broker supports STOMP over WebSockets. Some messaging\nbrokers supports it out of the box while some may need special configuration \nor activating plugins. See STOMP Brokers for a non\nauthoritative list.\nInclude STOMP.js\nIn Web Browser\n\nDownload stomp.js\nor stomp.min.js\nInclude in your web page.\nStomp object will now be available. Read along to learn how to use it.\n\nIn NodeJS\n\nAdd npm modules @stomp/stompjs and websocket to your project.\n\nusing npm$ npm install @stomp/stompjs websocket --save\nusing yarn$ yarn add @stomp/stompjs websocket\n\n\nRequire the module\n  var Stomp = require('@stomp/stompjs');\nRead along to learn how to use the Stomp object.\n\nCreate a STOMP client\nSTOMP JavaScript clients will communicate to a STOMP server using a ws:// URL.\nTo create a STOMP client JavaScript object, you need to call Stomp.client(url)\n with the URL corresponding to the server's WebSocket endpoint:\n  var url = \"ws://localhost:15674/ws\";\n  var client = Stomp.client(url);The Stomp.client(url, protocols) can also be used to override the \ndefault subprotocols provided by the library: \n['v10.stomp', 'v11.stomp', 'v12.stomp'] (for STOMP 1.0, 1.1, & 1.2 \nspecifications). This second argument can either be a single string\n or an array of strings to specify multiple subprotocols.\nNotes: \n\nIn older versions of this library creating the client NodeJS was different.\nIf you need the old behavior please use version 3.x.x of the library.\nRecent versions of all web browsers and nodejs support WebSocket. However\nif you need to support older browsers, please see SockJS Support.\n\nConnection to the server\nOnce a STOMP client is created, it must call its connect() method to \neffectively connect and authenticate to the STOMP server. Usually the STOMP\n borker needs\n two arguments, login and passcode corresponding to the user\n  credentials. As per STOMP 1.2 host is mandatory, however many\n  STOMP brokers do not insist on this.\nBehind the scene, the client will open a connection using a WebSocket and send a\n CONNECT\nframe.\nThe connection is done asynchronously: you have no guarantee to be effectively\nconnected when the call to connect returns. To be notified of the connection, \nyou need to pass a connect_callback function to the connect() method:\n  var connect_callback = function() {\n    // called back after the client is connected and authenticated to the STOMP server\n  };But what happens if the connection fails? the connect() method accepts an\n  optional error_callback argument which will be called if the client is not able\n  to connect to the server.\n  The callback will be called with a single argument, an error object \n  corresponding to STOMP\n  ERROR frame:\n  var error_callback = function(error) {\n    // display the error's message header:\n    alert(error.headers.message);\n  };The connect() method accepts different number of arguments to provide a simple \nAPI to use in most cases:\n  client.connect(login, passcode, connectCallback);\n  client.connect(login, passcode, connectCallback, errorCallback);\n  client.connect(login, passcode, connectCallback, errorCallback, closeEventCallback);\n  client.connect(login, passcode, connectCallback, errorCallback, closeEventCallback, host);where login, passcode and host are strings. connectCallback and\nerrorCallback is a function which will receive a Frame as argument and \ncloseEventCallback is a function which will receive a CloseEvent\nThe connect() method also accepts two other variants if you need\n to pass additional headers:\n  client.connect(headers, connectCallback);\n  client.connect(headers, connectCallback, errorCallback);\n  client.connect(headers, connectCallback, errorCallback, closeEventCallback);where header is a map. connectCallback and\nerrorCallback is a function which will receive a Frame as argument and \ncloseEventCallback is a function which will receive a CloseEvent\nPlease note that if you use these forms, you will typically add login,\n passcode (and host) headers yourself:\n    var headers = {\n      login: 'mylogin',\n      passcode: 'mypasscode',\n      // additional header\n      'client-id': 'my-client-id'\n    };\n    client.connect(headers, connectCallback);To disconnect a client from the server, you can call its disconnect()\n method. The disconnection is asynchronous: to be notified when \n the disconnection is effective, the disconnect method takes an \n optional callback argument.\n  client.disconnect(function() {\n    alert(\"See you next time!\");\n  });When a client is disconnected, it can no longer send or receive messages.\nHeart-beating\nIf the STOMP broker accepts STOMP 1.1 or higher frames, \nheart-beating is enabled by default.\nThe client object has a heartbeat field which can be used to configure \nheart-beating by changing its incoming and outgoing integer fields \n(default value for both is 10,000ms). These can be disabled by setting to 0.\n    client.heartbeat.outgoing = 20000; // client will send heartbeats every 20000ms\n    client.heartbeat.incoming = 0;     // client does not want to receive heartbeats\n                                       // from the serverAuto Reconnect\nThe client supports automatic reconnecting in case of a connection failure. It is\ncontrolled by a field reconnect_delay. Default value is 0, which indicates auto\nreconnect is disabled.\n  // Add the following if you need automatic reconnect (delay is in milli seconds)\n  client.reconnect_delay = 5000;Send messages\nWhen the client is connected to the server, it can send STOMP messages using\n  the send() method. The method takes a mandatory destination\n  argument corresponding to the STOMP destination. It also takes two optional\n  arguments: headers, a JavaScript object containing additional\n  message headers and body, a String.\n  client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");The client will send a STOMP \nSEND\nframe to /queue/test destination with a header priority set to 9 and\n a body Hello, STOMP.\nIf you want to send a message with a body, you must also pass the headers\n argument. If you have no headers to pass, use an empty JavaScript literal {}:\n  client.send(destination, {}, body);Subscribe and receive messages\nTo receive messages in the browser, the STOMP client must first subscribe to \na destination.\nYou can use the subscribe() method to subscribe to a destination. The method\ntakes 2 mandatory arguments: destination, a String corresponding to the \ndestination and callback, a function with one message argument and an optional\nargument headers, a JavaScript object for additional headers.\n  var subscription = client.subscribe(\"/queue/test\", callback);The subscribe() methods returns a JavaScript object with one attribute, id, \nthat correspond to the client subscription ID and one method unsubscribe() \nthat can be used later on to unsubscribe the client from this destination.\nBy default, the library will generate an unique ID if there is none provided\nin the headers. To use your own ID, pass it using the headers argument:\n  var mysubid = 'my-subscription-id-001';\n  var subscription = client.subscribe(destination, callback, { id: mysubid });The client will send a STOMP \nSUBSCRIBE \nframe to the server and register the callback. Every time the server sends \na message to the client, the client will in turn call the callback with a \nSTOMP Frame object corresponding to the message:\n  callback = function(message) {\n    // called when the client receives a STOMP message from the server\n    if (message.body) {\n      alert(\"got message with body \" + message.body)\n    } else {\n      alert(\"got empty message\");\n    }\n  };The subscribe() method takes an optional headers argument to specify \nadditional headers when subscribing to a destination:\n  var headers = {ack: 'client', 'selector': \"location = 'Europe'\"};\n  client.subscribe(\"/queue/test\", message_callback, headers);The client specifies that it will handle the message acknowledgement and \nis interested to receive only messages matching the selector location = 'Europe'.\nIf you want to subscribe the client to multiple destinations, you can use\nthe same callback to receive all the messages:\n  onmessage = function(message) {\n    // called every time the client receives a message\n  };\n\n  var sub1 = client.subscribe(\"queue/test\", onmessage);\n  var sub2 = client.subscribe(\"queue/another\", onmessage);To stop receiving messages, the client can use the unsubscribe() method on \nthe object returned by the subscribe() method.\n  var subscription = client.subscribe(\"queue/test\", onmessage);\n\n  // ... use the subscription ...\n\n  subscription.unsubscribe();JSON support\nThe body of a STOMP message must be a String. If you want to send and receive\nJSON objects, you can use JSON.stringify() and \nJSON.parse() to transform the JSON object to a String and vice versa.\n  var quote = {symbol: 'APPL', value: 195.46};\n  client.send(\"/topic/stocks\", {}, JSON.stringify(quote));\n\n  client.subcribe(\"/topic/stocks\", function(message) {\n    var quote = JSON.parse(message.body);\n    alert(quote.symbol + \" is at \" + quote.value);\n  });Acknowledgment\nBy default, STOMP messages will be automatically acknowledged by the server\nbefore the message is delivered to the client.\nThe client can choose instead to handle message \nacknowledgement by subscribing \nto a destination and specify a ack header set to client or \nclient-individual.\nIn that case, the client must use the message.ack() method to inform the \nserver that it has acknowledge the message. This method sends an \nACK Frame to the\nbroker.\n  var subscription = client.subscribe(\"/queue/test\",\n    function(message) {\n      // do something with the message\n      // ...\n      // and acknowledge it\n      message.ack();\n    },\n    {ack: 'client'}\n  );The ack() method accepts a headers argument for additional headers to \nacknowledge the message. For example, it is possible to acknowledge a \nmessage as part of a transaction and ask for a receipt when the ACK STOMP \nframe has effectively be processed by the broker:\n  var tx = client.begin();\n  message.ack({ transaction: tx.id, receipt: 'my-receipt' });\n  tx.commit();The message.nack() method can also be used to inform STOMP 1.1 or higher\nbrokers that the client did not consume the message using a\nNACK Frame. It \ntakes the same arguments than the ack() method.\nTransactions\nMessages can be sent and acknowledged in a transaction.\nA transaction is started by the client using its begin() method which \ntakes an optional transaction_id, a String which uniquely identifies the \ntransaction. If no transaction_id is passed, the library will generate \none automatically.\nThis methods returns a JavaScript object with an id attribute corresponding\nto the transaction ID and two methods:\n\ncommit() to commit the transaction\nabort() to abort the transaction\n\nThe client can then send and/or acknowledge messages in the transaction\nby specifying a transaction set with the transaction id.\n  // start the transaction\n  var tx = client.begin();\n  // send the message in a transaction\n  client.send(\"/queue/test\", {transaction: tx.id}, \"message in a transaction\");\n  // commit the transaction to effectively send the message\n  tx.commit();If you forget to add the transaction header when calling send() the message\nwill not be part of the transaction and will be sent directly without waiting\nfor the completion of the transaction.\n  var txid = \"unique_transaction_identifier\";\n  // start the transaction\n  var tx = client.begin();\n  // oops! send the message outside the transaction\n  client.send(\"/queue/test\", {}, \"I thought I was in a transaction!\");\n  tx.abort(); // Too late! the message has been sentDebug\nThere are few tests in the code and it is helpful to see what is sent and \nreceived from the library to debug application.\nThe client can set its debug property to a function with takes a String \nargument to see all the debug statements of the library:\n  client.debug = function(str) {\n    // append the debug log to a #debug div somewhere in the page using JQuery:\n    $(\"#debug\").append(str + \"\\n\");\n  };By default, the debug messages are logged in the browser window's console.\nOn a busy system the logs can be overwhelming, to disable logging, set it to\nan empty function:\n  client.debug = function(str) {};\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/stomp-brokers.html":{"url":"additional-documentation/stomp-brokers.html","title":"additional-page - STOMP Brokers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBroker Requirements\nInformation on this page is outdated, please refer to your broker documentation\nfor up to date information.\nThis library is not a pure STOMP client. It is aimed to run on the \nWebSockets protocol which is not TCP. Basically, the WebSocket protocol \nrequires a handshake between the browser's client and the server to \nensure the browser's \"same-origin\" security model remains in effect.\nThis means that this library can not connect to regular STOMP brokers \nsince they would not understand the handshake initiated by the WebSocket \nwhich is not part of the STOMP protocol and would likely reject the \nconnection.\nThere are ongoing works to add WebSocket support to STOMP broker so \nthat they will accept STOMP connections over the WebSocket protocol.\nHornetQ\nHornetQ is the Open Source messaging system \ndeveloped by Red Hat and JBoss.\nTo start HornetQ with support for STOMP Over WebSocket, \ndownload the latest version \nand run the following steps:\n  $ cd hornetq-x.y.z/examples/jms/stomp-websockets\n  $ mvn clean install\n  ...\n  INFO: HQ221020: Started Netty Acceptor version 3.6.2.Final-c0d783c localhost:61614 for STOMP_WS protocol\n  Apr 15, 2013 1:15:33 PM org.hornetq.core.server.impl.HornetQServerImpl$SharedStoreLiveActivation run\n  INFO: HQ221007: Server is now live\n  Apr 15, 2013 1:15:33 PM org.hornetq.core.server.impl.HornetQServerImpl start\n  INFO: HQ221001: HornetQ Server version 2.3.0.CR2 (black'n'yellow2, 123) [c9e29e45-a5bd-11e2-976a-b3fef7ceb5df]HornetQ is now started and listens to STOMP over WebSocket on the port 61614.It accepts WebSocket connections from the URL ws://localhost:61614/stomp\nTo configure and run HornetQ with STOMP Over WebSocket enabled, follow the \ninstructions.\nActiveMQ\nActiveMQ is the Open Source messaging system \ndeveloped by Apache. Starting with 5.4 snapshots, ActiveMQ supports STOMP \nOver WebSocket.\nTo configure and run ActiveMQ with STOMP Over WebSocket enabled, follow \nthe instructions.\nActiveMQ Apollo\nActiveMQ Apollo is the next generation \nof ActiveMQ broker. From the start, Apollo supports STOMP Over WebSocket.\nTo configure and run Apollo with STOMP Over WebSocket enabled, follow the \ninstructions.\nRabbitMQ\nRabbitMQ is Open Source messaging system sponsored \nby Pivotal.\nTo configure and run RabbitMQ with STOMP Over WebSocket enabled, follow the \ninstructions to install the \nWeb-Stomp plugin.\nStilts & Torquebox\nStilts is a STOMP-native messaging framework \nwhich aims to address treating STOMP as primary contract for messaging, and \nintegrating around it, instead of simply applying STOMP shims to existing \nservices.\nTorqueBox uses the Stilts project to provide its \nWebSockets and STOMP stack.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/upgrading.html":{"url":"additional-documentation/upgrading.html","title":"additional-page - Upgrading","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUpgrade (Work in Progress)\nAuto Reconnect\nPlease note:\n\nAfter each connect (i.e., initial connect as well each reconnection) the connectCallback\nwill be called.\nAfter reconnecting, it will not automatically subscribe to queues that were subscribed.\nSo, if all subscriptions are part of the connectCallback (which it would in most of the cases),\nyou will not need to do any additional handling.\n\nStomp.client, Stomp.overTCP, or, Stomp.overWS\nJust add client.reconnect_delay = 5000;. The delay is in milli seconds. A value\nof 0 indicates auto reconnect is disabled.\n    var url = \"ws://localhost:61614/stomp\";\n    var client = Stomp.client(url);\n\n    // Add the following if you need automatic reconnect (delay is in milli seconds)\n    client.reconnect_delay = 5000;See also:\n\nAuto Reconnect\n\nStomp.over\nIf you were using Stomp.over like:\n    \n    \n        // use SockJS implementation instead of the browser's native implementation\n        var ws = new SockJS(url);\n        var client = Stomp.over(ws);\n        // ...\n    Change it to:\n    \n    \n        // use SockJS implementation instead of the browser's native implementation\n        var client = Stomp.over(function(){\n                                   return new SockJS(url);\n                                });\n\n        // Add the following if you need automatic reconnect (delay is in milli seconds)\n        client.reconnect_delay = 5000;\n        // ...\n    See also:\n\nStomp.over\n\nNodeJS\nNodeJS now supports same semantics as the browser, so you might need to make changes\nif you were using NodeJS specific syntax.\nStomp.overWS -> Stomp.client\nJust change the method name:\n    var client = Stomp.overWS(\"ws://localhost:61614/stomp\"); to\n    var client = Stomp.client(\"ws://localhost:61614/stomp\");\nStomp.client\n\nStomp.overTCP -> Stomp.client\nThe older code to handle STOMP over TCP was not properly maintained. So, this library\ndrops support for using STOMP over raw TCP. If you need that functionality you may\nneed to use the original version of this library from:\nhttps://github.com/jmesnil/stomp-websocket\nTo upgrade:\n\nEnsure that your STOMP broker is configured to communicate STOMP over\nWebSocket.\nGet the WebSocket endpoint URL - typically like ws://localhost:61614/stomp\n\n    var client = Stomp.overTCP(\"localhost\", 61613); to\n    var client = Stomp.client(\"ws://localhost:61614/stomp\");Do test your application.\nSee also:\n\nStomp.client\n\nSockJS -> WebSocket\nSummary of steps:\n\nEnsure that your STOMP broker is configured to communicate STOMP over\nWebSocket.\nSockJS and WebSocket use different handshake mechanism, so, their end points\nare likely to be different.\nGet the WebSocket endpoint URL - typically like ws://localhost:61614/stomp\nReplace your code to create Client similar to:\n\n    var client = Stomp.client(\"ws://localhost:61614/stomp\");See also:\n\nSockJS Limitations\nStomp.over\nStomp.client\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sockjs-support.html":{"url":"additional-documentation/sockjs-support.html","title":"additional-page - SockJS Support","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the Web browser with a custom WebSocket\nAlmost all brokers that support SockJS also support WebSockets. If your\napplication does not need to support old browsers, switch to using\nWebSockets. Check https://en.wikipedia.org/wiki/WebSocket for compatibility \ninformation.\nWeb browsers supports different versions of the WebSocket protocol. Some \nolder browsers does not provide the WebSocket JavaScript or expose it \nunder another name. By default, stomp.js will use the Web browser native \nWebSocket class to create the WebSocket.\nHowever it is possible to use other type of WebSockets by using the \nStomp.over(ws) method. This method expects an object that conforms \nto the WebSocket definition.\nFor example, it is possible to use the implementation provided by the \nSockJS project which falls \nback to a variety of browser-specific transport protocols instead:\n    // use SockJS implementation instead of the browser's native implementation\n    var client = Stomp.over(function(){\n        return new SockJS(url);\n    });Use Stomp.client(url) to use regular WebSockets or use Stomp.over(ws_fn) \nif you required another type of WebSocket.\nApart from this initialization, the STOMP API remains the same in both cases.\nLimitations of SockJS\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of\nthose, auto reconnect may occasionally fail.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/change-log.html":{"url":"additional-documentation/change-log.html","title":"additional-page - Change Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\n4.0.6 (2018/05/26)\n\nUpdates in typescript definitions, Thanks Raul,\nsee: #39\n\n4.0.5\n\nIgnore - incomplete release\n\n4.0.4 (2018/05/22)\n\nGWT Compatibility, fixes #38\n\n4.0.3 (2018/05/09)\n\nAdd to Bower, fixes #26\nSeveral documentation cleanup, fixes #27\nUpdated typescript definitions, Thanks Jimi Charalampidis.\nSee: #33\nI need to be more disciplined. Caught up on ChangeLog updates :)\n\n4.0.2 (2018/02/23)\n\nDockerfile for RabbitMQ. Thanks Dillon Sellars.\nSee: #22\nAdd closeEventCallback to expose the websocket CloseEvent.\nThanks Dillon Sellars.\nSee: #23\nCleanup disconnect code, fixes #21\n\n4.0.1 (2018/01/29)\n\nFixes #20\n\n4.0.0 (2017/11/09)\n\nNodeJS has been upgraded to first class citizen. Dropped legacy support.\nMajor version change as this version is not backward compatible.\n\n3.1.2 (2017/11/04)\n\nHeader value escaping as per STOMP 1.2 standard.\n\n3.1.0 (2017/07/05)\n\nUpdated tests to QUint latest version. Now using same set of tests\nfor NodeJS environment.\nPruned files and folders no longer needed.\nUpdated dependencies.\nUpdated build scripts.\nRefactored entire documentation.\nEnabled Travis CI (it runs all test cases using NodeJS).\nDocumentation is hosted at GitHub pages.\nUpdated TypeScript type definitions.\n\n2.5.1 (2017/03/28)\n\nAdded typescript definitions. Thanks Jimi Charalampidis (https://github.com/jimic)\nPublished on npmjs.com.\n\n2.5.0 (2017/02/15)\n\nSupport for auto reconnect\nMinor documentation changes\n\n2.4.9 (2016/04/01)\nSTOMP 1.2 and RabbitMQ support\n\ndeletion of durable subscriptions\nSTOMP 1.2 ack/nack headers\ngraceful shutdown\n\nAPI change\n\nthe unsubscribe() method returned by subscribe() now takes an optional\nheaders argument which can be used to pass headers like durable:true and\nauto-delete:false required by RabbitMQ to delete durable subscriptions\n\nfor STOMP 1.2, ack() and nack() methods send an id header rather than\na message-id header to match the incoming MESSAGE frame.\n\nalthough the disconnectCallback is still called immediately after transmitting\na DISCONNECT frame, the websocket is not closed by the client until a RECEIPT is\nreceived. Note that due to server-side behaviour with respect to connection lingering\nthe RECEIPT may never be received and the socket will be closed by the server.\n2.0 (2012/11/29)\n\n\nSTOMP 1.1 support\n\nheart-beat\nnack\ncontent-length\n\nAPI change\n\nthe errorCallback passed to the connect() method is no longer called when the\nclient is properly disconnected by calling disconnect().\n\nack() method takes 3 parameters:\n\nmessageID & subscription are MANDATORY.\nheaders is OPTIONAL\n\n\nthe client object has a heartbeat field which can be used to configure heart-beating by changing its incoming and outgoing integer fields (default value for both is 10000ms):\n  client.heartbeat.outgoing = 20000 // client will send heartbeats every 20000ms\n  client.heartbeat.incoming = 0 // client does not want to receive heartbeats\n                            // from the server\n\nMinified version\nIn addition to the regular stomp.js file, the library is also available in a minified version stomp.min.js\nAnnotated source\nThe source is now documented :)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-to-contribute.html":{"url":"additional-documentation/how-to-contribute.html","title":"additional-page - How to Contribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nHow to contribute\n\nFile issues.\nEdit/write documentation.\nSubmit pull requests.\nTest in different environments.\nRaise awareness.\n\nSummary of tools\nFollowing tools are getting used:\n\nCoffeeScript as primary language - http://coffeescript.org/\ncodo for API documentation - https://github.com/coffeedoc/codo\ncake for build automation - http://coffeescript.org/\nqunit for test cases - http://qunitjs.com/\nnodejs during development - https://nodejs.org/\nyarn for dependency management - https://yarnpkg.com/\nnpm for packaging and distribution - https://www.npmjs.com/\n\nInitial setup\nInstructions on setting up development environment:\n\nInstall node and npm - https://nodejs.org/\nInstall yarn - https://yarnpkg.com/en/docs/install\nInstall 'codo', it needs to be installed globally - npm install -g codo\nCheckout code from GitHub - you may fork the code first into your GitHub account.\nUse yarn to install dependencies:  $ yarn\n\nProject structure\n├── Cakefile                       - build/watch tasks & scripts\n├── LICENSE.txt\n├── README.md\n├── RELEASE_NOTES.md\n├── bower.json\n├── coffeelint.json\n├── doc/                           - Legacy documentation\n├── docs/                          - Documentation (root of GitHub pages)\n│   └── codo/                      - Generated documentation\n├── docs-src/                      - Guides (kodo build process uses it)\n├── example/                       - Legacy example \n├── index.d.ts                     - Typescript type definitions\n├── index.js                       - Entry point for nodejs\n├── lib/                           - Compiled JS files\n│   ├── stomp.js                   - Main library code\n│   └── stomp.min.js\n├── package.json\n├── src/                           - CoffeeSctipt files\n│   └── stomp.coffee               - Main library code\n├── tests/                         - All tests\n│   ├── config/\n│   │   ├── browser-config.js      - Browser specific configuration\n│   │   └── node-config.js         - NodeJS specific configuration\n│   ├── index.html                 - Entry point for browser tests\n│   └── unit/                      - All test files\n└── yarn.lock                      - Current package versions\n\n\nSetup a Stomp broker\n\nA Stomp broker is used for running the tests. I have been using RabbitMQ.\nEdit tests/config/browser-config.js and tests/config/node-config.js as per\nyour setup. Defaults should work for a RabbitMQ default setup on localhost.\nPlease note that in RabbitMQ you will need to enable Stomp and WebStomp plugins.\nA RabbitMQ Dockerfile is provided with the necessary plugins. To use it, run:\ndocker build -t myrabbitmq .\ndocker run -d -p 15674:15674 myrabbitmq\n\n\n\nBuilding and testing\nTo build JavaScript from the CoffeeScript source code:\n$ cake buildTo run tests using nodejs:\n$ cake testTo continuously run tests on file changes:\n$ cake watchBrowser Tests\n\nBrowser and node environments use the same set of test cases.\nOpen test/index.html in your browser.\nIf Chrome fails with \"Uncaught DOMException: Failed to read the 'sessionStorage' property from 'Window'\nyou need to Unblock third-party cookies \nor use Firefox.  \n\nCaution: As both browser and nodejs use same set of test cases and hence same queue\nnames. So, running both together may cause unexpected failures.\nSubmit pull requests\n\nRun cake build to update generated files\nPlease follow GitHub guidelines. Raise an issue if you are unclear.\n\nSTOMP API\nSTOMP over WebSocket provides a straightforward mapping from a STOMP frame \nto a JavaScript object. If you need to understand Stomp protocol,\nplease see http://stomp.github.io/stomp-specification-1.2.html\n\nFrame Object\nPropertyTypeNotes\ncommandStringname of the frame (\"CONNECT\", \"SEND\", etc.)\nheadersJavaScript object\nbodyString\n\n\n\nThe command and headers properties will always be defined but the headers \ncan be empty if the frame has no headers. The body can be null if the frame \ndoes not have a body.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompatClient.html":{"url":"classes/CompatClient.html","title":"class - CompatClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompatClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/compatibility/compat-client.ts\n        \n\n            \n                Description\n            \n            \n                Available for backward compatibility, please shift to using Client.\nDeprecated\n\n            \n\n            \n                Extends\n            \n            \n                    Client\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webSocketFactory: () => void)\n                    \n                \n                        \n                            \n                                Defined in src/compatibility/compat-client.ts:10\n                            \n                        \n\n                \n                    \n                            Available for backward compatibility, please shift to using Client\nand Client#webSocketFactory.\nDeprecated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webSocketFactory\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        connect(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/compatibility/compat-client.ts:88\n                            \n                        \n\n\n                \n                    \n                            Available for backward compatibility, please shift to using Client#activate.\nDeprecated\nThe connect method accepts different number of arguments and types. See the Overloads list. Use the\nversion with headers to pass your broker specific options.\noverloads:\n\nconnect(headers, connectCallback)\nconnect(headers, connectCallback, errorCallback)\nconnect(login, passcode, connectCallback)\nconnect(login, passcode, connectCallback, errorCallback)\nconnect(login, passcode, connectCallback, errorCallback, closeEventCallback)\nconnect(login, passcode, connectCallback, errorCallback, closeEventCallback, host)\n\nparams:\n\nheaders, see Client#connectHeaders\nconnectCallback, see Client#onConnect\nerrorCallback, see Client#onStompError\ncloseEventCallback, see Client#onWebSocketClose\nlogin [String]\npasscode [String]\nhost [String] Optional, virtual host to connect to. STOMP 1.2 makes it mandatory,           however the broker may not mandate it\n\n        client.connect('guest, 'guest', function(frame) {\n          client.debug(\"connected to Stomp\");\n          client.subscribe(destination, function(message) {\n            $(\"#messages\").append(\"\" + message.body + \"\\n\");\n          });\n        });Note: When auto reconnect is active, connectCallback and errorCallback will be called on each connect or error\nSee also: CONNECT Frame\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect(disconnectCallback?: any, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/compatibility/compat-client.ts:108\n                            \n                        \n\n\n                \n                    \n                            Available for backward compatibility, please shift to using Client#activate.\nDeprecated\nSee:\nClient#onDisconnect, and\nClient#disconnectHeaders\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        disconnectCallback\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            send\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        send(destination: string, headers: literal type, body: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/compatibility/compat-client.ts:137\n                            \n                        \n\n\n                \n                    \n                            Available for backward compatibility, use Client#publish.\nSend a message to a named destination. Refer to your STOMP broker documentation for types\nand naming of destinations. The headers will, typically, be available to the subscriber.\nHowever, there may be special purpose headers corresponding to your STOMP broker.\n  Deprecated, use Client#publish\nNote: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n\n        // If you want to send a message with a body, you must also pass the headers argument.\n        client.send(\"/queue/test\", {}, \"Hello, STOMP\");See: http://stomp.github.com/stomp-specification-1.2.html#SEND SEND Frame\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        body\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        reconnect_delay\n                    \n                \n\n\n                \n                    \n                        setreconnect_delay(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/compatibility/compat-client.ts:147\n                                \n                            \n                    \n                        \n                                Available for backward compatibility, renamed to Client#reconnectDelay.\nDeprecated\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ws\n                    \n                \n\n                \n                    \n                        getws()\n                    \n                \n                            \n                                \n                                    Defined in src/compatibility/compat-client.ts:156\n                                \n                            \n                    \n                        \n                                Available for backward compatibility, renamed to Client#webSocket.\nDeprecated\n\n\n                                \n                                    Returns :     any\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        onreceive\n                    \n                \n\n                \n                    \n                        getonreceive()\n                    \n                \n                            \n                                \n                                    Defined in src/compatibility/compat-client.ts:165\n                                \n                            \n                    \n                        \n                                Available for backward compatibility, renamed to Client#onUnhandledMessage.\nDeprecated\n\n\n                                \n                                    Returns :     messageCallbackType\n\n                                \n                        \n                    \n\n                \n                    \n                        setonreceive(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/compatibility/compat-client.ts:174\n                                \n                            \n                    \n                        \n                                Available for backward compatibility, renamed to Client#onUnhandledMessage.\nDeprecated\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        onreceipt\n                    \n                \n\n                \n                    \n                        getonreceipt()\n                    \n                \n                            \n                                \n                                    Defined in src/compatibility/compat-client.ts:184\n                                \n                            \n                    \n                        \n                                Available for backward compatibility, renamed to Client#onUnhandledReceipt.\nPrefer using Client#watchForReceipt.\nDeprecated\n\n\n                                \n                                    Returns :     frameCallbackType\n\n                                \n                        \n                    \n\n                \n                    \n                        setonreceipt(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/compatibility/compat-client.ts:193\n                                \n                            \n                    \n                        \n                                Available for backward compatibility, renamed to Client#onUnhandledReceipt.\nDeprecated\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        heartbeat\n                    \n                \n\n                \n                    \n                        getheartbeat()\n                    \n                \n                            \n                                \n                                    Defined in src/compatibility/compat-client.ts:205\n                                \n                            \n                    \n                        \n                                Available for backward compatibility, renamed to Client#heartbeatIncoming\nClient#heartbeatOutgoing.\nDeprecated\n\n\n                        \n                    \n\n                \n                    \n                        setheartbeat(value: literal type)\n                    \n                \n                            \n                                \n                                    Defined in src/compatibility/compat-client.ts:215\n                                \n                            \n                    \n                        \n                                Available for backward compatibility, renamed to Client#heartbeatIncoming\nClient#heartbeatOutgoing.\nDeprecated\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Client} from \"../client\";\nimport {StompHeaders} from \"../stomp-headers\";\nimport {frameCallbackType, messageCallbackType} from \"../types\";\n\n/**\n * Available for backward compatibility, please shift to using {@link Client}.\n *\n * **Deprecated**\n */\nexport class CompatClient extends Client {\n\n  /**\n   * Available for backward compatibility, please shift to using {@link Client}\n   * and [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   *\n   * **Deprecated**\n   */\n  constructor(webSocketFactory: () => any) {\n    super();\n    this.reconnect_delay = 0;\n    this.webSocketFactory = webSocketFactory;\n    // Default from previous version\n    this.debug = (...message: any[]) => {\n      console.log(...message);\n    };\n  }\n\n  private _parseConnect(...args: any[]): any {\n    let closeEventCallback, connectCallback, errorCallback;\n    let headers: StompHeaders = {};\n    if (args.length \" + message.body + \"\\n\");\n   *          });\n   *        });\n   * ```\n   *\n   * Note: When auto reconnect is active, `connectCallback` and `errorCallback` will be called on each connect or error\n   *\n   * See also: [CONNECT Frame]{@link http://stomp.github.com/stomp-specification-1.2.html#CONNECT_or_STOMP_Frame}\n   */\n  public connect(...args: any[]): void {\n    const out = this._parseConnect(...args);\n\n    if (out[0]) { this.connectHeaders = out[0]; }\n    if (out[1]) { this.onConnect = out[1]; }\n    if (out[2]) { this.onStompError = out[2]; }\n    if (out[3]) { this.onWebSocketClose = out[3]; }\n\n    super.activate();\n  }\n\n  /**\n   * Available for backward compatibility, please shift to using [Client#activate]{@link Client#activate}.\n   *\n   * **Deprecated**\n   *\n   * See:\n   * [Client#onDisconnect]{@link Client#onDisconnect}, and\n   * [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnect(disconnectCallback?: any, headers: StompHeaders = {}): void {\n    if (disconnectCallback) {\n      this.onDisconnect = disconnectCallback;\n    }\n    this.disconnectHeaders = headers;\n\n    super.deactivate();\n  }\n\n  /**\n   * Available for backward compatibility, use [Client#publish]{@link Client#publish}.\n   *\n   * Send a message to a named destination. Refer to your STOMP broker documentation for types\n   * and naming of destinations. The headers will, typically, be available to the subscriber.\n   * However, there may be special purpose headers corresponding to your STOMP broker.\n   *\n   *  **Deprecated**, use [Client#publish]{@link Client#publish}\n   *\n   * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n   *\n   * ```javascript\n   *        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n   *\n   *        // If you want to send a message with a body, you must also pass the headers argument.\n   *        client.send(\"/queue/test\", {}, \"Hello, STOMP\");\n   * ```\n   *\n   * See: http://stomp.github.com/stomp-specification-1.2.html#SEND SEND Frame\n   */\n  public send(destination: string, headers: {'content-length'?: boolean, [key:string]: string} = {}, body: string = ''): void {\n\n    this.publish({destination: destination, headers: headers, body: body});\n  }\n\n  /**\n   * Available for backward compatibility, renamed to [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   *\n   * **Deprecated**\n   */\n  set reconnect_delay(value: number) {\n    this.reconnectDelay = value;\n  }\n\n  /**\n   * Available for backward compatibility, renamed to [Client#webSocket]{@link Client#webSocket}.\n   *\n   * **Deprecated**\n   */\n  get ws(): any {\n    return this._webSocket;\n  }\n\n  /**\n   * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   *\n   * **Deprecated**\n   */\n  get onreceive(): messageCallbackType {\n    return this.onUnhandledMessage;\n  }\n\n  /**\n   * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   *\n   * **Deprecated**\n   */\n  set onreceive(value: messageCallbackType) {\n    this.onUnhandledMessage = value;\n  }\n\n  /**\n   * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}.\n   *\n   * **Deprecated**\n   */\n  get onreceipt(): frameCallbackType {\n    return this.onUnhandledReceipt;\n  }\n\n  /**\n   * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   *\n   * **Deprecated**\n   */\n  set onreceipt(value: frameCallbackType) {\n    this.onUnhandledReceipt = value;\n  }\n\n  private _heartbeatInfo: HeartbeatInfo = new HeartbeatInfo(this);\n\n  /**\n   * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n   * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   *\n   * **Deprecated**\n   */\n  get heartbeat() {\n    return this._heartbeatInfo;\n  }\n\n  /**\n   * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n   * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   *\n   * **Deprecated**\n   */\n  set heartbeat(value: {incoming: number, outgoing: number}) {\n    this.heartbeatIncoming = value.incoming;\n    this.heartbeatOutgoing = value.outgoing;\n  }\n}\n\n/**\n * @internal\n */\nclass HeartbeatInfo {\n  constructor (private client: CompatClient) {\n  }\n\n  get outgoing(): number {\n    return this.client.heartbeatOutgoing;\n  }\n\n  set outgoing(value: number) {\n    this.client.heartbeatOutgoing = value;\n  }\n\n  get incoming(): number {\n    return this.client.heartbeatIncoming;\n  }\n\n  set incoming(value: number) {\n    this.client.heartbeatIncoming = value;\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
